#!/bin/bash
{
	#////////////////////////////////////
	# DietPi CPU Info Script
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - Prints CPU information
	#////////////////////////////////////

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#-----------------------------------------------------------------------------------
	#Obtain data
	CPU_TEMP_CURRENT=$(( $(cat /sys/class/thermal/thermal_zone0/temp) / 1000 ))
	CPU_TEMP_PRINT=""
	if (( CPU_TEMP_CURRENT < 35 )); then
		CPU_TEMP_PRINT="\e[96m$CPU_TEMP_CURRENT'c\e[0m \e[90m(As cold as ice)!\e[0m"
	elif (( CPU_TEMP_CURRENT < 45 )); then
		CPU_TEMP_PRINT="\e[92m$CPU_TEMP_CURRENT'c\e[0m \e[90m(Optimal temprature).\e[0m"
	elif (( CPU_TEMP_CURRENT < 65 )); then
		CPU_TEMP_PRINT="\e[93m$CPU_TEMP_CURRENT'c\e[0m \e[90m(Running warm, but safe).\e[0m"
	elif (( CPU_TEMP_CURRENT >= 65 )); then
		CPU_TEMP_PRINT="\e[91m$CPU_TEMP_CURRENT'c Warning: Frying eggs option is now available.\e[0m"
	fi
	
	CPU_GOV_CURRENT=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor)

	#-----------------------------------------------------------------------------------
	#Print
	echo -e ""
	echo -e " \e[38;5;93m─────────────────────────────────────────────────────\e[0m\n \e[1mDietPi CPU Info\e[0m\n\e[90m Use dietpi-config to change CPU / performance options\e[0m\n \e[38;5;93m─────────────────────────────────────────────────────\e[0m"

	#Current Temp
	echo -e " Temp        \e[90m|\e[0m     $CPU_TEMP_PRINT"

	#Current Gov
	echo -e " Governor    \e[90m|\e[0m     $CPU_GOV_CURRENT"
	if [ "$CPU_GOV_CURRENT" = "ondemand" ] ||
		[ "$CPU_GOV_CURRENT" = "conservative" ]; then
		echo -e " Throttle up \e[90m|\e[0m     $(cat /DietPi/dietpi.txt | grep 'cpu_usage_throttle_up' | sed 's/cpu_usage_throttle_up=//g')% CPU usage"
	fi

	#Current Frequency
	echo -e ""
	echo -e " \e[90m                Current Freq    Min Freq   Max Freq\e[0m"
	for ((i=0; i<$(nproc); i++))
	do
		echo -e " \e[90mCPU$i\e[0m        \e[90m|\e[0m      $(( $(cat /sys/devices/system/cpu/cpu$i/cpufreq/scaling_cur_freq) / 1000 )) Mhz      \e[90m$(( $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq) / 1000 )) Mhz    $(( $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq) / 1000 )) Mhz\e[0m"
	done
	
	echo -e ""
	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}