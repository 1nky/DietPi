#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Boot Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/boot
	# - activates on boot from dietpi-boot.service
	#////////////////////////////////////

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	export G_PROGRAM_NAME='DietPi-Boot'
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	#/////////////////////////////////////////////////////////////////////////////////////
	#Globals
	#/////////////////////////////////////////////////////////////////////////////////////

	Apply_DietPi_FirstRun_Settings(){

		#----------------------------------------------------------------
		#Automation
		# - Set NTPD mode
		/DietPi/dietpi/func/dietpi-set_software ntpd-mode $(grep -m1 '^[[:blank:]]*CONFIG_NTP_MODE=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')
		#----------------------------------------------------------------

	}

	Wait_For_Valid_Network_Connection(){

		#Attempt to wait for a valid network connection
		local max_loops=0

		#	Wait mode, max time
		local boot_wait_for_network=$(grep -m1 '^[[:blank:]]*CONFIG_BOOT_WAIT_FOR_NETWORK=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')
		(( $boot_wait_for_network == 1 )) && max_loops=10

		local loop_count=0
		while (( $loop_count <= $max_loops ))
		do

			G_DIETPI-NOTIFY 2 "$(date) | Waiting for valid network connection, before continuing boot | Mode=$boot_wait_for_network"

			(( $boot_wait_for_network < 2 && loop_count++ ))

			if [[ $(ip r) =~ ' via ' ]]; then

				G_DIETPI-NOTIFY 0 "$(date) | Valid network connection found"
				break

			elif (( $loop_count > $max_loops )); then

				G_DIETPI-NOTIFY 1 "$(date) | Valid network connection wait timed out"
				break

			fi

			sleep 1

		done

	}

	Run_Init(){

		#----------------------------------------------------------------
		#WiFi Country | Additional fallback for (older kernel?) devices that fail with wpa_supplicant.conf https://github.com/Fourdee/DietPi/issues/838
		which iw &> /dev/null && iw reg set "$(grep -m1 '^[[:blank:]]*CONFIG_WIFI_COUNTRY_CODE=' /DietPi/dietpi.txt | sed 's/^[^=]*=//')" &
		#----------------------------------------------------------------
		#Network failure workarounds
		# - Jessie service fails to start: https://github.com/Fourdee/DietPi/issues/2075#issuecomment-424747579
		(( $G_DISTRO == 3 )) && systemctl start networking

		# - Failsafe, bring up interfaces, if somehow not done by networking.service. If those are up already, nothing will happen.
		if grep -qiE '^[[:blank:]]*(allow-hotplug|auto)[[:blank:]]+wlan' /etc/network/interfaces; then

			local wlan_index=$(sed -n 2p /DietPi/dietpi/.network)
			# - Workaround: Wlan currently fails to connect during boot, so, manually drop and reconnect: https://github.com/Fourdee/DietPi/issues/602#issuecomment-262806470
			#	OPi Zero 2 / Neo Air
			(( $G_HW_MODEL == 35 || $G_HW_MODEL == 64 )) && ifdown wlan$wlan_index 2> /dev/null

			ifup wlan$wlan_index 2> /dev/null

		fi
		if grep -qiE '^[[:blank:]]*(allow-hotplug|auto)[[:blank:]]+eth' /etc/network/interfaces; then

			ifup eth$(sed -n 1p /DietPi/dietpi/.network) 2> /dev/null

		fi
		#----------------------------------------------------------------
		Wait_For_Valid_Network_Connection
		#----------------------------------------------------------------
		#Grab IP data
		/DietPi/dietpi/func/obtain_network_details
		#----------------------------------------------------------------
		#Mount all drives again (eg: network shares)
		mount -a
		#----------------------------------------------------------------
		#Lower dmesg print level (mostly for Odroid C2 where HiFi Shield prints info when starting/stopping stream on tty1)
		dmesg -n 1
		#----------------------------------------------------------------

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#----------------------------------------------------------------
	# Init
	Run_Init

	#----------------------------------------------------------------
	#Pre-Installed image, 1st run
	if (( $G_DIETPI_INSTALL_STAGE == 2 )); then

		# - Set swap
		/DietPi/dietpi/func/dietpi-set_dphys-swapfile $(grep -m1 '^[[:blank:]]*AUTO_SETUP_SWAPFILE_SIZE=' /DietPi/dietpi.txt | sed 's/^[^=]*=//') "$(grep -m1 '^[[:blank:]]*AUTO_SETUP_SWAPFILE_LOCATION=' /DietPi/dietpi.txt | sed 's/.*=//')"

		# - Run survey
		[[ -f /DietPi/dietpi/.dietpi-survey ]] && rm /DietPi/dietpi/.dietpi-survey
		/DietPi/dietpi/dietpi-survey 1 &

		# - Continue with normal boot
		export G_DIETPI_INSTALL_STAGE=1
		echo $G_DIETPI_INSTALL_STAGE > /DietPi/dietpi/.install_stage

	fi

	#Normal Boot
	if (( $G_DIETPI_INSTALL_STAGE == 1 )); then

		/DietPi/dietpi/func/run_ntpd 1 &

		if grep -qi '^[[:blank:]]*CONFIG_CHECK_DIETPI_UPDATES=1' /DietPi/dietpi.txt; then

			/DietPi/dietpi/dietpi-update 2 &

		fi

		/DietPi/dietpi/func/dietpi-banner 1

	#----------------------------------------------------------------
	#First run prep
	elif (( $G_DIETPI_INSTALL_STAGE == -1 )); then

		/DietPi/dietpi/func/dietpi-banner 0

		# - Activate and apply any 1st run settings
		Apply_DietPi_FirstRun_Settings

		# - Finished
		/DietPi/dietpi/func/dietpi-banner 0
		echo -e ' Default Login:\n Username = root\n Password = dietpi\n'

		# - Set Install Stage index to trigger DietPi-Software installation on login
		echo 0 > /DietPi/dietpi/.install_stage

	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}
