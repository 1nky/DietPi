#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Boot Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/boot
	# - activates on boot from /etc/init.d/dietpi-service
	#////////////////////////////////////

	#/////////////////////////////////////////////////////////////////////////////////////
	#Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	HW_MODEL=0
	DISTRO=0

	# -3 = first boot / -2 = partition / -1 = filesystem / 0 = run dietpi-software at login / 1 = completed
	DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)

	Read_Hw_Model(){

		HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
		DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)

	}

	RPi_Set_Clock_Speeds(){

		#RPi's
		if (( $HW_MODEL < 10 )); then

			#If no overclocking is set.
			if (( $(cat /DietPi/config.txt | grep -ci -m1 '^#over_voltage=') == 1 )) &&
				(( $(cat /DietPi/config.txt | grep -ci -m1 '^#arm_freq=') == 1 )) &&
				(( $(cat /DietPi/config.txt | grep -ci -m1 '^#core_freq=') == 1 )) &&
				(( $(cat /DietPi/config.txt | grep -ci -m1 '^#sdram_freq=') == 1 )); then

				#RPi v1 - Set safe clock
				if (( $HW_MODEL < 2 )); then
					sed -i '/over_voltage=/c\over_voltage=2' /DietPi/config.txt
					sed -i '/arm_freq=/c\arm_freq=900' /DietPi/config.txt
					sed -i '/core_freq=/c\#core_freq=250' /DietPi/config.txt
					sed -i '/sdram_freq=/c\#sdram_freq=400' /DietPi/config.txt
				#RPi v2 - set values to current (used in dietpi-config as reference for overclocking / current values)
				elif (( $HW_MODEL == 2 )); then
					sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
					sed -i '/arm_freq=/c\#arm_freq=900' /DietPi/config.txt
					sed -i '/core_freq=/c\#core_freq=250' /DietPi/config.txt
					sed -i '/sdram_freq=/c\#sdram_freq=400' /DietPi/config.txt
				#RPi v3 - set values to current (used in dietpi-config as reference for overclocking / current values)
				elif (( $HW_MODEL == 3 )); then
					sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
					sed -i '/arm_freq=/c\#arm_freq=1200' /DietPi/config.txt
					sed -i '/core_freq=/c\#core_freq=400' /DietPi/config.txt
					sed -i '/sdram_freq=/c\#sdram_freq=400' /DietPi/config.txt
				fi

			fi
		fi
	}

	Partition_SD(){

		#Stop Services
		/DietPi/dietpi/dietpi-services stop

		cat << _EOF_ | fdisk /dev/mmcblk0
p
d
2
n
p
2
$(parted /dev/mmcblk0 -ms unit s p | grep ':ext4::;' | sed 's/:/ /g' | sed 's/s//g' | awk '{ print $2 }')

p
w

_EOF_

	}

	Expand_SD(){

		# Stop Services
		/DietPi/dietpi/dietpi-services stop

		# Resize Filesystem to new partition size
		resize2fs /dev/mmcblk0p2
	}

	Apply_DietPi_FirstRun_Settings(){

		#----------------------------------------------------------------
		# Network
		local index_eth=$(sed -n 1p /DietPi/dietpi/.network)
		local index_wlan=$(sed -n 2p /DietPi/dietpi/.network)

		#Replace all eth0 and wlan0 values to the indexs DietPi has found.
		sed -i "s/eth0/eth$index_eth/g" /etc/network/interfaces
		sed -i "s/wlan0/wlan$index_wlan/g" /etc/network/interfaces

		#Grab user requested settings from /dietpi.txt
		local Ethernet_Enabled=$(cat /DietPi/dietpi.txt | grep -ci -m1 'Ethernet_Enabled=1')
		local Wifi_Enabled=$(cat /DietPi/dietpi.txt | grep -ci -m1 'Wifi_Enabled=1')

		local Wifi_SSID=$(cat /DietPi/dietpi.txt | grep -m1 '^Wifi_SSID' | sed 's/.*=//')
		local Wifi_KEY=$(cat /DietPi/dietpi.txt | grep -m1 '^Wifi_KEY' | sed 's/.*=//')

		local Use_Static=$(cat /DietPi/dietpi.txt | grep -ci -m1 '^Use_Static=1')
		local Static_IP=$(cat /DietPi/dietpi.txt | grep -m1 '^Static_IP' | sed 's/.*=//')
		local Static_Mask=$(cat /DietPi/dietpi.txt | grep -m1 '^Static_Mask' | sed 's/.*=//')
		local Static_Gateway=$(cat /DietPi/dietpi.txt | grep -m1 '^Static_Gateway' | sed 's/.*=//')
		local Static_Dns=$(cat /DietPi/dietpi.txt | grep -m1 '^Static_DNS' | sed 's/.*=//')

		# - Wifi
		if (( $Wifi_Enabled == 1 )); then
			#Enable Wlan, disable Eth
			Ethernet_Enabled=0
			sed -i "/auto wlan/c\auto wlan$index_wlan" /etc/network/interfaces
			sed -i "/auto eth/c\#auto eth$index_eth" /etc/network/interfaces
			#Set SSid
			sed -i "/wireless-essid/c\wireless-essid $Wifi_SSID" /etc/network/interfaces
			sed -i "/wpa-ssid/c\wpa-ssid $Wifi_SSID" /etc/network/interfaces
			#Set Key
			sed -i "/wireless-key/c\wireless-key $Wifi_KEY" /etc/network/interfaces
			sed -i "/wpa-psk/c\wpa-psk $Wifi_KEY" /etc/network/interfaces
		# - Ethernet
		elif (( $Ethernet_Enabled == 1 )); then
			#Enable Eth, disable Wlan
			Wifi_Enabled=0
			sed -i "/auto eth/c\auto eth$index_eth" /etc/network/interfaces
			sed -i "/auto wlan/c\#auto wlan$index_wlan" /etc/network/interfaces
		fi

		# - Static IPs
		if (( $Use_Static == 1 )); then

			#enable dns-nameservers
			sed -i 's/^#dns-nameservers/dns-nameservers/g' /etc/network/interfaces

			if (( $Wifi_Enabled == 1 )); then
				sed -i "/iface wlan/c\iface wlan$index_wlan inet static" /etc/network/interfaces
			elif (( $Ethernet_Enabled == 1 )); then
				sed -i "/iface eth/c\iface eth$index_eth inet static" /etc/network/interfaces
			fi

			sed -i "/address/c\address $Static_IP" /etc/network/interfaces
			sed -i "/netmask/c\netmask $Static_Mask" /etc/network/interfaces
			sed -i "/gateway/c\gateway $Static_Gateway" /etc/network/interfaces
			sed -i "/dns-nameservers/c\dns-nameservers $Static_Dns" /etc/network/interfaces
		fi

		#Kill dhclient
		killall dhclient &> /dev/null

		#Drop Connections
		ifdown eth"$index_eth" &> /dev/null
		ifdown wlan"$index_wlan" &> /dev/null

		#Start Networking (disabled after /DietPi/dietpi/finalize)
		if (( $DISTRO == 3 )); then
			systemctl restart network.service
		else
			/etc/init.d/networking reload
			/etc/init.d/networking restart
		fi

		#Manually bring up adapters (just incase)
		if (( $Wifi_Enabled == 1 )); then
			ifup wlan"$index_wlan"
		elif (( $Ethernet_Enabled == 1 )); then
			ifup eth"$index_eth"
		fi

		#Update network details
		/DietPi/dietpi/func/obtain_network_details

	}

	Run_Init(){

		#----------------------------------------------------------------
		#Update NTP (+thread)
		local ntpd_update_mode=$(cat /DietPi/dietpi.txt | grep -m1 '^ntpd_update_mode=' | sed 's/.*=//')

		if (( $ntpd_update_mode > 0 )); then

			#Daemon + Drift
			if (( $ntpd_update_mode == 4 )); then

				#Sync time now, then run daemon (+thread)
				ntpd -gq && ntpd -g -l /var/log/ntpd.log &

			#run, exit when updated.
			else
				ntpd -gq -l /var/log/ntpd.log &> /dev/null &
			fi
		fi
		#----------------------------------------------------------------
		#Write HW model and details to file
		/DietPi/dietpi/dietpi-obtain_hw_model
		#Read Hw model
		Read_Hw_Model
		#----------------------------------------------------------------
		#Find first index number for network devices (checks 0-9)
		/DietPi/dietpi/func/obtain_network_details
		#----------------------------------------------------------------
		#Disable RPi hdmi output if set in dietpi.txt
		if (( $HW_MODEL < 10 )); then

			#FBset value below allows for reduced memory bandwidth usage from VideoCore (eg: Faster RAM bandwidth/performance)
			if (( $(cat /DietPi/dietpi.txt | grep -ci -m1 'rpi_hdmi_output=0') == 1 )); then
				fbset -xres 16 -yres 16 -vxres 16 -vyres 16 -depth 8 &> /dev/null
				/opt/vc/bin/tvservice -o &> /dev/null
			fi

		fi
		#----------------------------------------------------------------
		#Apply DietPi CPU Governor and settings (+thread)
		/DietPi/dietpi/dietpi-cpu_set &
		#----------------------------------------------------------------
		#Ensure DietPi login and banner scripts always exists (eg: if user disables it)
		if (( $(grep -ci -m1 '^/DietPi/dietpi/login' /root/.bashrc) == 0 )); then
			echo -e "/DietPi/dietpi/login" >> /root/.bashrc
		fi
		#----------------------------------------------------------------
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	# Init
	Run_Init

	#----------------------------------------------------------------
	#Normal Boot
	if (( $DIETPI_INSTALL_STAGE == 1 )); then

		if (( $( cat /DietPi/dietpi.txt | grep -ci -m1 'dietpi_check_for_updates=1') == 1 )); then
			#Check for DietPi updates (+thread)
			/DietPi/dietpi/dietpi-update 2 &> /dev/null &
		fi

		/DietPi/dietpi/dietpi-banner 1

	#----------------------------------------------------------------
	#Filesystem prep, stage 1/2
	elif (( $DIETPI_INSTALL_STAGE == -3 )); then

		# Set RPi v1 safe overclocking profile (900mhz)
		RPi_Set_Clock_Speeds

		/DietPi/dietpi/dietpi-banner 0

		#Set hostname
		/DietPi/dietpi/func/change_hostname "$(cat /DietPi/dietpi.txt | grep -m1 '^Hostname=' | sed 's/.*=//')"

		#Automation - Set auto login for next bootup
		if (( $(cat /DietPi/dietpi.txt | grep -ci -m1 '^AUTO_AutoLogin=1') == 1 )); then
			/DietPi/dietpi/dietpi-autostart 7
		fi

		echo -e " Expanding SD/Flash partition. Please wait..."
		Partition_SD

		echo -2 > /DietPi/dietpi/.install_stage

		#SystemD. Does not process the ExecStop section of a service, if the same service is still running an ExecStart. So we must manually do what we need before reboot.
		/DietPi/dietpi/conf/dietpi-service stop
		reboot

	#----------------------------------------------------------------
	#Filesystem prep, stage 2/2
	elif (( $DIETPI_INSTALL_STAGE == -2 )); then

		#Expand rootFS
		Expand_SD
		echo -1 > /DietPi/dietpi/.install_stage

		/DietPi/dietpi/dietpi-services stop

		#Enable/Create swapfile.
		/DietPi/dietpi/func/dietpi-set_dphys-swapfile $(cat /DietPi/dietpi.txt | grep -m1 '^Swapfile_Size=' | sed 's/.*=//' )

		#Generate unique Dropbear host-key:
		rm /etc/dropbear/*key &> /dev/null
		dropbearkey -t rsa -f /etc/dropbear/dropbear_rsa_host_key &> /dev/null

		#Activate DietPi Boot Loader User Settings and bring up network (dietpi.txt)
		Apply_DietPi_FirstRun_Settings

		#Check if apt-get update needs to be run (also runs in dietpi-software when internet is confirmed, and, a previous attempt failed).
		/DietPi/dietpi/dietpi-apt-get_update 0 &> /dev/null

		#Finished
		/DietPi/dietpi/dietpi-banner 0
		echo -e " Default Login:\n Username = root\n Password = dietpi\n"

		#Set Install Stage index to trigger DietPi-Software installation on login
		echo 0 > /DietPi/dietpi/.install_stage

	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}