#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Boot Script
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/boot
	# - activates on boot from /etc/init.d/dietpi-service
	#////////////////////////////////////

	#/////////////////////////////////////////////////////////////////////////////////////
	#Pi/Odroid Model
	#/////////////////////////////////////////////////////////////////////////////////////
	HW_MODEL=0
	HW_MODEL_DESCRIPTION=""
	DISTRO=0

	Read_Hw_Model(){

		HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
		HW_MODEL_DESCRIPTION=$(sed -n 2p /DietPi/dietpi/.hw_model)
		DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Obtain Install Stage Index
	#/////////////////////////////////////////////////////////////////////////////////////
	# -3 = first boot / -2 = partition / -1 = filesystem / 0 = run dietpi-software at login / 1 = completed
	DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)

	Set_Initial_Overclock(){

		if (( $HW_MODEL <= 1 )); then
			sed -i '/over_voltage=/c\over_voltage=2' /DietPi/config.txt
			sed -i '/arm_freq=/c\arm_freq=900' /DietPi/config.txt
			sed -i '/core_freq=/c\#core_freq=250' /DietPi/config.txt
			sed -i '/sdram_freq=/c\#sdram_freq=400' /DietPi/config.txt
		fi
	}

	Partition_SD(){
		#Stop Services
		/DietPi/dietpi/dietpi-services stop

		# Get starting partition sector for partition 2 / ext4
		local partition_start=$(parted /dev/mmcblk0 -ms unit s p | grep ':ext4::;' | sed 's/:/ /g' | sed 's/s//g' | awk '{ print $2 }')

		#Recreate partition to full size of MicroSd card
		echo -e "p
		d
		2
		n
		p
		2
		$partition_start

		p
		w
		" | fdisk /dev/mmcblk0

	}

	Expand_SD(){

		# Stop Services
		/DietPi/dietpi/dietpi-services stop

		# Resize Filesystem to new partition size
		resize2fs /dev/mmcblk0p2
	}

	Apply_DietPi_FirstRun_Settings(){

		#----------------------------------------------------------------
		# Network

		local index_eth=$(sed -n 1p /DietPi/dietpi/.network)
		local index_wlan=$(sed -n 2p /DietPi/dietpi/.network)

		#Grab user requested settings from /dietpi.txt
		local Ethernet_Enabled=$(cat /DietPi/dietpi.txt | grep -ci -m1 'Ethernet_Enabled=1')
		local Wifi_Enabled=$(cat /DietPi/dietpi.txt | grep -ci -m1 'Wifi_Enabled=1')

		local Wifi_SSID=$(cat /DietPi/dietpi.txt | grep Wifi_SSID | sed 's/Wifi_SSID=//g')
		local Wifi_KEY=$(cat /DietPi/dietpi.txt | grep Wifi_KEY | sed 's/Wifi_KEY=//g')

		local Use_Static=$(cat /DietPi/dietpi.txt | grep -ci -m1 'Use_Static=1')
		local Static_IP=$(cat /DietPi/dietpi.txt | grep Static_IP | sed 's/Static_IP=//g')
		local Static_Mask=$(cat /DietPi/dietpi.txt | grep Static_Mask | sed 's/Static_Mask=//g')
		local Static_Gateway=$(cat /DietPi/dietpi.txt | grep Static_Gateway | sed 's/Static_Gateway=//g')

		#Apply The Requested Settings

		#Wifi
		if (( $Wifi_Enabled == 1 )); then
			#Enable Wlan, disable Eth
			Ethernet_Enabled=0
			sed -i "/auto wlan/c\auto wlan$index_wlan" /etc/network/interfaces
			sed -i "/auto eth/c\#auto eth$index_eth" /etc/network/interfaces
			#Set SSid
			sed -i "/wireless-essid/c\wireless-essid $Wifi_SSID" /etc/network/interfaces
			sed -i "/wpa-ssid/c\wpa-ssid $Wifi_SSID" /etc/network/interfaces
			#Set Key
			sed -i "/wireless-key/c\wireless-key $Wifi_KEY" /etc/network/interfaces
			sed -i "/wpa-psk/c\wpa-psk $Wifi_KEY" /etc/network/interfaces
		#Ethernet
		elif (( $Ethernet_Enabled == 1 )); then
			#Enable Eth, disable Wlan
			Wifi_Enabled=0
			sed -i "/auto eth/c\auto eth$index_eth" /etc/network/interfaces
			sed -i "/auto wlan/c\#auto wlan$index_wlan" /etc/network/interfaces
		fi

		#Static IPs
		if (( $Use_Static == 1 )); then
			if (( $Wifi_Enabled == 1 )); then
				sed -i "/iface wlan/c\iface wlan$index_wlan inet static" /etc/network/interfaces
			elif (( $Ethernet_Enabled == 1 )); then
				sed -i "/iface eth/c\iface eth$index_eth inet static" /etc/network/interfaces
			fi

			sed -i "/address/c\address $Static_IP" /etc/network/interfaces
			sed -i "/netmask/c\netmask $Static_Mask" /etc/network/interfaces
			sed -i "/gateway/c\gateway $Static_Gateway" /etc/network/interfaces
		fi

		#Kill dhclient
		killall dhclient &> /dev/null

		#Drop Connections
		ifdown eth"$index_eth" &> /dev/null
		ifdown wlan"$index_wlan" &> /dev/null

		#Start Networking (disabled after /DietPi/dietpi/finalize)
		/etc/init.d/networking reload
		/etc/init.d/networking restart

		#14.04 - Manually bring up adapters
		if (( $DISTRO == 2 )); then
			if (( $Wifi_Enabled == 1 )); then
				ifup wlan"$index_wlan"
			elif (( $Ethernet_Enabled == 1 )); then
				ifup eth"$index_eth"
			fi
		fi
	}

	Run_Init(){

		#----------------------------------------------------------------
		#Update NTP (+thread)
		ntpd -gq &> /dev/null &
		#----------------------------------------------------------------
		#Write HW model and details to file
		/DietPi/dietpi/dietpi-obtain_hw_model
		#Read Hw model
		Read_Hw_Model
		#----------------------------------------------------------------
		#Find first index number for network devices (checks 0-9)
		/DietPi/dietpi/func/obtain_network_details
		#----------------------------------------------------------------
		#Disable RPi hdmi output if set in dietpi.txt
		if (( $HW_MODEL < 10 )); then

			#FBset value below allows for reduced memory bandwidth usage from VideoCore (eg: Faster RAM bandwidth/performance)
			if (( $(cat /DietPi/dietpi.txt | grep -ci -m1 'rpi_hdmi_output=0') == 1 )); then
				fbset -xres 16 -yres 16 -vxres 16 -vyres 16 -depth 8 &> /dev/null
				/opt/vc/bin/tvservice -o &> /dev/null
			fi

		fi
		#----------------------------------------------------------------
		#Apply DietPi CPU Governor and settings (+thread)
		/DietPi/dietpi/dietpi-cpu_set &
		#----------------------------------------------------------------
		#Ensure DietPi banner on login hasnt been removed by user.
		if (( $(grep -ci -m1 "/boot/dietpi/login" /root/.bashrc) == 0 )); then
			echo -e "/boot/dietpi/login" >> /root/.bashrc
		fi
		#----------------------------------------------------------------

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#----------------------------------------------------------------
	# Init
	Run_Init

	#----------------------------------------------------------------
	#Normal Boot
	if (( $DIETPI_INSTALL_STAGE == 1 )); then

		if (( $( cat /DietPi/dietpi.txt | grep -ci -m1 'dietpi_check_for_updates=1') == 1 )); then
			#Check for DietPi updates (+thread)
			/DietPi/dietpi/dietpi-update 2 &> /dev/null &
		fi

		/DietPi/dietpi/dietpi-banner 1

	#----------------------------------------------------------------
	#Filesystem prep, stage 1/2
	elif (( $DIETPI_INSTALL_STAGE == -3 )); then

		# Set RPi v1 safe overclocking profile (900mhz)
		Set_Initial_Overclock

		Partition_SD

		/DietPi/dietpi/dietpi-banner 0
		echo -e " The system will reboot to start the filesystem prep. \n Nearly done. \n"

		echo -e "-2" > /DietPi/dietpi/.install_stage

		reboot

	#----------------------------------------------------------------
	#Filesystem prep, stage 2/2
	elif (( $DIETPI_INSTALL_STAGE == -2 )); then
		Expand_SD

		/DietPi/dietpi/dietpi-banner 0
		echo -e " The system will reboot, This will complete the filesystem expansion \n"

		echo -e "-1" > /DietPi/dietpi/.install_stage

		reboot

	#----------------------------------------------------------------
	#Finish up, set .install_stage to 0 (runs dietpi-software on login)
	elif (( $DIETPI_INSTALL_STAGE == -1 )); then

		#stop all services.
		/DietPi/dietpi/dietpi-services stop

		#Enable Swap file (disabled until partition/filesystem ajustments have been completed)
		sed -i '/\/sbin\/dphys-swapfile setup/c\\/sbin\/dphys-swapfile setup' /etc/init.d/dphys-swapfile
		sed -i '/\/sbin\/dphys-swapfile swapon/c\\/sbin\/dphys-swapfile swapon' /etc/init.d/dphys-swapfile
		dphys-swapfile setup
		dphys-swapfile swapon

		#Generate unique Dropbear host-key:
		rm /etc/dropbear/*key &> /dev/null
		dropbearkey -t rsa -f /etc/dropbear/dropbear_rsa_host_key &> /dev/null

		#Activate DietPi Boot Loader User Settings and bring up network (dietpi.txt)
		Apply_DietPi_FirstRun_Settings

		#Check if apt-get update needs to be run (also runs in dietpi-software when internet is confirmed, and, a previous attempt failed).
		/DietPi/dietpi/dietpi-apt-get_update 0 &> /dev/null

		#Finished
		/DietPi/dietpi/dietpi-banner 0
		echo -e " Default Login:\n Username = root\n Password = dietpi\n"

		#Set Install Stage index to trigger DietPi-Software installation on login
		echo -e "0" > /DietPi/dietpi/.install_stage

	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}