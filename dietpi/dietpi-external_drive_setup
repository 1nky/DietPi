#!/bin/bash
{
	# ////////////////////////////////////
	# DietPi External drive mount
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info: - Formats and Mounts /dev/sda1 /mnt/usb_1
	#
	# Notes: Script does not support VM image.
	#////////////////////////////////////

	#Prevent VM image from running this script
	HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
	HW_NAME=$(sed -n 2p /DietPi/dietpi/.hw_model)
	if (( $HW_MODEL == 20 )); then
		echo -e "\nThis script does not support the Virtual Machine image.\n"
		exit
	fi

	usb_hdd_filesystem="None"
	usb_hdd_mounted=0
	CheckDriveConnected(){

		usb_hdd_filesystem=$(blkid -o list | grep '/dev/sda1' | awk '{ print $2 }')
		usb_hdd_mounted=$(df -h | grep -ci -m1 '/mnt/usb_1')
	}

	RUNNING_SETUP=1
	Run_Setup(){

		clear
		# Stop Services
		/DietPi/dietpi/dietpi-services stop

		#Unmount all connected drives
		umount /dev/sd[a-z][1-9]

		# Wait for drive to be connected
		clear
		echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n --------------------------------"
		echo -e " Please Insert a USB Drive into your $HW_NAME."
		echo -e " \n Waiting for a device to be connected.\n - Press CTRL+C to abort.\n\n If aborted, you can restart the DietPi Installation by running:\n dietpi-software\n"

		while true; do
			if [ -d /sys/block/sda ]; then
				break
			else
				sleep 1
			fi
		done


		#Check if filesystem already exists and is mountable
		# - uncomment and enable ntfs-3g and ext4 fstab entires
		sed -i -E '/\/mnt\/usb_1[[:space:]]+ntfs-3g/s/^##*//' /etc/fstab
		sed -i -E '/\/mnt\/usb_1[[:space:]]+ext4/s/^##*//' /etc/fstab
		# - Attempt to mount
		mount -a
		CheckDriveConnected
		if (( $usb_hdd_mounted == 1 )); then
			clear
			echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n --------------------------------"
			echo -e " An Existing $usb_hdd_filesystem Drive has Been Found \n"
			df /dev/sda1 -h
			echo -e ""

			if [ "$usb_hdd_filesystem" = "ntfs" ]; then
				echo -e " (WARNING): \n - NTFS is not recommended as it requires higher cpu usage \n - EXT4 will maximise the filesystem performance of your Pi \n \n If you have data (eg: movies) on this drive you want to keep, press enter \n "
				read -r -p " Would you like to format this drive to EXT4? [y/N] " response
			else
				read -r -p " Would you like to format this drive? [y/N] " response
			fi

			case $response in
				[yY][eE][sS]|[yY])
					Run_Format
					;;
			esac

		#Format drive
		else
			Run_Format
		fi

		#Test the new drive
		clear
		CheckDriveConnected
		if (( $usb_hdd_mounted == 1 )); then

			#Add root delay to RPi (Prevents slow powering external drives, from failing to be ready and mountable during boot.)
			if (( $HW_MODEL < 10 )) &&
				(( $(cat /boot/cmdline.txt | grep -ci -m1 'rootdelay=') == 0 )); then
				sed -i "s/rootwait/rootwait rootdelay=10/g" /boot/cmdline.txt &> /dev/null
			fi

			#Disable the unused /dev/sda mount entries, else, SystemD has a "hissy fit"....
			if [ "$usb_hdd_filesystem" = "ext4" ]; then
				sed -i -E '/\/mnt\/usb_1[[:space:]]+ntfs-3g/s/^/#/' /etc/fstab
			elif [ "$usb_hdd_filesystem" = "ntfs" ]; then
				sed -i -E '/\/mnt\/usb_1[[:space:]]+ext4/s/^/#/' /etc/fstab
			fi

			whiptail --title "Dedicated Drive Completed" --msgbox "Dedicated USB harddrive setup completed successfully:\n\nFilesystem      Size  Used Avail Use% Mounted on\n$(df -h | grep '/mnt/usb_1')" --backtitle "DietPi-External Drive Setup" 12 70
			RUNNING_SETUP=0
		else

			whiptail --title "Error - Not Mounted" --yesno "DietPi was unable to complete the external USB harddrive setup. The drive may have incompatible partitions and/or filesystem. Formatting the drive may resolve the issue.\n\nWould you like to try again?" --defaultno --backtitle "DietPi-External Drive Setup" 11 70
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				RUNNING_SETUP=1
			else
				RUNNING_SETUP=0
			fi
		fi

	}

	Run_Format(){

		#Confirm user wants to wipe this drive
		clear
		echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n --------------------------------"
		echo -e " Drive ready to be formatted to EXT4"
		echo -e " \n WARNING: This will delete all data on the USB drive \n \n"
		read -r -p " Do you wish to Format this drive? [y/N] " response
		case $response in
			[yY][eE][sS]|[yY])

				#Unmount all connected drives
				umount /dev/sd[a-z][1-9]
				#Clear MBR and all partitions from device
				dd if=/dev/zero of=/dev/sda bs=512 count=1

				#Create New partition on /dev/sda
				echo -e "o\nn\np\n1\n\n\nw" | fdisk /dev/sda
				#Format ext4
				umount /dev/sd[a-z][1-9]
				echo -e "y" | mkfs.ext4 /dev/sda1
				resize2fs /dev/sda1
				mount -a
				chown -R root:root /mnt/usb_1
			;;
		esac

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	while (( $RUNNING_SETUP == 1 )); do
		Run_Setup
	done

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}