#!/bin/bash
{
	# ////////////////////////////////////
	# DietPi External drive mount
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info: - Formats and Mounts /dev/sda1 /mnt/usb_1
	#
	# Notes: Script does not support VM image.
	# This script needs a complete rewrite, messy. Support multiple drives etc.
	#
	# Usage:
	# 	  = Menu
	#	1 = Automated format and mounting of /dev/sda
	#////////////////////////////////////

	#Force en_GB Locale for whole script. Prevents incorrect parsing with non-english locales.
	LANG=en_GB.UTF-8

	#Prevent VM image from running this script
	HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
	HW_NAME=$(sed -n 2p /DietPi/dietpi/.hw_model)
	if (( $HW_MODEL == 20 )); then
		echo -e "\nThis script does not support the Virtual Machine image.\n"
		exit
	fi

	#Grab Input (valid interger)
	INPUT=0
	if [[ $1 =~ ^-?[0-9]+$ ]]; then
		INPUT=$1
	fi

	USB_FILESYSTEM_TYPE="None"
	USB_MOUNTED=0
	Check_Drive_Mounted(){

		USB_FILESYSTEM_TYPE=$(blkid -o list | grep '/dev/sda1' | awk '{ print $2 }')
		USB_MOUNTED=$(df -P | grep -ci -m1 '/mnt/usb_1')
	}

	Wait_For_Drive_Connection(){

		clear
		# Stop Services
		/DietPi/dietpi/dietpi-services stop

		#Unmount all connected drives
		umount /dev/sd[a-z][1-9]

		# Wait for drive to be connected
		clear
		echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n --------------------------------"
		echo -e " Please Insert ONE USB Drive into your $HW_NAME."
		if (( $INPUT == 1 )); then
			echo -e " \n AUTOMATION FORMAT WARNING:-------------------------\n Format automation flag is enabled.\n The USB drive will be formatted to ext4 when plugged in.\n All data on /dev/sda will be DELETED.\n AUTOMATION FORMAT WARNING:-------------------------\n"
		fi

		echo -e " \n Waiting for a device to be connected.\n - Press CTRL+C to abort.\n\n If aborted, you can restart the DietPi Installation by running:\n dietpi-software\n"

		while true
		do

			if [ -d /sys/block/sda ]; then

				break

			else

				sleep 1

			fi

		done

	}

	RUNNING_SETUP=1
	Run_Setup(){

		Wait_For_Drive_Connection

		Attempt_Mount_Existing_Drive

		Finish_Setup

	}

	Attempt_Mount_Existing_Drive(){

		#Check if filesystem already exists and is mountable
		# - Attempt to mount
		mount -a
		Check_Drive_Mounted
		if (( $USB_MOUNTED == 1 )); then
			clear
			echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n --------------------------------"
			echo -e " An Existing $USB_FILESYSTEM_TYPE Drive has Been Found \n"
			df -Ph /dev/sda1
			echo -e ""

			if [ "$USB_FILESYSTEM_TYPE" = "ntfs" ]; then
				echo -e " (WARNING): \n - NTFS is not recommended as it will increase CPU usage.\n - EXT4 will maximise the filesystem performance of your USB device.\n\n If you have data (eg: movies) on this drive you want to keep, press enter.\n "
				read -r -p " Would you like to format this drive to EXT4? [y/N] " response
			else
				read -r -p " Would you like to format this drive? [y/N] " response
			fi

			case $response in
				[yY][eE][sS]|[yY])
					Menu_Format
				;;
			esac

		#Format drive
		else
			Menu_Format
		fi

	}

	Finish_Setup(){

		#Finish setup, add mount to fstab
		clear
		Check_Drive_Mounted
		if (( $USB_MOUNTED )); then

			#Add root delay to RPi (Prevents slow powering external drives, from failing to be ready and mountable during boot.)
			if (( $HW_MODEL < 10 )) &&
				(( $(cat /boot/cmdline.txt | grep -ci -m1 'rootdelay=') == 0 )); then
				sed -i "s/rootwait/rootwait rootdelay=10/g" /boot/cmdline.txt &> /dev/null
			fi

			#Update .installed file
			if [ -f /DietPi/dietpi/.installed ]; then
				sed -i '/USBDRIVE=/c\USBDRIVE=2' /DietPi/dietpi/.installed
			fi

			if (( $INPUT == 0 )); then
				whiptail --title "Dedicated Drive Completed" --msgbox "Dedicated USB harddrive setup completed successfully:\n\nFilesystem      Size  Used Avail Use% Mounted on\n$(df -Ph | grep '/mnt/usb_1')" --backtitle "DietPi-External Drive Setup" 12 70
			fi
			RUNNING_SETUP=0

		#Failed to mount
		else

			if (( $INPUT == 0 )); then
				whiptail --title "Error - Not Mounted" --yesno "DietPi was unable to complete the external USB harddrive setup. The drive may have incompatible partitions and/or filesystem. Formatting the drive may resolve the issue.\n\nWould you like to try again?" --defaultno --backtitle "DietPi-External Drive Setup" 11 70
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					#Run again
					RUNNING_SETUP=1
				else
					RUNNING_SETUP=0
				fi
			fi
		fi

	}

	Run_Format(){

		#Unmount all connected drives
		umount /dev/sd[a-z][1-9]
		#Clear MBR and partition table from device
		dd if=/dev/zero of=/dev/sda bs=512 count=1

		#Create New partition on /dev/sda
		echo -e "o\nn\np\n1\n\n\nw" | fdisk /dev/sda

		#Format ext4
		umount /dev/sd[a-z][1-9]
		echo -e "y" | mkfs.ext4 /dev/sda1
		resize2fs /dev/sda1
		mount -a
		chown -R root:root /mnt/usb_1

	}

	#Menus
	Menu_Format(){
		#Confirm user wants to wipe this drive
		clear
		echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n --------------------------------"
		echo -e " Drive ready to be formatted to EXT4"
		echo -e " \n WARNING: This will delete all data on the USB drive \n \n"
		read -r -p " Do you wish to Format this drive? [y/N] " response
		case $response in
			[yY][eE][sS]|[yY])
				Run_Format
			;;
		esac
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	#Menu
	if (( $INPUT == 0 )); then
		while (( $RUNNING_SETUP == 1 )); do
			Run_Setup
		done

	#Automated format
	elif (( $INPUT == 1 )); then
		Wait_For_Drive_Connection
		Run_Format
		Finish_Setup
	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}