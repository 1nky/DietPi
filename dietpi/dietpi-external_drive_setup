#!/bin/bash
# ////////////////////////////////////
# DietPi External drive mount
#
#////////////////////////////////////
# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
#
#////////////////////////////////////
#
# Info: - Formats and Mounts /dev/sda1 /mnt/usb_1
#////////////////////////////////////

usb_hdd_connected=0
usb_hdd_filesystem="None"
CheckDriveConnected(){

    usb_hdd_connected=$(blkid | grep -ci '/dev/sda1')
	usb_hdd_filesystem=$(blkid | grep '/dev/sda1' | awk '{ print $3 }' | tr -d '"TYPE=')
}

#/////////////////////////////////////////////////////////////////////////////////////
# Main Loop
#/////////////////////////////////////////////////////////////////////////////////////

    clear
    # Stop Services
    /boot/dietpi/dietpi-services stop &> /dev/null

    #Unmount all connected drives
    umount /dev/sd[a-z][1-9]

    # Wait for drive to be connected
    clear
    echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n --------------------------------"
    echo -e " Please Insert a USB Drive into your Raspberry Pi"
    echo -e " \n Waiting for Device to be connected. Press CTRL+C to cancel \n If canceled, you can restart the DietPi Installation by running /boot/dietpi/dietpi-software"

    while true; do
        if [ -d /sys/block/sda ]; then
            break
        else
            sleep 1
        fi
    done

    #Check if filesystem already exists and is mountable
	mount -a
    CheckDriveConnected
	#override connected status with a filesystem df -h check
	usb_hdd_connected=$(df -h | grep -ci -m1 '/dev/sda1')
    if [ "$usb_hdd_connected" = 1 ]; then
        clear
        echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n --------------------------------"
        echo -e " An Existing $usb_hdd_filesystem Drive has Been Found \n"
        df /dev/sda1 -h
        echo -e ""
		
		if [ "$usb_hdd_filesystem" = "ntfs" ]; then
		    echo -e " (WARNING): \n - NTFS is not recommended as it requires alot more cpu processing \n - EXT4 will maximise the filesystem performance of your Pi \n \n If you have data (eg: movies) on this drive you want to keep, press enter \n "
			read -r -p " Would you like to format this drive to EXT4? [y/N] " response
		else
			read -r -p " Would you like to format this drive? [y/N] " response
		fi
		
        case $response in
            [yY][eE][sS]|[yY])
                # Continue script
                ;;
                # Terminate Script
            *)  exit
                ;;
        esac
    fi
	
    #Confirm user wants to wipe this drive
    clear
    echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n --------------------------------"
    echo -e " Drive ready to be formatted to EXT4"
    echo -e " \n WARNING: This will delete all data on the USB drive \n \n"
    read -r -p " Do you wish to Format this drive? [y/N] " response
    case $response in
        [yY][eE][sS]|[yY])
 			#Unmount all connected drives
			umount /dev/sd[a-z][1-9]
           # Create New partition on /dev/sda
            echo -e "o\nn\np\n1\n\n\nw" | fdisk /dev/sda && mkfs.ext4 /dev/sda1 || true && resize2fs /dev/sda1 || true && mount -a || true && chown -R root:root /mnt/usb_1 || true && df -h
            ;;
        *) #do nothing
            ;;
    esac

    #Test the new drive
    clear
	CheckDriveConnected
	if [ "$usb_hdd_connected" = 1 ]; then
        echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n Completed \n -----------------------------\n You can access the drive with cd /mnt/usb_1\n"
    else
        echo -e " --------------------------------\n D I E T - P I \n External Drive Setup \n FAILED \n --------------------------------"
    fi

    sleep 2