#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Patch File Script
	#
	#////////////////////////////////////
	# Created by MichaIng / micha@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Online pre-patching for client system.
	# - Runs from dietpi-update as very first update step
	# - NB: Keep this script as simple as possible, do not load/call dietpi-globals, to allow fixing most kinds of DietPi code issues!
	#
	# Usage:
	# - /DietPi/dietpi/pre-patch_file $G_DIETPI_VERSION_SUB
	#////////////////////////////////////

	export $G_PROGRAM_NAME='DietPi-Pre-patch'

	# Grab input, being failsafe when applying to $G_DIETPI_VERSION_SUB
	INPUT=$1
	[[ $INPUT =~ ^-?[0-9]+$ ]] || INPUT=$(sed -n 2p /DietPi/dietpi/.version)
	[[ $INPUT =~ ^-?[0-9]+$ ]] || INPUT=$(sed -n 2p /boot/dietpi/.version)
	[[ $INPUT =~ ^-?[0-9]+$ ]] || INPUT=0
	export G_DIETPI_VERSION_SUB=$INPUT

	EXIT_CODE=0

	#///////////////////////////////////////////////////////////////////////////////
	#Pre-patch system
	#	For changes made to update and critical bug fixes
	#///////////////////////////////////////////////////////////////////////////////

	echo -e "\n\e[1m $G_PROGRAM_NAME\e[0m
\e[90m─────────────────────────────────────────────────────\e[0m
[ INFO ] Applying critical pre-patches\n"

	#-------------------------------------------------------------------------------
	#RAMlog 0 free space check due to issues with failing DietPi cron jobs in v6.11
	if (( $G_DIETPI_VERSION_SUB < 12 && $(df -B1M --output=avail /var/log | sed -n 2p) < 2 )); then

		echo -e '[ \e[33mWARN\e[0m ] Pre-Patch 1 | Clearing /var/log files to free up RAMlog space (<2MB) before update will continue'
		/DietPi/dietpi/func/dietpi-logclear 1 || EXIT_CODE=1

	fi
	#-------------------------------------------------------------------------------
	#Pre-v6.17: Switch to new branch and versioning system
	if (( $G_DIETPI_VERSION_SUB < 17 )) && [[ ! $(sed -n 3p /DietPi/dietpi/.version) ]]; then

		echo '[ INFO ] Pre-Patch 2 | Adding release candidate (RC) version string to /DietPi/dietpi/.version'
	
		# - Addition of RC version
		echo -e "6\n$G_DIETPI_VERSION_SUB\n0" > /DietPi/dietpi/.version || EXIT_CODE=2

		# - Switch from testing to dev branch
		if grep -q '^[[:blank:]]*DEV_GITBRANCH=testing' /DietPi/dietpi.txt; then

			echo '[ INFO ] Pre-Patch 2 | Switching from obsolete "testing" branch to "dev"'
			sed -i '/^[[:blank:]]*DEV_GITBRANCH=testing/c\DEV_GITBRANCH=dev' /DietPi/dietpi.txt || EXIT_CODE=2
			local branch=''
			$branch=' branch and'

		fi

		whiptail --msgbox "DietPi has applied a new$branch versioning system to the device. To allow DietPi-Update to use this new system, it must be re-run manually.\n
Please re-run \"dietpi-update\" to resume the update process." 12 60

		# - As loaded v6.16<= dietpi-update will overwrite this to previous 2 line system, we need to get user to rerun the update manually, ensuring the new dietpi-update code is run.
		killall -w dietpi-update
		exit $EXIT_CODE

	fi
	#-------------------------------------------------------------------------------

	echo -e "\e[1m $G_PROGRAM_NAME\e[0m
\e[90m─────────────────────────────────────────────────────\e[0m
[ INFO ] Completed pre-patches with exit code: $EXIT_CODE\n"

	#-------------------------------------------------------------------------------
	exit $EXIT_CODE
	#-------------------------------------------------------------------------------
}
