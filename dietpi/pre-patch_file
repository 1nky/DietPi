#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Pre-patch script
	#
	#////////////////////////////////////
	# Created by MichaIng / micha@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Online pre-patching for client system for changes made to update system and critical bug fixes
	# - Runs from dietpi-update as very first update step
	# - In case of failure, returns related pre-patch ID as exit code
	# - NB: Keep this script as simple as possible, do not load/call dietpi-globals, to allow fixing most kinds of DietPi code issues!
	#
	# Usage:
	# - ./pre-patch_file $G_DIETPI_VERSION_SUB
	#////////////////////////////////////

	EXIT_CODE=0

	G_PROGRAM_NAME='DietPi-Pre-patch'

	# Grab input, being failsafe when applying to $G_DIETPI_VERSION_SUB
	INPUT=$1
	if [[ $INPUT =~ ^-?[0-9]+$ ]]; then

		G_DIETPI_VERSION_SUB=$INPUT

	else

		echo 'No valid input used'
		EXIT_CODE=1

	fi

	#///////////////////////////////////////////////////////////////////////////////
	# Main loop
	#///////////////////////////////////////////////////////////////////////////////

	while (( $EXIT_CODE == 0 ))
	do

		echo -e "\n\e[1m $G_PROGRAM_NAME\e[0m
\e[90m─────────────────────────────────────────────────────\e[0m
[ INFO ] Applying critical pre-patches\n"

		#-------------------------------------------------------------------------------
		# Pre-patch 1: RAMlog 0 free space check due to issues with failing DietPi cron jobs in v6.11
		if (( $G_DIETPI_VERSION_SUB < 12 && $(df -B1M --output=avail /var/log | sed -n 2p) < 2 )); then

			echo -e '[ \e[33mWARN\e[0m ] Pre-patch 1 | Clearing /var/log files to free up RAMlog space (<2MB) before update will continue'
			/DietPi/dietpi/func/dietpi-logclear 1 || EXIT_CODE=1; break

		#-------------------------------------------------------------------------------
		# Pre-patch 2: Hotfix to apply new naming scheme for /etc/nginx/sites-dietpi/*.(config => conf): https://github.com/Fourdee/DietPi/issues/2325#issuecomment-444564109
		elif [[ $G_DIETPI_VERSION_SUB.$(sed -n 3p /DietPi/dietpi/.version) == '19.G_DIETPI_VERSION_RC=5' ]]; then

			if grep -q 'include /etc/nginx/sites-dietpi/\*\.config;' /etc/nginx/sites-available/default &> /dev/null; then

				echo -e '[ \e[1mINFO\e[0m ] Pre-patch 2 | Nginx: Hotfix to apply new naming scheme for /etc/nginx/sites-dietpi/*.(config => conf)'
				sed -i 's|include /etc/nginx/sites-dietpi/\*\.config;|include /etc/nginx/sites-dietpi/\*\.conf;|g' /etc/nginx/sites-available/default
				(( $? )) && echo -e '[\e[31mFAILED\e[0m] Pre-patch 2 | An error occured while applying the fix to: /etc/nginx/sites-available/default
 - Please apply it manually. Replace:
 	line "include /etc/nginx/sites-dietpi/*.config;"
	with "include /etc/nginx/sites-dietpi/*.conf;"'

			else

				echo -e '[ e[1mINFO\e[0m ] The hotfix done with this update does not apply for you.'

			fi
			echo 0 > /DietPi/dietpi/.update_stage
			sed -i '/G_DIETPI_VERSION_RC=/c\G_DIETPI_VERSION_RC=6' /DietPi/dietpi/.version
			echo -e '[ e[1mINFO\e[0m ] DietPi-Update will now exit. No reboot is required, no further update steps are done.
 - To apply the new version string to your terminal session, you might want to manually run: "source /DietPi/dietpi/func/dietpi-globals"'
			kill $PPID
			exit

		fi

		echo -e "\e[1m $G_PROGRAM_NAME\e[0m
\e[90m─────────────────────────────────────────────────────\e[0m
[ INFO ] Completed pre-patches with exit code: $EXIT_CODE\n"

		#-------------------------------------------------------------------------------
		# Finished
		break
		#-------------------------------------------------------------------------------

	done

	#-------------------------------------------------------------------------------
	exit $EXIT_CODE
	#-------------------------------------------------------------------------------
}
