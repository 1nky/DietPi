#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Login Script
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/login
	# - activates on login /root/.bashrc
	# - requires /DietPi/dietpi/.install_stage to have a value of 0 for it to run /DietPi/dietpi/dietpi-software (active after /dietpi/boot has completed filesystem expansion)
	#////////////////////////////////////

	#/////////////////////////////////////////////////////////////////////////////////////
	#Exit Paths
	#/////////////////////////////////////////////////////////////////////////////////////
	# SCP connection exit path. Fix for dumb or unset TERM provided by tdaitx
	export TERM=${TERM:-dumb}
	if [ "$TERM" = "dumb" ]; then
		exit
	fi

	#Exit path for non-root logins.
	if (( $UID != 0 )); then
		clear
		echo -e "\n ERROR: You do not have root privileges.\n Please login as root, or, use:\n sudo /DietPi/dietpi/login\n"

		exit
	fi

	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain Pi version 1/2 & Obtain Pi Model Description
	#/////////////////////////////////////////////////////////////////////////////////////
	HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
	HW_MODEL_DESCRIPTION=$(sed -n 2p /DietPi/dietpi/.hw_model)
	DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)

	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain DietPi unique files data
	#/////////////////////////////////////////////////////////////////////////////////////
	# see /DietPi/dietpi/boot for info
	DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)

	# 0=console / 1=kodi-standalone / 2=startx lxde / 3=emulationstation
	AUTO_BOOT_INDEX=$(cat /DietPi/dietpi/.auto_boot_index)

	DIETPI_VERSION=$(cat /DietPi/dietpi/.version)

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#----------------------------------------------------------------
	#Wait for DietPi-RAMDISK, if needed
	while [ ! -f /DietPi/.ramdisk ]
	do
		echo -e " Waiting for DietPi-RAMDISK to finish copying DietPi to RAM... "
		sleep 2
	done

	#----------------------------------------------------------------
	#Normal Login
	if (( $DIETPI_INSTALL_STAGE == 1 )); then

		/DietPi/dietpi/dietpi-banner 1

		#Boot to specific Program
		if [ -z "$DISPLAY" ] && [ "$(tty)" = "/dev/tty1" ]; then
			#Kodi
			if (( $AUTO_BOOT_INDEX == 1 )); then
				#Debian
				if (( $DISTRO == 1 )); then
					kodi-standalone
				#Ubuntu
				elif (( $DISTRO == 2 )); then
					xinit kodi-standalone
				#Jessie
				elif (( $DISTRO == 3 )); then
					kodi-standalone
				fi
			#Desktop LXDE
			elif (( $AUTO_BOOT_INDEX == 2 )); then
				#Debian
				if (( $DISTRO == 1 )); then
					startx
				#Ubuntu
				elif (( $DISTRO == 2 )); then
					startx -- -depth 16
				#Jessie
				elif (( $DISTRO == 3 )); then
					startx
				fi
			#RetroPie/Emulation station
			elif (( $AUTO_BOOT_INDEX == 3 )); then
				#emulationstation - can no longer be run as root
				/opt/retropie/supplementary/emulationstation/emulationstation
			#OpenTyrian
			elif (( $AUTO_BOOT_INDEX == 4 )); then
				/usr/local/games/opentyrian/run
			#DietPi-Cloudshell
			elif (( $AUTO_BOOT_INDEX == 5 )); then
				#prevent sleep
				setterm -blank 0 -powersave off &> /dev/tty1

				#set font
				setfont /usr/share/consolefonts/Lat7-TerminusBold24x12.psf
				#setfont /usr/share/consolefonts/Lat7-TerminusBold28x14.psf
				#setfont /usr/share/consolefonts/Lat7-TerminusBold32x16.psf

				#Disable Cursor
				tput civis &> /dev/tty1

				#Launch DietPi-Cloudshell
				/DietPi/dietpi/dietpi-cloudshell 0 &> /dev/tty1 &
			fi
		fi
	#----------------------------------------------------------------
	#Run DietPi-Software (1st run setup)
	elif (( $DIETPI_INSTALL_STAGE == 0 )); then

		#Check if DietPi-Software is already running, else run it
		if (( $(ps aux | grep -ci -m1 '/DietPi/dietpi/[d]ietpi-software') == 0 )); then
			#Run GPL compliance prompt
			if (( $(cat /DietPi/dietpi.txt | grep -m1 'AUTO_SkipLicensePrompt=' | sed 's/AUTO_SkipLicensePrompt=//g') == 0 )); then
				whiptail --title "DietPi - GPLv2 License" --msgbox "This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 2 of the License, or any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/" --backtitle "DietPi - GPLv2 Compliance" 18 70
			fi
			#Start DietPi-Software
			/DietPi/dietpi/dietpi-software
		else
			/DietPi/dietpi/dietpi-banner 0
			echo -e "DietPi-Software is already running. Please complete the setup before continuing."
		fi

	#----------------------------------------------------------------
	#DietPi finishing up bootloader.
	elif (( $DIETPI_INSTALL_STAGE == -1 )); then
		/DietPi/dietpi/dietpi-banner 0
		echo -e " >> DietPi System prep is nearly completed: \n Please run /DietPi/dietpi/login after a few seconds"

	#----------------------------------------------------------------
	#DietPi running filesystem prep
	else
		/DietPi/dietpi/dietpi-banner 0
		echo -e " >> Filesystem prep has not yet completed: \n Please wait for the system to reboot "
	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}