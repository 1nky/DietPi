#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Login Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/login
	# - activates on login /etc/bashrc.d/dietpi-login.sh
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Login'
	#G_INIT
	# Import DietPi-Globals --------------------------------------------------------------

	#/////////////////////////////////////////////////////////////////////////////////////
	# Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	FP_DIETPI_FIRSTRUNSETUP_LOG='/var/tmp/dietpi/logs/dietpi-firstrun-setup.log'

	# Autoboot
	Run_AutoStart(){

		# - Do we have a valid screen for autoboot?
		local screen_valid=0
		[[ ! $DISPLAY && $(tty) == '/dev/tty1' ]] && screen_valid=1

		# - Boot to specific program
		if (( $screen_valid )); then

			# - Wait for DietPi-PostBoot
			local max_seconds=15
			local current_seconds=1
			until systemctl status dietpi-postboot | grep -qi 'exited'
			do

				G_DIETPI-NOTIFY 2 "Waiting for DietPi-Postboot to finish ($current_seconds/$max_seconds)"
				sleep 1
				((current_seconds++))
				(( $current_seconds >= $max_seconds )) && break

			done

			# - Kodi
			if (( $AUTO_START_INDEX == 1 )); then

				/DietPi/dietpi/misc/start_kodi

			# - Desktop (LXDE/MATE etc)
			elif (( $AUTO_START_INDEX == 2 )); then

				clear
				if (( $G_HW_MODEL == 11 )); then

					sleep 5 && startx &

				else

					startx

				fi

			# - RetroPie/Emulation station
			elif (( $AUTO_START_INDEX == 3 )); then

				#	emulationstation - can no longer be run as root
				/opt/retropie/supplementary/emulationstation/emulationstation.sh

			# - OpenTyrian
			elif (( $AUTO_START_INDEX == 4 )); then

				/usr/local/games/opentyrian/run

			# - DietPi-Cloudshell
			elif (( $AUTO_START_INDEX == 5 )); then

				setterm --blank 0 --powersave off --cursor off
				systemctl start dietpi-cloudshell

			# - Amiberry standard boot
			elif (( $AUTO_START_INDEX == 8 )); then

				systemctl start amiberry

			# - DXX-Rebirth
			elif (( $AUTO_START_INDEX == 9 )); then

				$G_FP_DIETPI_USERDATA/dxx-rebirth/run.sh

			# - CAVA
			elif (( $AUTO_START_INDEX == 10 )); then

				sleep 4 # Wait for MPD fifo to start
				setterm --blank 0 --powersave off
				cava

			# - Chromium
			elif (( $AUTO_START_INDEX == 11 )); then

				/var/lib/dietpi/dietpi-software/installed/chromium-autostart.sh

			# - LightDM
			elif (( $AUTO_START_INDEX == 16 )); then

				/usr/sbin/lightdm

			fi

		fi

	}

	# First Run Setup
	Run_First_Update_Setup(){

		local automated_setup=0

		# First run setup running in other session
		Other_Session_User_Prompt(){

			local additional_text='Please resume setup on the active screen.'
			(( $automated_setup )) && additional_text='Automated setup is in progress, the system will reboot automatically when completed.'

			#	Force interactive whiptail
			G_USER_INPUTS=1 G_WHIP_MSG "[WARNING] DietPi is currently running on another screen.\n\n$additional_text"

			exit

		}

		# Automated?
		if grep -qi '^[[:blank:]]*AUTO_SETUP_AUTOMATED=1' /DietPi/dietpi.txt; then

			automated_setup=1
			#	Set non-interactive shell, if automated installation (as .bashrc run via STDIN check is interactive)
			export G_USER_INPUTS=0

		fi

		# Show GPL license
		if [[ -f /var/lib/dietpi/license.txt ]] && (( ! $automated_setup )); then

			G_WHIP_VIEWFILE /var/lib/dietpi/license.txt
			rm /var/lib/dietpi/license.txt

		fi

		until (( $G_DIETPI_INSTALL_STAGE == 2 ))
		do

			# 1st run dietpi-update
			if (( $G_DIETPI_INSTALL_STAGE == 0 )); then

				# - Prompt and exit if DietPi-Update runs in other session already
				pgrep 'dietpi-update' &> /dev/null && Other_Session_User_Prompt

				# - Check internet
				optional_cmd_inputs='--no-check-certificate' G_CHECK_URL "$(grep -m1 '^[[:blank:]]*deb ' /etc/apt/sources.list | mawk '{print $2}')" # Will exit on failure here then prompt user to configure network

				# - Check NTP synced
				/DietPi/dietpi/func/run_ntpd

				# - Start DietPi-Update
				/DietPi/dietpi/dietpi-update 1 # Sets G_DIETPI_INSTALL_STAGE=1

				# - Update install state, to allow DietPi-Software in same loop, if no update was required
				export G_DIETPI_INSTALL_STAGE=$(</DietPi/dietpi/.install_stage)

			fi

			# 1st run dietpi-software installs
			if (( $G_DIETPI_INSTALL_STAGE == 1 )); then

				# - Prompt and exit if DietPi-Software runs in other session already
				pgrep 'dietpi-software' &> /dev/null && Other_Session_User_Prompt

				# - Start DietPi-Software
				/DietPi/dietpi/dietpi-software | tee $FP_DIETPI_FIRSTRUNSETUP_LOG # Sets G_DIETPI_INSTALL_STAGE=2

				# - Update install state, to exit loop, if user skipped immediate reboot
				export G_DIETPI_INSTALL_STAGE=$(</DietPi/dietpi/.install_stage)

			fi

			# Check for second loop and in case inform user, since this indicates an error
			if ! (( $G_DIETPI_INSTALL_STAGE == 2 )); then

				# - Force interactive mode to show G_WHIP error prompts
				export G_USER_INPUTS=1

				# - In case of broken install state, reset to 0 to force update and fix code
				(( $G_DIETPI_INSTALL_STAGE == 0 || $G_DIETPI_INSTALL_STAGE == 1 )) || { export G_DIETPI_INSTALL_STAGE=0; echo 0 > /DietPi/dietpi/.install_stage; }

				G_WHIP_MSG "[FAILED] First run setup failed\n
An error has occured either during first run update or installs.\n
First run setup will now try to re-apply the last step.
If this repeatedly fails, please collect all terminal output and the content of $FP_DIETPI_FIRSTRUNSETUP_LOG if available and report this issue to: https://github.com/Fourdee/DietPi/issues"

			fi

		done

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#Update network details for banner IP address.
	/DietPi/dietpi/func/obtain_network_details

	#----------------------------------------------------------------
	# Normal Login
	if (( $G_DIETPI_INSTALL_STAGE == 2 )); then

		# - Show GPL license on first normal login, if setup was automated
		if [[ -f /var/lib/dietpi/license.txt ]]; then

			G_WHIP_VIEWFILE /var/lib/dietpi/license.txt
			rm /var/lib/dietpi/license.txt

		fi

		/DietPi/dietpi/func/dietpi-banner 1
		local auto_start_index=0
		[[ -f /DietPi/dietpi/.dietpi-autostart_index ]] && auto_start_index=$(</DietPi/dietpi/.dietpi-autostart_index)
		(( $auto_start_index > 0 )) && Run_AutoStart

	#----------------------------------------------------------------
	# Run DietPi-Update/DietPi-Software (1st run setup) (G_DIETPI_INSTALL_STAGE=0/1)
	elif (( $G_DIETPI_INSTALL_STAGE == 0 || $G_DIETPI_INSTALL_STAGE == 1 )); then

		/DietPi/dietpi/func/dietpi-banner 0

		if (( $UID )); then

			G_WHIP_MSG '[WARNING] Root login required\n
To finish DietPi first run setup, root permissions are required.\n
Please login again as user "root" with password "dietpi", respectively the one you chose in "dietpi.txt".'

		else

			Run_First_Update_Setup

		fi

	#----------------------------------------------------------------
	# DietPi-Boot first run setup not finished
	elif (( $G_DIETPI_INSTALL_STAGE == -1 )); then

		/DietPi/dietpi/func/dietpi-banner 0
		G_WHIP_MSG '[WARNING] Boot scripts still running\n
DietPi boot scripts have not yet finished system preparations.\n
Please run "/DietPi/dietpi/login" after a few seconds, to start first run setup.'

	#----------------------------------------------------------------
	# Unknown install state
	else

		/DietPi/dietpi/func/dietpi-banner 0
		G_WHIP_MSG '[WARNING] Unknown install state\n
DietPi could not determine a valid install state. Please check if DietPi boot scripts have successfully finished:\n
    systemctl status dietpi-*\n
In case report this issue to: https://github.com/Fourdee/DietPi/issues'

	fi

	#-----------------------------------------------------------------------------------
	exit
	#Run loop, update globals after updates, no reboots required?
	#-----------------------------------------------------------------------------------
}
