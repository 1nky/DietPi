#!/bin/bash
{
	#////////////////////////////////////
	# DietPi-Config Script
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/dietpi-config
	#
	# Usage:
	# dietpi-config iMENUINDEX iEXITONBACK
	# - iMENUINDEX - Launch TARGETMENUID
	# - iEXITONBACK - 1=Exit DietPi-Config when going back to previous menu (applied to TARGETMENUINDEX 8 only!!)
	#////////////////////////////////////

	#/////////////////////////////////////////////////////////////////////////////////////
	#Exit Paths
	#/////////////////////////////////////////////////////////////////////////////////////
	#Exit path for non-root logins.
	if (( $UID != 0 )); then
		clear
		echo -e "\n ERROR: You do not have root privileges.\n Please login as root, or, use:\n sudo dietpi-config\n"

		exit
	fi

	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain Install Stage Index (File always exists - is set with finalized)
	#/////////////////////////////////////////////////////////////////////////////////////
	# -3 = first boot / -2 = partition / -1 = filesystem / 0 = run dietpi-software at login / 1 = completed
	DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)

	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain Hardware Details
	#/////////////////////////////////////////////////////////////////////////////////////
	HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
	HW_MODEL_DESCRIPTION=$(sed -n 2p /DietPi/dietpi/.hw_model)
	DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)

	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain Install Stage Index
	#/////////////////////////////////////////////////////////////////////////////////////
	# see /DietPi/dietpi/boot for info
	DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)

	#/////////////////////////////////////////////////////////////////////////////////////
	#Whiltail Info
	#/////////////////////////////////////////////////////////////////////////////////////
	HW_MSG_NOTSUPPORTED="Not Supported"
	Info_HW_OptionNotSupported(){

		WHIP_QUESTION="This option is not available for $HW_MODEL_DESCRIPTION"
		whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 8 55

	}

	Info_Input_Not_Valid_Integer(){
		whiptail --title "Invalid Value" --msgbox "$OPTION is an invalid value. No changes have been applied" --backtitle "$WHIP_BACKTITLE" 10 60
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# MENUS
	#/////////////////////////////////////////////////////////////////////////////////////
	TARGETMENUID=0
	EXITONBACK=0

	TEXT_MENU_BACK="Back"

	#Grab target MENU INDEX (valid interger)
	if [[ $1 =~ ^-?[0-9]+$ ]]; then
		TARGETMENUID=$1
	fi

	#Exit DietPi-Config when going back to previous menu?
	if [[ $2 =~ ^-?[0-9]+$ ]]; then
		EXITONBACK=$2
		TEXT_MENU_BACK="Exit"
	fi

	WHIP_BACKTITLE='DietPi-Config'
	WHIP_TITLE='DietPi-Config'
	WHIP_QUESTION='DietPi-Config'
	CHOICE=0
	OPTION=0
	REBOOT_REQUIRED=false

	#Interger min/max value holders
	MIN_VALUE=0
	MAX_VALUE=0

	#TARGETMENUID=0
	Menu_Main(){

		WHIP_TITLE='---------- DietPi-Config ----------'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware : $HW_MODEL_DESCRIPTION" --cancel-button "Exit" --backtitle "$WHIP_BACKTITLE" 17 50 9 \
		"1" "Display Options" \
		"2" "Audio Options" \
		"3" "Performance Options" \
		"4" "Advanced Options" \
		"5" "Language/Regional Options" \
		"6" "Security Options" \
		"7" "Networking Options" \
		"8" "AutoBoot Options" \
		"9" "Tools" 3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			if (( $OPTION == 1 )); then
				TARGETMENUID=1

				if (( $HW_MODEL == 20 )); then
					TARGETMENUID=0
					Info_HW_OptionNotSupported
				fi
			 elif (( $OPTION == 2 )); then
				TARGETMENUID=14
				if (( $HW_MODEL == 20 )); then
					TARGETMENUID=0
					Info_HW_OptionNotSupported
				fi
			elif (( $OPTION == 3 )); then
				TARGETMENUID=4
				if (( $HW_MODEL == 20 )); then
					TARGETMENUID=0
					Info_HW_OptionNotSupported
				fi
			elif (( $OPTION == 4 )); then
				TARGETMENUID=3
			elif (( $OPTION == 5 )); then
				TARGETMENUID=7
			elif (( $OPTION == 6 )); then
				TARGETMENUID=5
			elif (( $OPTION == 7 )); then
				 TARGETMENUID=8
		   elif (( $OPTION == 8 )); then
				/DietPi/dietpi/dietpi-boot_order
				REBOOT_REQUIRED=true
			elif (( $OPTION == 9 )); then
				TARGETMENUID=11
		   else
				Menu_Exit
			fi
		else
			Menu_Exit
		fi

	}

	Menu_Exit(){

		# TARGETMENUID = -1 , if we are to exit the menu

		# The good old "Are you really sure" question.
		WHIP_TITLE=' Exit DietPi-Config? '
		WHIP_QUESTION=' Exit DietPi-Config? '
		whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 10 50
		CHOICE=$?

		#Exit
		if (( $CHOICE == 0 )); then
			TARGETMENUID=-1

			#1st run install, disable prompt for reboot.
			if(( $DIETPI_INSTALL_STAGE == 0 )); then
				REBOOT_REQUIRED=false
			fi

			# Reboot Required
			if [ "$REBOOT_REQUIRED" = true ]; then
				WHIP_TITLE=' Changes Made - Reboot Now? '
				WHIP_QUESTION=' A reboot is required to apply your new settings.\n Would you like to reboot now?'
				whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --defaultno --backtitle "$WHIP_BACKTITLE" 9 65
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					#Reboot
					reboot
				fi
			fi
		#Return to DietPiConfig main menu
		elif (( $EXITONBACK == 0 )); then
			TARGETMENUID=0
		fi
	}

	#TARGETMENUID=1
	Menu_DisplayOptions(){

		TARGETMENUID=0

		#Get Current Settings
		local overscan_enabled=$(cat /DietPi/config.txt | grep -ci -m1 'disable_overscan=0')
		local overscan_text='Disabled'
		if [ "$overscan_enabled" = 1 ]; then
			overscan_text='Enabled'
		fi

		local hdmi_boost_disabled=$(cat /DietPi/config.txt | grep -ci -m1 '#config_hdmi_boost=')
		local hdmi_boost_text='Enabled'
		if [ "$hdmi_boost_disabled" = 1 ]; then
			hdmi_boost_text='Disabled'
		fi

		local rpi_camera_module_enabled=$(cat /DietPi/config.txt | grep -ci -m1 'start_x=1')
		local rpi_camera_module_text='Disabled'
		if (( $rpi_camera_module_enabled == 1 )); then
			rpi_camera_module_text='Enabled'
		fi

		local rpi_camera_led_enabled=$(cat /DietPi/config.txt | grep -ci -m1 'disable_camera_led=0')
		local rpi_camera_led_text='Disabled'
		if (( $rpi_camera_led_enabled == 1 )); then
			rpi_camera_led_text='Enabled'
		fi

		#RPi - i2c
		local rpi_i2c_enabled=$(cat /DietPi/config.txt | grep -ci -m1 'dtparam=i2c_arm=on')
		local rpi_i2c_text='Disabled'
		if (( $rpi_i2c_enabled == 1 )); then
			rpi_i2c_text='Enabled'
		fi

		local rpi_i2cbaudrate_hz="$(( $(cat /DietPi/config.txt | grep 'i2c_arm_baudrate=' | sed 's/i2c_arm_baudrate=//g') / 1000 )) kHz"

		#non-rpi
		if (( $HW_MODEL >= 10 )); then
			hdmi_boost_text=$HW_MSG_NOTSUPPORTED
			overscan_text=$HW_MSG_NOTSUPPORTED
			rpi_camera_module_text=$HW_MSG_NOTSUPPORTED
			rpi_camera_led_text=$HW_MSG_NOTSUPPORTED
			rpi_i2c_text=$HW_MSG_NOTSUPPORTED
			rpi_i2cbaudrate_hz=$HW_MSG_NOTSUPPORTED
		fi

		WHIP_TITLE='---------- DietPi - Display Options ----------'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu "Make a Selection" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 16 50 8 \
		"1" "Change Resolution" \
		"2" "GPU/RAM Memory Split" \
		"3" "Overscan       : $overscan_text" \
		"4" "HDMI Boost     : $hdmi_boost_text" \
		"5" "RPi Camera     : $rpi_camera_module_text" \
		"6" "RPI Camera led : $rpi_camera_led_text" \
		"7" "RPI i2c        : $rpi_i2c_text" \
		"8" "RPI i2c freq   : $rpi_i2cbaudrate_hz" 3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then

			if (( $OPTION == 1 )); then

				TARGETMENUID=2

			elif (( $OPTION == 2 )); then

				if (( $HW_MODEL < 10 )) ||
					(( $HW_MODEL == 10 )); then
					WHIP_QUESTION='GPU/RAM Memory splits are pre-configured and applied during DietPi-Software setup. \n \nThe split value is optimized based on your software installs, however, feel free to tweak them.'
					whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 12 60
					TARGETMENUID=6
				else
					Info_HW_OptionNotSupported

					#Return to this menu
					TARGETMENUID=1
				fi

			elif (( $OPTION == 3 )); then

				#RPI only
				if (( $HW_MODEL < 10 )); then
					#Enabled
					if [ "$overscan_enabled" = 1 ]; then
						WHIP_QUESTION=" Current setting: $overscan_text \n Would you like to disable overscan? \n \n If you have black borders on your screen, select Ok."
						whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 60
						CHOICE=$?
						if (( $CHOICE == 0 )); then
							sed -i '/disable_overscan=/c\disable_overscan=1' /DietPi/config.txt
							REBOOT_REQUIRED=true
						fi
					#Disabled
					elif [ "$overscan_enabled" = 0 ]; then
						WHIP_QUESTION=" Current setting: $overscan_text \n Would you like to enable overscan?"
						whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 60
						CHOICE=$?
						if (( $CHOICE == 0 )); then
							sed -i '/disable_overscan=/c\disable_overscan=0' /DietPi/config.txt
							REBOOT_REQUIRED=true
						fi
					fi
				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=1
			elif (( $OPTION == 4 )); then

				#RPI only
				if (( $HW_MODEL < 10 )); then
					#Enabled
					if [ "$hdmi_boost_disabled" = 0 ]; then
						WHIP_QUESTION=" Current setting: $hdmi_boost_text \n Would you like to disable HDMI Signal Boost?"
						whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 60
						CHOICE=$?
						if (( $CHOICE == 0 )); then
							sed -i '/config_hdmi_boost=/c\#config_hdmi_boost=4' /DietPi/config.txt
							REBOOT_REQUIRED=true
						fi
					#Disabled
					elif [ "$hdmi_boost_disabled" = 1 ]; then
						WHIP_QUESTION=" Current setting: $hdmi_boost_text \n Would you like to enable HDMI Signal Boost? \n \n If you have no display output, or, blinking, selecting Enable may resolve it "
						whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 60
						CHOICE=$?
						if (( $CHOICE == 0 )); then
							sed -i '/config_hdmi_boost=/c\config_hdmi_boost=4' /DietPi/config.txt
							REBOOT_REQUIRED=true
						fi
					fi
				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=1

			elif (( $OPTION == 5 )); then

				#RPI only
				if (( $HW_MODEL < 10 )); then
					if (( $rpi_camera_module_enabled == 0 )); then
						#enable module
						sed -i '/start_x=/c\start_x=1' /DietPi/config.txt
						REBOOT_REQUIRED=true
					else
						#disable module
						sed -i '/start_x=/c\start_x=0' /DietPi/config.txt
						REBOOT_REQUIRED=true
					fi
				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=1

			elif (( $OPTION == 6 )); then

				#RPI only
				if (( $HW_MODEL < 10 )); then
					if (( $rpi_camera_led_enabled == 0 )); then
						#enable
						sed -i '/disable_camera_led=/c\disable_camera_led=0' /DietPi/config.txt
						REBOOT_REQUIRED=true
					else
						#disable
						sed -i '/disable_camera_led=/c\disable_camera_led=1' /DietPi/config.txt
						REBOOT_REQUIRED=true
					fi
				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=1

			elif (( $OPTION == 7 )); then

				#RPI only
				if (( $HW_MODEL < 10 )); then

					if (( $rpi_i2c_enabled == 0 )); then
						/DietPi/dietpi/func/dietpi-rpi_i2c_control 1
						REBOOT_REQUIRED=true
					else
						/DietPi/dietpi/func/dietpi-rpi_i2c_control -1
						REBOOT_REQUIRED=true
					fi
				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=1
			elif (( $OPTION == 8 )); then
				#RPI only
				if (( $HW_MODEL < 10 )); then

					#remove kHz from current
					rpi_i2cbaudrate_hz=$(echo -e "$rpi_i2cbaudrate_hz" | tr -d ' kHz')
					OPTION=$(whiptail --inputbox "Please enter the required i2c baudrate frequency (kHz)." 8 60 "$rpi_i2cbaudrate_hz" --title "i2c baudrate frequency (kHz)" 3>&1 1>&2 2>&3)
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						#check valid int
						if [[ $OPTION =~ ^-?[0-9]+$ ]]; then
							/DietPi/dietpi/func/dietpi-rpi_i2c_control "$OPTION"
							REBOOT_REQUIRED=true
						else
							Info_Input_Not_Valid_Integer
						fi
					fi

				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=1
			fi
		fi
	}

	#TARGETMENUID=2
	Menu_DisplayOptions_Resolution(){

		#Return to Display Options Menu
		TARGETMENUID=1

		#RPI
		if (( $HW_MODEL < 10 )); then
			#Get Current Values
			local framebuffer_x=$(cat /DietPi/config.txt | grep -m1 'framebuffer'_width= | tr -d '#framebuffer_width=')
			local framebuffer_y=$(cat /DietPi/config.txt | grep -m1 'framebuffer'_height= | tr -d '#framebuffer_height=')
			local display_output_text="$framebuffer_x X $framebuffer_y"

			#check for headless
			if (($(cat /DietPi/dietpi.txt | grep -ci -m1 'rpi_hdmi_output=0') == 1)); then
					display_output_text="Headless"
			fi

			WHIP_TITLE="---------- DietPi - Resolution ----------"
			OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware : $HW_MODEL_DESCRIPTION \n Current: $display_output_text" --cancel-button "$TEXT_MENU_BACK" 18 60 8 \
			"1080p" "1920 x 1080" \
			"720p" "1280 x 720" \
			"480p" "854 x 480" \
			"PC1" "1024 x 768" \
			"PC2" "800 x 640" \
			"PC3" "640 x 480" \
			"DietPi-Cloudshell" "320 x 240" \
			"Headless" "Disables HDMI Output" 3>&1 1>&2 2>&3)

			case "$OPTION" in
			  "DietPi-Cloudshell")
				sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
				sed -i '/framebuffer_width=/c\framebuffer_width=320' /DietPi/config.txt
				sed -i '/framebuffer_height=/c\framebuffer_height=240' /DietPi/config.txt
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  1080p)
				sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
				sed -i '/framebuffer_width=/c\framebuffer_width=1920' /DietPi/config.txt
				sed -i '/framebuffer_height=/c\framebuffer_height=1080' /DietPi/config.txt
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  720p)
				sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
				sed -i '/framebuffer_width=/c\framebuffer_width=1280' /DietPi/config.txt
				sed -i '/framebuffer_height=/c\framebuffer_height=720' /DietPi/config.txt
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  480p)
				sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
				sed -i '/framebuffer_width=/c\framebuffer_width=854' /DietPi/config.txt
				sed -i '/framebuffer_height=/c\framebuffer_height=480' /DietPi/config.txt
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  PC1)
				sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
				sed -i '/framebuffer_width=/c\framebuffer_width=1024' /DietPi/config.txt
				sed -i '/framebuffer_height=/c\framebuffer_height=768' /DietPi/config.txt
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  PC2)
				sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
				sed -i '/framebuffer_width=/c\framebuffer_width=800' /DietPi/config.txt
				sed -i '/framebuffer_height=/c\framebuffer_height=640' /DietPi/config.txt
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  PC3)
				sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /DietPi/dietpi.txt
				sed -i '/framebuffer_width=/c\framebuffer_width=640' /DietPi/config.txt
				sed -i '/framebuffer_height=/c\framebuffer_height=480' /DietPi/config.txt
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  Headless)
				whiptail --title "$WHIP_TITLE" --msgbox " Using the Headless option will: \n - Disable HDMI output \n - Lower energy consumption by 0.1+ Watts \n - Set framebuffer to 16x16xD8 \n - Improve RAM performance by 1-5% (VideoCore shares RAM bandwidth) \n - More info here : https://www.raspberrypi.org/forums/viewtopic.php?p=105008#p105008" --backtitle "$WHIP_BACKTITLE" 14 75
				sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=0" /DietPi/dietpi.txt
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			esac

		#Odroid C1
		elif (( $HW_MODEL == 10 )); then
			#Get Current Values
			local current_resolution=$(cat /DietPi/boot.ini | grep -m1 'setenv m "' | awk -F '"' '{print $2}')

			WHIP_TITLE="---------- DietPi - Resolution ----------"
			OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware : $HW_MODEL_DESCRIPTION \n Current: $current_resolution" --cancel-button "$TEXT_MENU_BACK" 16 60 6 \
			"1080p" "1920 x 1080" \
			"720p" "1280 x 720" \
			"480p" "720 x 480" \
			"PC1" "1024 x 768" 3>&1 1>&2 2>&3)

			case "$OPTION" in
			  1080p)
				sed -i '/setenv m /c\setenv m "1080p"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  720p)
				sed -i '/setenv m /c\setenv m "720p"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  480p)
				sed -i '/setenv m /c\setenv m "480p"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  PC1)
				sed -i '/setenv m /c\setenv m "1024x768"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			esac

		#Odroid xu3/4
		elif (( $HW_MODEL == 11 )); then

			#Get Current Values
			local current_resolution=""
			if (( $(cat /DietPi/boot.ini | grep -m1 'setenv videoconfig "' | grep -ci -m1 1920x1080) == 1 )); then
				current_resolution="1080p"
			elif (( $(cat /DietPi/boot.ini | grep -m1 'setenv videoconfig "' | grep -ci -m1 1280x720) == 1 )); then
				current_resolution="720p"
			elif (( $(cat /DietPi/boot.ini | grep -m1 'setenv videoconfig "' | grep -ci -m1 720x480) == 1 )); then
				current_resolution="480p"
			fi

			WHIP_TITLE="---------- DietPi - Resolution ----------"
			OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware : $HW_MODEL_DESCRIPTION \n Current: $current_resolution" --cancel-button "$TEXT_MENU_BACK" 13 60 3 \
			"1080p" "1920 x 1080" \
			"720p" "1280 x 720" \
			"480p" "720 x 480" 3>&1 1>&2 2>&3)

			case "$OPTION" in
			  1080p)
				sed -i '/setenv videoconfig /c\setenv videoconfig "drm_kms_helper.edid_firmware=edid/1920x1080.bin"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  720p)
				sed -i '/setenv videoconfig /c\setenv videoconfig "drm_kms_helper.edid_firmware=edid/1280x720.bin"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			  480p)
				sed -i '/setenv videoconfig /c\setenv videoconfig "drm_kms_helper.edid_firmware=edid/720x480.bin"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to This Menu
				TARGETMENUID=2
				;;
			esac

		else
			Info_HW_OptionNotSupported
		fi

	}

	#TARGETMENUID=3
	Menu_AdvancedOptions(){

		TARGETMENUID=0

		#Get Current Settings
		local swap_size=$(cat /etc/dphys-swapfile | sed 's/CONF_SWAPSIZE=//g')

		local usb_max_current_enabled=$(cat /DietPi/config.txt | grep -ci -m1 'max_usb_current=1')
		local usb_max_current_text='Disabled'
		if [ "$usb_max_current_enabled" = 1 ]; then
			usb_max_current_text='Enabled'
		fi

		#Non RPI
		if (( $HW_MODEL >= 10 )); then
			usb_max_current_text=$HW_MSG_NOTSUPPORTED
		fi

		WHIP_TITLE='---------- DietPi - Advanced Options ----------'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu "Make a Selection" --cancel-button "$TEXT_MENU_BACK" 13 60 3 \
		"1" "Swapfile Size: $swap_size MB" \
		"2" "Update Firmware" \
		"3" "Max Usb Current: $usb_max_current_text" 3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			if (( $OPTION == 1 )); then
				MIN_VALUE=100
				MAX_VALUE=2000
				OPTION=$(whiptail --inputbox "This will set the size of your swap file in MB.\n - Swapfile has a swapiness setting of 1 \n - Swapfile is used only to prevent out of memory errors \n - Recommended value = 100 \n - Valid range $MIN_VALUE - $MAX_VALUE" 13 65 "$swap_size" --title "SwapFile Size (MB)" 3>&1 1>&2 2>&3)
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					if [[ $OPTION =~ ^-?[0-9]+$ ]] && (($OPTION <= $MAX_VALUE)) && (($OPTION >= $MIN_VALUE)); then
						sed -i "/CONF_SWAPSIZE/c\CONF_SWAPSIZE=$OPTION" /etc/dphys-swapfile
						REBOOT_REQUIRED=true
					else
						Info_Input_Not_Valid_Integer
					fi
				fi

				#Return to This Menu
				TARGETMENUID=3

			elif (( $OPTION == 2 )); then

				#RPI
				if (( $HW_MODEL < 10 )); then
					WHIP_QUESTION=" Would you like to update the firmware on your Pi? \n - This will run rpi-update"
					whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 60
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						rpi-update
						REBOOT_REQUIRED=true
					fi

				#Odroid
				elif (( $HW_MODEL >= 10 )) && (( $HW_MODEL < 20 )); then
					WHIP_QUESTION=" Would you like to update the firmware on your $HW_MODEL_DESCRIPTION? \n - This will run apt-get dist-upgrade"
					whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 60
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						whiptail --title "Info" --msgbox "When asked to abort installation, select NO." --backtitle "$WHIP_BACKTITLE" 10 60
						apt-get update
						apt-get dist-upgrade --no-install-recommends -y
						REBOOT_REQUIRED=true
					fi

				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=3

			elif (( $OPTION == 3 )); then

				#RPI
				if (( $HW_MODEL < 10 )); then

					#Enabled
					if (( $usb_max_current_enabled == 1 )); then
						WHIP_QUESTION=" Current setting: $usb_max_current_text (1.2AMP) \n Would you like to disable this setting ? \n \n Once Disabled: \n - Max USB current will be set to 0.6AMP (default)"
						whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 70
						CHOICE=$?
						if (( $CHOICE == 0 )); then
							sed -i '/max_usb_current=/c\max_usb_current=0' /DietPi/config.txt
							REBOOT_REQUIRED=true
						fi
					#Disabled
					elif (( $usb_max_current_enabled == 0 )); then
						WHIP_QUESTION=" Current setting: $usb_max_current_text (0.6AMP) \n Would you like to enable this setting ? \n \n Once Enabled: \n - Max USB current will be set to 1.2AMP \n - (Warning) Do not enable this setting, unless you have a 2AMP+ PSU. "
						whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 14 70
						CHOICE=$?
						if (( $CHOICE == 0 )); then
							sed -i '/max_usb_current=/c\max_usb_current=1' /DietPi/config.txt
							REBOOT_REQUIRED=true
						fi
					fi
				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=3

			fi
		fi
	}

	#TARGETMENUID=4
	Menu_PerformanceOptions(){

		TARGETMENUID=0

		#All devices
		local current_cpu_governor=$(cat /DietPi/dietpi.txt | grep -m1 'cpu_governor=' | sed 's/cpu_governor=//g')
		local frequency_min_cpu_governor=$(( $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_min_freq) / 1000 ))
		local frequency_max_cpu_governor=$(( $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq) / 1000 ))

		local arm_temp=$(cat /sys/class/thermal/thermal_zone0/temp | awk '{print $1/1000}' | xargs printf "%0.1f" )

		local memory_total=$(( $(cat /proc/meminfo | grep -m1 'MemTotal:' | awk '{print $2}') / 1000 ))
		local memory_free=$(( $(cat /proc/meminfo | grep -m1 'MemFree:' | awk '{print $2}') / 1000 ))
		local memory_usage=$(($memory_total - $memory_free))


		#Create Menu List for Whiptail
		# - this will list the menu options available for each device.
		local whiptail_menu_array=()

		#Overclocking
		if (( $HW_MODEL < 10 )); then
			whiptail_menu_array+=("Overclocking" "Set Profile")
		fi

		#CPU GOV
		whiptail_menu_array+=("Change CPU Governor" ": $current_cpu_governor")

		#Ondemand Throttle up menu
		if [ "$current_cpu_governor" = ondemand ] || [ "$current_cpu_governor" = conservative ]; then
			local current_cpu_throttle_up=$(cat /DietPi/dietpi.txt | grep -m1 'cpu_usage_throttle_up' | sed 's/cpu_usage_throttle_up=//g')
			whiptail_menu_array+=("CPU Throttle Up" ": $current_cpu_throttle_up%")
		fi

		# User Scaling Max Freq limit.
		local user_frequency_max_current=$(cat /DietPi/dietpi.txt | grep -m1 'cpu_max_frequency=' | sed 's/cpu_max_frequency=//g')
		local user_frequency_max_text="$user_frequency_max_current Mhz"
		if (( $user_frequency_max_current == 0 )); then
			user_frequency_max_text="Disabled"
		fi

		whiptail_menu_array+=("CPU Max Freq Limit" ": $user_frequency_max_text")

		#RPi extras
		if (( $HW_MODEL < 10 )); then

			local current_arm_temp_limit=$(cat /DietPi/config.txt | grep -m1 'temp_limit' | sed 's/temp_limit=//g')
			local current_initial_turbo=$(cat /DietPi/config.txt | grep -m1 'initial_turbo' | sed 's/initial_turbo=//g')

			local text_current_initial_turbo="$current_initial_turbo seconds"
			if (( $current_initial_turbo == 0 )); then
				text_current_initial_turbo="Disabled"
			fi
			whiptail_menu_array+=("ARM Initial Turbo" ": $text_current_initial_turbo")
			whiptail_menu_array+=("ARM Temp Limit   " ": $current_arm_temp_limit 'c")

			#Min freqs
			local rpi_freq_min_enabled=1
			local rpi_freq_min_text="Enabled"
			if (( $(cat /DietPi/config.txt | grep -ci -m1 '#arm_freq_min=') == 1 )); then
				rpi_freq_min_enabled=0
				rpi_freq_min_text="Disabled"
			fi

			##Disabled due to https://github.com/Fourdee/DietPi/issues/73
			#whiptail_menu_array+=("Lower Idle Frequencies" ": $rpi_freq_min_text")

		fi

		WHIP_TITLE='---------- DietPi - Performance Options ----------'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware : $HW_MODEL_DESCRIPTION \n ARM Temp: $arm_temp 'c\n RAM: $memory_total MB | Used: $memory_usage MB | Free: $memory_free MB" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 16 60 6 "${whiptail_menu_array[@]}" 3>&1 1>&2 2>&3)

		CHOICE=$?

		#delete[] array
		unset whiptail_menu_array

		if (( $CHOICE == 0 )); then
			case "$OPTION" in
				"Lower Idle Frequencies"*)
					WHIP_QUESTION="Toggle the use of lower idle frequencies for CPU, CORE and RAM.\n\nAs the lower frequencies are active only when the device is idle, enabling this feature allows for potential power saving without impacting performance.\n\nCurrent Setting: $rpi_freq_min_text\n\nEnable: (Allows for potential power saving)\nSets arm_freq_min=100, core_freq_min=75 and sdram_freq_min=200.\n\nDisable: (Default)\nSets arm_freq_min=700, core_freq_min=250 and sdram_freq_min=400."
					local whiptail_menu_array=()
					whiptail_menu_array+=("Enable" "Lowers the idle frequencies for CPU, CORE, RAM.")
					whiptail_menu_array+=("Disable" "Returns the idle frequencies to defaults.")

					OPTION=$(whiptail --title "$WHIP_TITLE" --menu "$WHIP_QUESTION" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 22 75 2 "${whiptail_menu_array[@]}" 3>&1 1>&2 2>&3)
					CHOICE=$?

					#delete[] array
					unset whiptail_menu_array

					if (( $CHOICE == 0 )); then
						if [ "$OPTION" = "Enable" ]; then
							sed -i "/arm_freq_min=/c\arm_freq_min=100" /DietPi/config.txt
							sed -i "/core_freq_min=/c\core_freq_min=75" /DietPi/config.txt
							sed -i "/sdram_freq_min=/c\sdram_freq_min=200" /DietPi/config.txt
						else
							sed -i "/arm_freq_min=/c\#arm_freq_min=700" /DietPi/config.txt
							sed -i "/core_freq_min=/c\#core_freq_min=250" /DietPi/config.txt
							sed -i "/sdram_freq_min=/c\#sdram_freq_min=400" /DietPi/config.txt
						fi
						REBOOT_REQUIRED=true
					fi

					#Return to This Menu
					TARGETMENUID=4
				;;
				"CPU Max Freq Limit"*)

					local fp_available_freq="/tmp/.dietpi-config_available_freq"

					#Generate a list of available freqs
					if [ -f /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies ]; then
						cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_frequencies | tr ' ' '\n' | sed -e 's/[^0-9]//g' | sed '/^$/d' > "$fp_available_freq"
					#Odroid XU3/4
					elif [ -f /sys/devices/system/cpu/cpufreq/mp-cpufreq/cpu_freq_table ]; then
						cat /sys/devices/system/cpu/cpufreq/mp-cpufreq/cpu_freq_table | tr ' ' '\n' | sed -e 's/[^0-9]//g' | sed '/^$/d' > "$fp_available_freq"
					#No list available.
					else
						whiptail --title "Not Available" --msgbox "Your processor does not support this feature." --backtitle "$WHIP_BACKTITLE" 10 60
					fi

					#List available, read to array
					if [ -f "$fp_available_freq" ]; then

						#Convert to Mhz | generate whiptail menu
						local whiptail_menu_list=()
						local available_frequency_array=()
						readarray available_frequency_array < "$fp_available_freq"

						for ((i=0; i<${#available_frequency_array[@]}; i++))
						do
							whiptail_menu_list+=("$(( ${available_frequency_array[$i]} / 1000 ))" "Mhz")
						done

						#Add disable option
						whiptail_menu_list+=("0" "Disabled")

						#Run menu
						OPTION=$(whiptail --title "$WHIP_TITLE" --menu "Limit the maximum frequency that your processor can reach.\nThis can be useful for lowering temprature and saving power.\n\nCurrent setting: $user_frequency_max_text" --cancel-button "Back" --backtitle "$WHIP_BACKTITLE" --default-item "$user_frequency_max_current" 18 65 7 "${whiptail_menu_list[@]}" 3>&1 1>&2 2>&3)
						CHOICE=$?
						if (( $CHOICE == 0 )); then
							sed -i "/cpu_max_frequency=/c\cpu_max_frequency=$OPTION" /DietPi/dietpi.txt
							/DietPi/dietpi/dietpi-cpu_set
						fi

						#delete[] arrays
						unset whiptail_menu_list
						unset available_frequency_array
					fi

					rm "$fp_available_freq" &> /dev/null

					#Return to This Menu
					TARGETMENUID=4

				;;
				"Overclocking"*)
					TARGETMENUID=13
				;;
				"Change CPU Governor"*)

					#Obtain available Govs. Setup their menu and description.
					local Description="Change CPU Governor:"
					local whiptail_menu_array=()
					if (( $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors | grep -ci -m1 'interactive') == 1 )); then
						whiptail_menu_array+=("interactive" "Scales CPU frequency between $frequency_min_cpu_governor Mhz and $frequency_max_cpu_governor Mhz.")
						Description+="\nInteractive  | Dynamic CPU frequency based on usage (recommended)"
					fi

					if (( $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors | grep -ci -m1 'ondemand') == 1 )); then
						whiptail_menu_array+=("ondemand" "Scales CPU frequency between $frequency_min_cpu_governor Mhz and $frequency_max_cpu_governor Mhz.")
						Description+="\nOndemand     | Dynamic CPU frequency based on usage."
					fi

					if (( $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors | grep -ci -m1 'conservative') == 1 )); then
						whiptail_menu_array+=("conservative" "Scales CPU frequency between $frequency_min_cpu_governor Mhz and $frequency_max_cpu_governor Mhz.")
						Description+="\nConservative | Same as ondemand. Bias towards powersaving, slower scaling. "
					fi

					if (( $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors | grep -ci -m1 'powersave') == 1 )); then
						whiptail_menu_array+=("powersave" "Limits CPU frequency to $frequency_min_cpu_governor Mhz.")
						Description+="\nPowersave    | Static. Reduces energy consumption, heat, performance."
					fi

					if (( $(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors | grep -ci -m1 'performance') == 1 )); then
						whiptail_menu_array+=("performance" "Forces CPU frequency to $frequency_max_cpu_governor Mhz.")
						Description+="\nPerformance  | Static. Increases energy consumption, heat, performance."
					fi

					OPTION=$(whiptail --title "$WHIP_TITLE" --menu "$Description" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 17 80 5 "${whiptail_menu_array[@]}" 3>&1 1>&2 2>&3)
					CHOICE=$?

					#delete[] array
					unset whiptail_menu_array

					if (( $CHOICE == 0 )); then
						sed -i "/cpu_governor=/c\cpu_governor=$OPTION" /DietPi/dietpi.txt
						/DietPi/dietpi/dietpi-cpu_set
					fi

					#Return to This Menu
					TARGETMENUID=4
				;;
				"CPU Throttle Up"*)
					MIN_VALUE=30
					MAX_VALUE=95
					OPTION=$(whiptail --inputbox "When the CPU usage (%) is greater than this value, the CPU frequency will increase from $frequency_min_cpu_governor Mhz to $frequency_max_cpu_governor Mhz. \n - Recommended value | 60 (server) | 40 (desktop) \n - Valid range $MIN_VALUE - $MAX_VALUE \n - Applied when CPU governor is ondemand or conservative" 11 70 "$current_cpu_throttle_up" --title "CPU Throttle Up %" 3>&1 1>&2 2>&3)
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						if [[ $OPTION =~ ^-?[0-9]+$ ]] && (($OPTION <= $MAX_VALUE)) && (($OPTION >= $MIN_VALUE)); then
							sed -i "/cpu_usage_throttle_up=/c\cpu_usage_throttle_up=$OPTION" /DietPi/dietpi.txt
							#Apply changes
							/DietPi/dietpi/dietpi-cpu_set
						else
							Info_Input_Not_Valid_Integer
						fi
					fi

					#Return to this menu
					TARGETMENUID=4
				;;
				"ARM Initial Turbo"*)
					MIN_VALUE=0
					MAX_VALUE=60
					OPTION=$(whiptail --inputbox "Activates turbo mode during boot ($frequency_max_cpu_governor Mhz), for the duration of value in seconds. \n - Recommended value is 20 \n - Valid range $MIN_VALUE (disabled) - $MAX_VALUE" 12 60 "$current_initial_turbo" --title "ARM Initial Turbo Duration" 3>&1 1>&2 2>&3)
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						if [[ $OPTION =~ ^-?[0-9]+$ ]] && (($OPTION <= $MAX_VALUE)) && (($OPTION >= $MIN_VALUE)); then
							sed -i "/initial_turbo=/c\initial_turbo=$OPTION" /DietPi/config.txt
							REBOOT_REQUIRED=true
						else
							Info_Input_Not_Valid_Integer
						fi
					fi

					#Return to this menu
					TARGETMENUID=4
				;;
				"ARM Temp Limit"*)
					MIN_VALUE=45
					MAX_VALUE=85
					OPTION=$(whiptail --inputbox "When the ARM temprature ('c) reaches this value, the ARM will underclock to reduce heat. \n - Recommended value is 65  \n - Valid range $MIN_VALUE - $MAX_VALUE" 11 60 "$current_arm_temp_limit" --title "ARM Temprature Limit" 3>&1 1>&2 2>&3)
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						if [[ $OPTION =~ ^-?[0-9]+$ ]] && (($OPTION <= $MAX_VALUE)) && (($OPTION >= $MIN_VALUE)); then
							sed -i "/temp_limit=/c\temp_limit=$OPTION" /DietPi/config.txt
							REBOOT_REQUIRED=true
						else
							Info_Input_Not_Valid_Integer
						fi
					fi

					#Return to this menu
					TARGETMENUID=4
				;;
			esac
		fi

	}

	Change_Password(){

		local PasswordRecieved=0

		#1st input
		local passw1=$(whiptail --passwordbox "Please Enter Your New Password" 8 60 --title "Change PW" 3>&1 1>&2 2>&3)
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			((PasswordRecieved++))
		fi

		#2nd input (confirm)
		local passw2=$(whiptail --passwordbox "Please Confirm Your New Password" 8 60 --title "Confirm PW" 3>&1 1>&2 2>&3)
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			((PasswordRecieved++))
		fi

		#Password Mismatch
		if [ "$passw1" != "$passw2" ]; then
			WHIP_TITLE='Error - Password Mismatch'
			whiptail --title "$WHIP_TITLE" --msgbox " The Passwords you have entered do not match, therefor, no changes have been applied. Please try again" 8 60
		#Change password
		elif (( $PasswordRecieved == 2 )); then
			echo -e "$passw1\n$passw1" | passwd -q root
			WHIP_TITLE='Password Applied'
			whiptail --title "$WHIP_TITLE" --msgbox " Your new password has successfully been applied." 8 60
		#Aborted
		else
			WHIP_TITLE='Password Aborted'
			whiptail --title "$WHIP_TITLE" --msgbox " Password change has been aborted. No changes have been applied" 8 60
		fi

		##Whiptail password box always returns exit code 0. No way to obtain if a choice was made.
		#local passw1=$(whiptail --passwordbox "Please Enter Your New Password" 8 60 --title "Change PW" 3>&1 1>&2 2>&3)
		#CHOICE=$?
		#if (( $CHOICE == 0 )); then
		#
		#	local passw2=$(whiptail --passwordbox "Please Confirm Your New Password" 8 60 --title "Confirm PW" 3>&1 1>&2 2>&3)
		#	CHOICE=$?
		#	if (( $CHOICE == 0 )); then
		#
		#		#Password Mismatch
		#		if [ "$passw1" != "$passw2" ]; then
		#			WHIP_TITLE='Error - Password Mismatch'
		#			whiptail --title "$WHIP_TITLE" --msgbox " The Passwords you have entered do not match, therefor, no changes have been applied. Please try again" 8 60
		#		#Apply Password
		#		else
		#			echo -e "$passw1\n$passw1" | passwd -q root
		#			WHIP_TITLE='Password Applied'
		#			whiptail --title "$WHIP_TITLE" --msgbox " Your new password has successfully been applied." 8 60
		#		fi
		#	fi
		#fi

	}

	Change_Hostname(){

		#Get existing Hostname
		local hostname_existing=$(cat /etc/hostname)
		OPTION=$(whiptail --inputbox "Enter Your New Hostname" 8 60 "$hostname_existing" --title "Change Hostname" --backtitle "$WHIP_BACKTITLE" 3>&1 1>&2 2>&3)
		CHOICE=$?
		if (( $CHOICE == 0 )) && [ "$hostname_existing" != "$OPTION" ]; then

			/DietPi/dietpi/func/change_hostname "$OPTION"
			REBOOT_REQUIRED=true
			WHIP_TITLE='Hostname Change Completed'
			whiptail --title "$WHIP_TITLE" --msgbox " Your Hostname has been changed: \n - From $hostname_existing \n - To $OPTION" 9 60
		#Aborted
		else
			WHIP_TITLE='Hostname Change Aborted'
			whiptail --title "$WHIP_TITLE" --msgbox " Hostname change has been aborted. No changes have been applied" 8 60
		fi
	}

	#TARGETMENUID=5
	Menu_SecurityOptions(){

		TARGETMENUID=0

		WHIP_TITLE='---------- DietPi - Security Options ----------'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Lock down your DietPi Install" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 12 60 2 \
		"1" "Change Root Password" \
		"2" "Change Hostname" 3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			if (( $OPTION == 1 )); then
				 Change_Password
				 TARGETMENUID=5
			elif (( $OPTION == 2 )); then
				 Change_Hostname
				 TARGETMENUID=5
			fi
		fi
	}

	#TARGETMENUID=6
	Menu_GpumemoryOptions(){

		TARGETMENUID=1

		#Get Current MemorySplit Settings and Data
		local gpu_mem_current=0
		local ram_mem_current=0
		local ram_mem_total=0

		if (( $HW_MODEL == 0 )); then
			gpu_mem_current=$(grep -m1 'gpu_mem_256=' /DietPi/config.txt  | sed 's/gpu_mem_256=//g')
			ram_mem_current=$((256-gpu_mem_current))
			ram_mem_total=256
		elif (( $HW_MODEL == 1 )); then
			gpu_mem_current=$(grep -m1 'gpu_mem_512=' /DietPi/config.txt  | sed 's/gpu_mem_512=//g')
			ram_mem_current=$((512-gpu_mem_current))
			ram_mem_total=512
		elif (( $HW_MODEL == 2 )); then
			gpu_mem_current=$(grep -m1 'gpu_mem_1024=' /DietPi/config.txt  | sed 's/gpu_mem_1024=//g')
			ram_mem_current=$((1024-gpu_mem_current))
			ram_mem_total=1024
		elif (( $HW_MODEL == 10 )); then
			ram_mem_current=$(free -m -o | grep -m1 'Mem:' | awk '{print $2}')
			gpu_mem_current=$((1024-ram_mem_current))
		fi

		WHIP_TITLE="---------- DietPi - GPU/RAM Split ----------"

		#RPi's
		if (( $HW_MODEL < 10 )); then

			#Create array for storing menu selectable options.
			local -a option_name=(
				"Server"
				"Desktop"
				"Kodi"
				"Gaming"
			)

			#Create array for storing available GPU values
			local -i available_gpu_values=(
				16
				64
				128
				128
			)

			if (( $HW_MODEL == 0 )); then
				echo -e "As above, array is defaulted to RPi1 - 256mb" &> /dev/null
			elif (( $HW_MODEL == 1 )); then
				available_gpu_values[2]=128
				available_gpu_values[3]=192
			elif (( $HW_MODEL == 2 )); then
				available_gpu_values[1]=128
				available_gpu_values[2]=192
				available_gpu_values[3]=256
			fi

			#Generate text array list for whiptail
			local option_output_text=()
			for ((i=0; i<${#option_name[@]}; i++))
			do
				option_output_text+=("${option_name[$i]}" )
				local temp_value=$((ram_mem_total - ${available_gpu_values[$i]}))
				option_output_text+=("${available_gpu_values[$i]} MB GPU | $temp_value MB RAM" )
			done

			OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware : $HW_MODEL_DESCRIPTION \n Current: $gpu_mem_current MB GPU | $ram_mem_current MB RAM" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 14 75 4 "${option_output_text[@]}" 3>&1 1>&2 2>&3)
			CHOICE=$?
			if (( $CHOICE == 0 )); then

				#Obtain the selected array index value by matching Option with Option Name
				for ((i=0; i<${#option_name[@]}; i++))
				do
					if [ "$OPTION" = "${option_name[$i]}" ]; then
						local temp_index=$i
						break
					fi
				done

				#save
				sed -i "/gpu_mem_$ram_mem_total=/c\gpu_mem_$ram_mem_total=${available_gpu_values[$temp_index]}" /DietPi/config.txt

				REBOOT_REQUIRED=true
				#Return to this menu
				TARGETMENUID=6
			fi

			#delete [] array
			unset option_name
			unset available_gpu_values

		#Odroid C1
		elif (( $HW_MODEL == 10 )); then

			#Odroid HDMI/headless extra data
			local display_output_enabled=$(cat /DietPi/boot.ini | grep -ci -m1 'setenv hdmioutput "1"')
			local display_vpu_enabled=$(cat /DietPi/boot.ini | grep -ci -m1 'setenv vpu "1"')
			local display_output_text="Enabled"
			local display_vpu_text="Enabled"

			if (( $display_output_enabled == 0 )); then
				display_output_text="Disabled"
			fi
			if (( $display_vpu_enabled == 0 )); then
				display_vpu_text="Disabled"
			fi

			OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware : $HW_MODEL_DESCRIPTION \n Current  : HDMI: $display_output_text | VPU: $display_vpu_text \n Memory   : $gpu_mem_current MB GPU | $ram_mem_current MB RAM \n NB: GPU/RAM figures require a reboot after a change is made." --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 15 70 3 \
			"Headless" "HDMI: Disabled | VPU: Disabled" \
			"Server" "HDMI: Enabled  | VPU: Disabled" \
			"Desktop" "HDMI: Enabled  | VPU: Enabled" 3>&1 1>&2 2>&3)

			case "$OPTION" in
			  Headless)
				sed -i '/setenv hdmioutput /c\setenv hdmioutput "0"' /DietPi/boot.ini
				sed -i '/setenv vpu /c\setenv vpu "0"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to this menu
				TARGETMENUID=6
				;;
			  Server)
				sed -i '/setenv hdmioutput /c\setenv hdmioutput "1"' /DietPi/boot.ini
				sed -i '/setenv vpu /c\setenv vpu "0"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to this menu
				TARGETMENUID=6
				;;
			  Desktop)
				sed -i '/setenv hdmioutput /c\setenv hdmioutput "1"' /DietPi/boot.ini
				sed -i '/setenv vpu /c\setenv vpu "1"' /DietPi/boot.ini
				REBOOT_REQUIRED=true
				#Return to this menu
				TARGETMENUID=6
				;;
			esac

		else
			Info_HW_OptionNotSupported
		fi
	}

	#TARGETMENUID=7
	Menu_LanguageOptions(){

		TARGETMENUID=0

		WHIP_TITLE='--- DietPi - Language and Regional Options ---'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu "Make a Selection" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 12 60 3 \
		"Locale" "Change Language and Regional Settings" \
		"Timezone" "Change Timezone Location Setting" \
		"Keyboard" "Change Keyboard Language Setting" 3>&1 1>&2 2>&3)

		case "$OPTION" in
		  Locale)
			REBOOT_REQUIRED=true
			dpkg-reconfigure locales

			#Return to this menu
			TARGETMENUID=7
			;;
		  Timezone)
			REBOOT_REQUIRED=true
			dpkg-reconfigure tzdata

			#Return to this menu
			TARGETMENUID=7
			;;
		  Keyboard)
			REBOOT_REQUIRED=true

			#Wheezy
			if (( $DISTRO == 1 )); then
				dpkg-reconfigure keyboard-configuration
				invoke-rc.d keyboard-setup start
			else
				dpkg-reconfigure console-data
				service keyboard-setup restart
			fi

			#Return to this menu
			TARGETMENUID=7
		   ;;
		esac
	}

	SHARED_IP_STATIC="0.0.0.0"
	SHARED_GATEWAY_STATIC="0.0.0.0"
	SHARED_MASK_STATIC="0.0.0.0"

	ETH_INDEX=0
	ETH_DISABLED=0
	ETH_HARDWARE=false
	ETH_CONNECTED=0
	ETH_IP="0.0.0.0"
	ETH_GATEWAY="0.0.0.0"
	ETH_MASK="0.0.0.0"
	ETH_MODE=0 #0=static 1=dhcp
	ETH_MODE_TARGET=0

	WIFI_INDEX=0
	WIFI_DISABLED=0
	WIFI_HARDWARE=false
	WIFI_CONNECTED=0
	WIFI_IP="0.0.0.0"
	WIFI_GATEWAY="0.0.0.0"
	WIFI_MASK="0.0.0.0"
	WIFI_MODE=0 #0=static 1=dhcp
	WIFI_MODE_TARGET=0
	WIFI_SSID=""
	WIFI_KEY=""
	WIFI_BITRATE=0
	WIFI_SIGNALSTRENGTH=0


	Network_ETH_CopyCurrentToStatic(){

		#Apply, Only if we have a connection (prevent blank details which breaks networking)
		if (( $ETH_CONNECTED == 1 )); then
			sed -i "/address/c\address $ETH_IP" /etc/network/interfaces
			sed -i "/gateway/c\gateway $ETH_GATEWAY" /etc/network/interfaces
			sed -i "/netmask/c\netmask $ETH_MASK" /etc/network/interfaces
		fi
	}

	Network_WIFI_CopyCurrentToStatic(){

		#Apply, Only if we have a connection (prevent blank details which breaks networking)
		if (( $WIFI_CONNECTED == 1 )); then
			sed -i "/address/c\address $WIFI_IP" /etc/network/interfaces
			sed -i "/gateway/c\gateway $WIFI_GATEWAY" /etc/network/interfaces
			sed -i "/netmask/c\netmask $WIFI_MASK" /etc/network/interfaces
		fi
	}

	Network_Restart(){

		#Release all DHCP leases (too slow, quicker to allow router to decide leases)
		#dhclient -r

		#Kill dhclient
		killall dhclient &> /dev/null

		#Drop Connections
		ifdown eth$ETH_INDEX &> /dev/null
		ifdown wlan$WIFI_INDEX &> /dev/null

		#Restart Networking
		/etc/init.d/networking reload
		/etc/init.d/networking restart

		#Ubuntu - Manually bring up adapters
		if (( $DISTRO == 2 )); then
			if (( $WIFI_DISABLED == 0 )); then
				ifup wlan$WIFI_INDEX
			elif (( $ETH_DISABLED == 0 )); then
				ifup eth$ETH_INDEX
			fi
		fi

	}

	Network_ApplyChanges(){

		#Eth Mode change
		if (( $ETH_MODE_TARGET == 0 )); then
			#Change to STATIC
			sed -i "/iface eth/c\iface eth$ETH_INDEX inet static" /etc/network/interfaces
		elif (( $ETH_MODE_TARGET == 1 )); then
			#Change to DHCP
			sed -i "/iface eth/c\iface eth$ETH_INDEX inet dhcp" /etc/network/interfaces
		fi
		#Update Current Mode for network restart
		ETH_MODE=$ETH_MODE_TARGET

		#Wifi Mode change
		if (( $WIFI_MODE_TARGET == 0 )); then
			#Change to STATIC
			sed -i "/iface wlan/c\iface wlan$WIFI_INDEX inet static" /etc/network/interfaces
		elif (( $WIFI_MODE_TARGET == 1 )); then
			#Change to DHCP
			sed -i "/iface wlan/c\iface wlan$WIFI_INDEX inet dhcp" /etc/network/interfaces
		fi
		#Update Current Mode for network restart
		WIFI_MODE=$WIFI_MODE_TARGET

		#restart net
		Network_Restart
	}

	Change_StaticIp(){
		#Ethernet
		OPTION=$(whiptail --inputbox "Enter Your New Ip Address" 8 60 "$SHARED_IP_STATIC" --title "Set Static Ip Address" 3>&1 1>&2 2>&3)
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			sed -i "/address/c\address $OPTION" /etc/network/interfaces
		fi
	}

	Change_StaticGateway(){
		OPTION=$(whiptail --inputbox "Enter Your New Gateway Address" 8 60 "$SHARED_GATEWAY_STATIC" --title "Set Static Gateway Address" 3>&1 1>&2 2>&3)
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			sed -i "/gateway/c\gateway $OPTION" /etc/network/interfaces
		fi
	}

	Change_StaticMask(){
		OPTION=$(whiptail --inputbox "Enter Your New Mask Address" 8 60 "$SHARED_MASK_STATIC" --title "Set Static Mask Address" 3>&1 1>&2 2>&3)
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			sed -i "/netmask/c\netmask $OPTION" /etc/network/interfaces
		fi
	}

	Change_WifiSsid(){
		OPTION=$(whiptail --inputbox "Enter the SSID name to connect to." 8 60 "$WIFI_SSID" --title "Set Your SSID" 3>&1 1>&2 2>&3)
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			sed -i "/wireless-essid/c\wireless-essid $OPTION" /etc/network/interfaces
			sed -i "/wpa-ssid/c\wpa-ssid $OPTION" /etc/network/interfaces
		fi
	}

	Change_WifiKey(){
		OPTION=$(whiptail --inputbox "Enter the Access Key (WPA/WEP)." 8 60 "$WIFI_KEY" --title "Set Your Acccess Key" 3>&1 1>&2 2>&3)
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			sed -i "/wireless-key/c\wireless-key $OPTION" /etc/network/interfaces
			sed -i "/wpa-psk/c\wpa-psk $OPTION" /etc/network/interfaces
		fi
	}

	Scan_Wifi(){

		#Get all ssids
		clear
		echo -e "Scanning SSIDS, please wait...."
		echo -e "-------------------------------"
		iwlist wlan$WIFI_INDEX scan | grep ESSID: | sed 's/ESSID:"//g' | sed 's/"//g' | awk '{ print $1 }' > /tmp/dietpi-config_temp

		#read file to array
		readarray wifi_ssid_array < /tmp/dietpi-config_temp
		#Create List with indexs for Whiptail
		local wifi_ssid_list=()
		for ((i=0; i<${#wifi_ssid_array[@]}; i++))
		do
			wifi_ssid_list+=("$i" "${wifi_ssid_array[$i]}")
		done

		WHIP_TITLE='------ DietPi-Config - Wifi SSID Scan ------'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu "Please select a Wifi SSID" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 14 60 6 "${wifi_ssid_list[@]}" 3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			WIFI_SSID=${wifi_ssid_array[$OPTION]}
			sed -i "/wireless-essid/c\wireless-essid $WIFI_SSID" /etc/network/interfaces
			sed -i "/wpa-ssid/c\wpa-ssid $WIFI_SSID" /etc/network/interfaces
			Change_WifiKey
		fi

		#Clean up tmp files
		rm /tmp/dietpi-config_temp &> /dev/null

		#delete[] arrays
		unset wifi_ssid_array
		unset wifi_ssid_list

	}

	Wifi_Reconnect(){
		WHIP_QUESTION="SSID: $WIFI_SSID \nKEY: $WIFI_KEY \n\nConnect now? \n\n(NOTICE) All connections will be dropped!"
		whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 14 60
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			#Apply Changes
			clear
			echo -e "Connecting to $WIFI_SSID , please wait"
			Network_ApplyChanges
		fi
	}

	Ethernet_Reconnect(){
		WHIP_QUESTION="Do you wish to apply settings and reconnect network now? \n\n(NOTICE) All connections will be dropped!"
		whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 60
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			#Apply Changes
			clear
			echo -e "Reconnecting Ethernet , please wait"
			Network_ApplyChanges
		fi
	}


	INTERNET_ONLINE=0 # 0=not tested, 1=failed, 2=online
	INTERNET_URL='http://mirrordirector.raspbian.org'

	Network_CheckInternetConnection(){

		INTERNET_ONLINE=0 #Not tested

		#Check for connection
		/DietPi/dietpi/func/check_connection 10 2 "$INTERNET_URL"
		if (( $? == 0 )); then
			INTERNET_ONLINE=2 #Online
		else
			INTERNET_ONLINE=1 #Failed
		fi
	}

	Network_GetData(){

		#Obtain network details (network indexs)
		/DietPi/dietpi/func/obtain_network_details

		#Reset
		SHARED_IP_STATIC="0.0.0.0"
		SHARED_GATEWAY_STATIC="0.0.0.0"
		SHARED_MASK_STATIC="0.0.0.0"

		ETH_INDEX=$(sed -n 1p /DietPi/dietpi/.network)
		ETH_DISABLED=$(cat /etc/network/interfaces | grep -ci -m1 "#auto eth$ETH_INDEX")
		ETH_HARDWARE=false
		ETH_CONNECTED=0
		ETH_IP="0.0.0.0"
		ETH_GATEWAY="0.0.0.0"
		ETH_MASK="0.0.0.0"
		ETH_MODE=0

		WIFI_INDEX=$(sed -n 2p /DietPi/dietpi/.network)
		WIFI_DISABLED=$(cat /etc/network/interfaces | grep -ci -m1 "#auto wlan$WIFI_INDEX")
		WIFI_HARDWARE=false
		WIFI_CONNECTED=0
		WIFI_IP="0.0.0.0"
		WIFI_GATEWAY="0.0.0.0"
		WIFI_MASK="0.0.0.0"
		WIFI_MODE=0
		WIFI_SSID="Not_Set"
		WIFI_KEY="Not_Set"
		#Get extra wifi stats
		WIFI_BITRATE=0
		WIFI_SIGNALSTRENGTH=0

		#Grab static address from /etc/network/interfaces
		SHARED_IP_STATIC=$(cat /etc/network/interfaces  | grep -m1 'address' | awk '{ print $2 }')
		SHARED_GATEWAY_STATIC=$(cat /etc/network/interfaces  | grep -m1 'gateway' | awk '{ print $2 }')
		SHARED_MASK_STATIC=$(cat /etc/network/interfaces  | grep -m1 'netmask' | awk '{ print $2 }')

		#eth
		if [ -d /sys/class/net/eth$ETH_INDEX ]; then
			#Hardware
			ETH_HARDWARE=true

			#Static or Dhcp?
			ETH_MODE=$(cat /etc/network/interfaces | grep -ci -m1 "iface eth$ETH_INDEX inet dhcp")

			#Connected and Valid IP?
			ETH_CONNECTED=$(ip r | grep -ci -m1 "eth$ETH_INDEX")

			#Enabled and Connected
			if (( $ETH_DISABLED == 0 )) && (( $ETH_CONNECTED == 1 )); then
				ETH_IP=$(ifconfig eth$ETH_INDEX | grep -m1 'inet' | awk '{ print $2 }' | sed 's/addr://g')
				#gateway
				ETH_GATEWAY=$(ip r | grep -m1 'default' | awk '{ print $3 }')
				#mask
				ETH_MASK=$(ifconfig eth$ETH_INDEX | grep -m1 'inet' | awk '{ print $4 }' | sed 's/Mask://g')
			fi
		fi

		# static ip is shared for both Wifi and Ethernet

		#wlan
		if [ -d /sys/class/net/wlan$WIFI_INDEX ]; then
			#Hardware
			WIFI_HARDWARE=true

			#Static or Dhcp?
			WIFI_MODE=$(cat /etc/network/interfaces | grep -ci -m1 "iface wlan$WIFI_INDEX inet dhcp")

			#Connected and Valid IP?
			WIFI_CONNECTED=$(ip r | grep -ci -m1 "wlan$WIFI_INDEX")

			#Wifi Extras
			WIFI_SSID=$(cat /etc/network/interfaces | grep -m1 'wireless-essid' | sed 's/^[^\ ]\+\ //')
			WIFI_KEY=$(cat /etc/network/interfaces | grep -m1 'wireless-key' | sed 's/^[^\ ]\+\ //')

			#Enabled and Connected
			if (( $WIFI_DISABLED == 0 )) && (( $WIFI_CONNECTED == 1 )); then
				WIFI_IP=$(ifconfig wlan$WIFI_INDEX | grep -m1 'inet' | awk '{ print $2 }' | sed 's/addr://g')
				#gateway
				WIFI_GATEWAY=$(ip r | grep -m1 'default' | awk '{ print $3 }')
				#mask
				WIFI_MASK=$(ifconfig wlan$WIFI_INDEX | grep -m1 'inet' | awk '{ print $4 }' | sed 's/Mask://g')
				#Get extra wifi stats
				WIFI_BITRATE=$(iwconfig wlan$WIFI_INDEX | grep -m1 'Bit Rate:' | awk '{ print $2 }' | sed 's/Rate://g')
				WIFI_SIGNALSTRENGTH=$(iwconfig wlan$WIFI_INDEX | grep -m1 'Signal level=' | awk '{ print $4 }' | sed 's/level=//g' | cut -f1 -d "/")
			fi
		fi
	}

	Menu_SambaClientSetup(){

		/DietPi/dietpi/func/dietpi-set_smbclient

	}

	Menu_CurlftpFsSetup(){

		/DietPi/dietpi/func/dietpi-set_curlftpfs

	}

	#TARGETMENUID=8
	Menu_NetworkOptions(){

		TARGETMENUID=0

		#Check Network
		Network_GetData

		#Reset any Target Modes to Current (DHCP/STATIC)
		ETH_MODE_TARGET=$ETH_MODE
		WIFI_MODE_TARGET=$WIFI_MODE

		#Obtain enabled/disabled status
		local eth_disabled_text='Enabled'
		if (( $ETH_DISABLED == 1 )); then
			eth_disabled_text='Disabled'
		fi

		local wlan_disabled_text='Enabled'
		if (( $WIFI_DISABLED == 1 )); then
			wlan_disabled_text='Disabled'
		fi

		#Obtain Hardware Status
		local eth_hardware_text='Available'
		if [ "$ETH_HARDWARE" = false ]; then
			eth_hardware_text='Not Found'
		fi

		local wlan_hardware_text='Available'
		if [ "$WIFI_HARDWARE" = false ]; then
			wlan_hardware_text='Not Found'
		fi

		#Obtain Connected/Carrier Status
		local eth_connected_text='Disconnected'
		if (( $ETH_CONNECTED == 1 )); then
			eth_connected_text='Connected'
		fi

		local wlan_connected_text='Disconnected'
		if (( $WIFI_CONNECTED == 1 )); then
			wlan_connected_text='Connected'
		fi

		#Internet Connection Status
		local Internet_connected_text='Please run Internet Test'
		if (( $INTERNET_ONLINE == 2 )); then
			Internet_connected_text='Online'
		elif (( $INTERNET_ONLINE == 1 )); then
			Internet_connected_text='Offline / Failed'
		fi

		#Set to Not Tested for next loop
		INTERNET_ONLINE=0

		#Samba Client
		local sambaclient_installed=0
		local sambaclient_status="Not Installed"
		local sambaclient_menutext="Install now to access Windows shares"
		local sambaclient_mounted_size="unknown"
		local sambaclient_mounted_used="unknown"
		local sambaclient_mounted_free="unknown"
		if (( $(cat /DietPi/dietpi/.installed | grep -m1 'SMBCLIENT ' | awk '{print $2}') == 2 )); then

			sambaclient_installed=1
			sambaclient_status="Unable to connect and/or incorrect details"
			sambaclient_menutext="Input/Modify Details"

			#Check if mount exists and is valid
			if (( $(df -h | grep -ci -m1 '/mnt/samba') == 1 )); then
				#Get stats
				sambaclient_mounted_size=$(df -h | grep -m1 '/mnt/samba' | awk '{ print $2 }')
				sambaclient_mounted_used=$(df -h | grep -m1 '/mnt/samba' | awk '{ print $3 }')
				sambaclient_mounted_free=$(df -h | grep -m1 '/mnt/samba' | awk '{ print $4 }')
				sambaclient_status="/mnt/samba | Size $sambaclient_mounted_size | Used $sambaclient_mounted_used | Free $sambaclient_mounted_free"
			fi
		fi

		#ftp Client mount, curlftpfs
		local curlftpfs_installed=0
		local curlftpfs_status="Not Installed"
		local curlftpfs_menutext="Install now to access FTP as filesystem mount"
		if (( $(cat /DietPi/dietpi/.installed | grep -m1 'CURLFTPFS ' | awk '{print $2}') == 2 )); then

			curlftpfs_installed=1
			curlftpfs_status="Unable to connect and/or incorrect details"
			curlftpfs_menutext="Input/Modify Details"

			#Check if mount exists and is valid
			if (( $(df -h | grep -ci -m1 '/mnt/ftp_client') == 1 )); then
				#Get stats
				curlftpfs_status="/mnt/ftp_client | Connected"
			fi
		fi

		#NoIp Client
		local noip_installed=0
		local noip_status="Not Installed"
		local noip_menutext="Install No-Ip now"
		if (( $(cat /DietPi/dietpi/.installed | grep -m1 'NOIPDYNDNS ' | awk '{print $2}') == 2 )); then

			noip_installed=1
			noip_status="Offline - Please Enter No-Ip Details"
			noip_menutext="Enter/Setup NoIp Details"

			#Check if noip is running (indicates login details are valid)
			if (( $(ps aux | grep -ci -m1 '/usr/local/bin/[n]oip2') == 1 )); then
				noip_status="Online / Active"
				noip_menutext="Change NoIp Details"
			fi
		fi


		WHIP_TITLE='--- DietPi - Network Options ---'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu " \n Ethernet     : $eth_hardware_text | $eth_disabled_text | $eth_connected_text \n Wifi         : $wlan_hardware_text | $wlan_disabled_text | $wlan_connected_text \n Internet     : $Internet_connected_text \n Samba client : $sambaclient_status \n FTP client   : $curlftpfs_status\n NoIp status  : $noip_status" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 20 75 6 \
		"Ethernet" "Change Wired Network Settings" \
		"Wifi" "Change Wireless Network Settings" \
		"Test" "Run the Internet Connection Test" \
		"Samba Client" "$sambaclient_menutext" \
		"Ftp Client" "$curlftpfs_menutext" \
		"NoIp" "$noip_menutext" 3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			case "$OPTION" in
			  Ethernet)
				#No hardware found
				if [ "$ETH_HARDWARE" = false ]; then
					WHIP_TITLE=' Error: No Ethernet Hardware was found.'
					WHIP_QUESTION=' No Ethernet Hardware was found. Your most likely running a Pi Model A'
					whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 12 60
					#Return to this Menu
					TARGETMENUID=8
				#Disabled
				elif (( $ETH_DISABLED == 1 )); then
					whiptail --title "Ethernet is Disabled" --yesno " Ethernet must be enabled before settings can be changed. \n \n Would you like to Enable Ethernet now? \n - (NOTICE) All connections will drop! \n - (NOTICE) This will disable Wifi" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 14 60
					CHOICE=$?
					#Confirm action
					if (( $CHOICE == 0 )); then
						sed -i "/auto eth/c\auto eth$ETH_INDEX" /etc/network/interfaces
						sed -i "/auto wlan/c\#auto wlan$WIFI_INDEX" /etc/network/interfaces
						Network_ApplyChanges
						TARGETMENUID=9
					else
						#Return to this Menu
						TARGETMENUID=8
					fi
				else
					TARGETMENUID=9
				fi
				;;
			  Wifi)
				#No hardware found
				if [ "$WIFI_HARDWARE" = false ]; then
					WHIP_TITLE=' Error: No Wifi Hardware was found. '
					WHIP_QUESTION=' No Wifi Hardware was found. '
					whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 12 60

					#Return to this Menu
					TARGETMENUID=8
				#Disabled
				elif (( $WIFI_DISABLED == 1 )); then
					whiptail --title "Wifi is Disabled" --yesno " Wifi must be enabled before settings can be changed. \n \n Would you like to Enable Wifi now? \n - (NOTICE) All connections will drop! \n - (NOTICE) This will disable Ethernet" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 14 60
					CHOICE=$?
					#Confirm action
					if (( $CHOICE == 0 )); then
						sed -i "/auto wlan/c\auto wlan$WIFI_INDEX" /etc/network/interfaces
						sed -i "/auto eth/c\#auto eth$ETH_INDEX" /etc/network/interfaces
						Network_ApplyChanges
						TARGETMENUID=10
					else
						#Return to this Menu
						TARGETMENUID=8
					fi
				else
					TARGETMENUID=10
				fi
				;;
			  Test)
				#Request URL to test
				OPTION=$(whiptail --inputbox "Press Enter to test your internet connection, or, enter another URL address to test (eg: http://google.com)" 8 60 "$INTERNET_URL" --title "URL Address to Test" 3>&1 1>&2 2>&3)
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					INTERNET_URL=$OPTION
					Network_CheckInternetConnection
				fi
				#Return to this Menu
				TARGETMENUID=8
				;;
			  Samba*)
				#Installed?
				if (( $sambaclient_installed == 0 )); then
					whiptail --title "Install Samba Client?" --yesno " Samba Client is not installed, would you like to install it now? \n \n - This is required to access Windows Share Files" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 65
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						#install smbclient
						/DietPi/dietpi/dietpi-apt-get_update 1
						apt-get install smbclient cifs-utils ntfs-3g -y --no-install-recommends

						#Check its installed. Update DietPi .installed
						if (( $(dpkg -l | grep -ci -m1 'smbclient') == 1 )); then
							sed -i '/SMBCLIENT/c\SMBCLIENT 2' /DietPi/dietpi/.installed
						fi
					fi
				else
					Menu_SambaClientSetup
				fi

				#Return to this Menu
				TARGETMENUID=8
				;;
			  Ftp*)
				#Installed?
				if (( $curlftpfs_installed == 0 )); then
					whiptail --title "Install FTP Client?" --yesno " FTP Client (curlftpfs) is not installed, would you like to install it now? \n \n - This is required to mount an FTP connection to filesystem" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 65
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						#install curlftpfs
						/DietPi/dietpi/dietpi-apt-get_update 1
						apt-get install curlftpfs -y

						#Check its installed. Update DietPi .installed
						if (( $(dpkg -l | grep -ci -m1 'curlftpfs') == 1 )); then
							sed -i '/CURLFTPFS/c\CURLFTPFS 2' /DietPi/dietpi/.installed
						fi
					fi
				else
					Menu_CurlftpFsSetup
				fi

				#Return to this Menu
				TARGETMENUID=8
				;;
			  NoIp)
				#Installed?
				if (( $noip_installed == 0 )); then
					whiptail --title "Install NoIp Client?" --yesno "NoIp Client is not installed, would you like to install it now?\n\n- NoIp will allow you to use a fixed web address, regardless of your internet IP\neg: MySuperDooperWebsite.noip2.biz would point to this device!" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 13 70
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						#x32 x64
						if (( $HW_MODEL == 20 )); then
							local noip_url_address="http://dietpi.com/downloads/binaries/all/noip_x32_x64.zip"
						#ARM
						else
							local noip_url_address="http://dietpi.com/downloads/binaries/all/noip_armhf.zip"
						fi
						/DietPi/dietpi/func/check_connection 5 2 "$noip_url_address"

						#Install
						if (( $? == 0 )); then

							#NoIp Binary install
							wget "$noip_url_address" -O dietpi-noip.zip
							unzip dietpi-noip.zip
							rm dietpi-noip.zip
							mv noip_binary /usr/local/bin/noip2
							chmod +x /usr/local/bin/noip2

							#noip2 service file
							cp /DietPi/dietpi/conf/noip_init /etc/init.d/noip2
							chmod +x /etc/init.d/noip2
							update-rc.d noip2 defaults

							#Disable service autostart (controlled by DietPi-Services)
							/DietPi/dietpi/dietpi-services disable

							#Update DietPi .installed
							sed -i '/NOIPDYNDNS/c\NOIPDYNDNS 2' /DietPi/dietpi/.installed

						else
							WHIP_TITLE='Error - Unable to Connect'
							whiptail --title "$WHIP_TITLE" --msgbox "Unable to Install NoIp client \n $noip_url_address is offline and/or unreachable" 12 60
						fi
					fi
				else
					clear
					service noip2 stop
					noip2 -C
					read -p "Press any key to continue....."
					service noip2 start
				fi

				#Return to this Menu
				TARGETMENUID=8
				;;
			esac

		#Cancel
		else

			#Exit DietPi-Config on back to previous menu?
			if (( $EXITONBACK == 1 )); then
				#Return to this menu
				TARGETMENUID=8
				Menu_Exit
			fi
		fi
	}

	#TARGETMENUID=9
	Menu_NetworkOptions_Ethernet(){

		TARGETMENUID=8

		#Check Network
		Network_GetData

		#Get current Mode details
		local mode_current='DHCP'
		if (( $ETH_MODE == 0 )); then
			mode_current='STATIC'
		fi

		#Target Details
		local mode_target=''
		if (( $ETH_MODE_TARGET == 0 )); then
			mode_target='STATIC'
		elif (( $ETH_MODE_TARGET == 1 )); then
			mode_target='DHCP'
		fi

		WHIP_TITLE='--- DietPi - Ethernet Network Options ---'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Current Details: \n - Mode    = $mode_current \n - Ip      = $ETH_IP \n - Gateway = $ETH_GATEWAY \n - Mask    = $ETH_MASK" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 18 60 6 \
		"Change Mode" "$mode_target" \
		"Copy" "Copy Current address to Static" \
		"Static_Ip" "$SHARED_IP_STATIC"  \
		"Static_Gateway" "$SHARED_GATEWAY_STATIC"  \
		"Static_Mask" "$SHARED_MASK_STATIC"  \
		"Apply" "Save Changes (Restart Networking)" 3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			case "$OPTION" in
			  Change*)
				((ETH_MODE_TARGET++))
				if (( $ETH_MODE_TARGET == 2 )); then
					ETH_MODE_TARGET=0
				fi
				#Return to this menu
				TARGETMENUID=9
				;;
			  Apply)
				Ethernet_Reconnect
				#Return to this menu
				TARGETMENUID=9
				;;
			  Copy)
				Network_ETH_CopyCurrentToStatic
				#Return to this menu
				TARGETMENUID=9
				;;
			  Static_Ip)
				Change_StaticIp
				#Return to this menu
				TARGETMENUID=9
				;;
			  Static_Gateway)
				Change_StaticGateway
				#Return to this menu
				TARGETMENUID=9
				;;
			  Static_Mask)
				Change_StaticMask
				#Return to this menu
				TARGETMENUID=9
				;;
			esac
		#Cancel
		else
			#Copy Current to Static (just incase user changed value, and didnt apply)
			Network_ETH_CopyCurrentToStatic

		fi

	}

	#TARGETMENUID=10
	Menu_NetworkOptions_Wifi(){

		TARGETMENUID=8

		#Check Network
		Network_GetData

		#Get current Mode details
		local mode_current='DHCP'
		if (( $WIFI_MODE == 0 )); then
			mode_current='STATIC'
		fi

		#Target Details
		local mode_target=''
		if (( $WIFI_MODE_TARGET == 0 )); then
			mode_target='STATIC'
		elif (( $WIFI_MODE_TARGET == 1 )); then
			mode_target='DHCP'
		fi

		WHIP_TITLE='--- DietPi - Wireless Network Options ---'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Current Details: \n - SSID    = $WIFI_SSID | $WIFI_BITRATE Mbit | Strength: $WIFI_SIGNALSTRENGTH%\n - KEY     = $WIFI_KEY \n - Mode    = $mode_current \n - Ip      = $WIFI_IP \n - Gateway = $WIFI_GATEWAY \n - Mask    = $WIFI_MASK" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 22 65 8 \
		"Scan" "Scan and Connect" \
		"Manual" "Manually Set Wireless Details" \
		"Change Mode" "$mode_target" \
		"Copy" "Copy Current address to Static" \
		"Static_Ip" "$SHARED_IP_STATIC"  \
		"Static_Gateway" "$SHARED_GATEWAY_STATIC"  \
		"Static_Mask" "$SHARED_MASK_STATIC" \
		"Apply" "Save Changes (Restart Networking)" 3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			case "$OPTION" in
			  Scan)
				Scan_Wifi
				Wifi_Reconnect
				#Return to this menu
				TARGETMENUID=10
				;;
			  Manual)
				Change_WifiSsid
				Change_WifiKey
				Wifi_Reconnect
				#Return to this menu
				TARGETMENUID=10
				;;
			  Change*)
				((WIFI_MODE_TARGET++))
				if (( $WIFI_MODE_TARGET == 2 )); then
					WIFI_MODE_TARGET=0
				fi
				#Return to this menu
				TARGETMENUID=10
				;;
			  Apply)
				Wifi_Reconnect
				#Return to this menu
				TARGETMENUID=10
				;;
			  Copy)
				Network_WIFI_CopyCurrentToStatic
				#Return to this menu
				TARGETMENUID=10
				;;
			  Static_Ip)
				Change_StaticIp
				#Return to this menu
				TARGETMENUID=10
				;;
			  Static_Gateway)
				Change_StaticGateway
				#Return to this menu
				TARGETMENUID=10
				;;
			  Static_Mask)
				Change_StaticMask
				#Return to this menu
				TARGETMENUID=10
				;;
			esac
		else
			#Copy Current to Static (just incase user changed value, and didnt apply)
			Network_WIFI_CopyCurrentToStatic

		fi

	}

	#TARGETMENUID=11
	Menu_Tools(){

		TARGETMENUID=0

		WHIP_TITLE='--- DietPi - Tools ---'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Make a Selection" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 14 70 5 \
		"Benchmarks" "Filesystem and RAM benchmarks." \
		"DietPi-Backup" "Backup and restore your DietPi system." \
		"DietPi-Sync" "Sync (backup) a directory to another location." \
		"DietPi-Nice" "Tweak software process priorities (nice level)." \
		"DietPi-BugReport" "Send a bug beport to DietPi." 3>&1 1>&2 2>&3)

	#	"Stress Test" "Check the stability of your system." \
	 CHOICE=$?
		if (( $CHOICE == 0 )); then
			case "$OPTION" in
				"Stress Test")
					/DietPi/dietpi/dietpi-stress_test
					#return to this menu
					TARGETMENUID=11
				;;
				DietPi-Nice)
					/DietPi/dietpi/dietpi-nice 0
					#return to this menu
					TARGETMENUID=11
				;;
				Benchmarks)
					TARGETMENUID=12
				;;
				"DietPi-Backup")
					/DietPi/dietpi/dietpi-backup 0
					#return to this menu
					TARGETMENUID=11
				;;
				"DietPi-Sync")
					/DietPi/dietpi/dietpi-sync 0
					#return to this menu
					TARGETMENUID=11
				;;
				"DietPi-BugReport")
					/DietPi/dietpi/dietpi-bugreport
					#return to this menu
					TARGETMENUID=11
				;;
			esac
		fi

	}

	#Benchmark Scores
	SD_WRITE='Not Tested'
	SD_READ='Not Tested'
	USB_WRITE='Not Tested'
	USB_READ='Not Tested'
	RAM_WRITE='Not Tested'
	RAM_READ='Not Tested'

	Run_FilesystemBenchmark(){

		local device_index=$1
		local benchmark_temp_file=""
		local read_speed=0
		local write_speed=0
		local run_benchmark=1
		local benchmark_filesize=0
		local benchmark_filesystem_freespace=0
		local benchmark_filesystem_offset=10
		local text_info_test_name=""
		local min_benchmark_size=10

		clear

		#Define test locations / info and extras.
		if (( $device_index == 0 )); then
			text_info_test_name="SDcard"
			benchmark_temp_file="$HOME/benchmark.file"

			if (( $HW_MODEL < 10 )); then
				benchmark_filesystem_freespace=$(( $(df -m | grep -m1 'root' | awk '{print $4}') - $benchmark_filesystem_offset ))
			else
				benchmark_filesystem_freespace=$(( $(df -m | grep -m1 'mmcblk0p2' | awk '{print $4}') - $benchmark_filesystem_offset ))
			fi

		elif (( $device_index == 1 )); then
			text_info_test_name="USB harddrive"
			benchmark_temp_file="/mnt/usb_1/benchmark.file"
			benchmark_filesystem_freespace=$(( $(df -m | grep -m1 '/mnt/usb_1' | awk '{print $4}') - $benchmark_filesystem_offset ))
		elif (( $device_index == 2 )); then
			text_info_test_name="RAM"
			benchmark_temp_file="/tmp/benchmark.file"
			benchmark_filesystem_freespace=$(( $(df -m | grep -m1 '/tmp' | awk '{print $4}') - $benchmark_filesystem_offset ))
		fi

		#Not enough free space
		if (( $benchmark_filesystem_freespace < $min_benchmark_size )); then
			run_benchmark=0
			echo -e "(EE): Insufficient space to run $text_info_test_name filesystem benchmark.\n - Available space: $benchmark_filesystem_freespace MB\n - Space required: $min_benchmark_size MB"
			echo -e ""
			read -p "Press any key to continue....."

		#Obtain user benchmark size.
		else
			benchmark_filesize=$(whiptail --inputbox "Please enter a filesize test value (MB). A value of 100 is recommended.\n- Minimum value: $min_benchmark_size\n- Maximum possible value: $benchmark_filesystem_freespace" 10 70 "100" --title "Benchmark File Size (MB)" 3>&1 1>&2 2>&3)
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				#Check for valid interger/entry
				if [[ $benchmark_filesize =~ ^-?[0-9]+$ ]] && (( $benchmark_filesize > 0 )); then
					#Disable test if not enough free space.
					if (( $benchmark_filesystem_freespace < $benchmark_filesize )); then
						run_benchmark=0
						echo -e "(EE): Insufficient space to run $text_info_test_name filesystem benchmark.\n - Requested benchmark size: $benchmark_filesize MB\n - Available space for benchmark: $benchmark_filesystem_freespace MB"
						echo -e ""
						read -p "Press any key to continue....."
					#Value too small
					elif (( $benchmark_filesize < $min_benchmark_size )); then
						run_benchmark=0
						echo -e "(EE): Your requested benchmark size of $benchmark_filesize MB is too small."
						echo -e ""
						read -p "Press any key to continue....."
					fi
				else
					#invalid value
					run_benchmark=0
				fi
			#User aborted.
			else
				run_benchmark=0
			fi
		fi

		#Run benchmark
		if (( $run_benchmark == 1 )); then
			echo -e "Please wait, performing $text_info_test_name benchmark...."
			echo -e "Testing Seq Write Speed ($benchmark_filesize MB)"
			read_speed=$(dd bs=1M count=$benchmark_filesize if=/dev/zero of=$benchmark_temp_file conv=fdatasync 2>&1 | awk '/copied/ {print $8 " "  $9}')
			#Clear Cache
			sh -c "sync && echo 3 > /proc/sys/vm/drop_caches"
			echo -e "Testing Seq Read Speed ($benchmark_filesize MB)"
			write_speed=$(dd bs=1M count=$benchmark_filesize if=$benchmark_temp_file of=/dev/zero conv=fdatasync 2>&1 | awk '/copied/ {print $8 " "  $9}')

			#Update global values.
			if (( $device_index == 0 )); then
				SD_WRITE=$write_speed
				SD_READ=$read_speed
			elif (( $device_index == 1 )); then
				USB_WRITE=$write_speed
				USB_READ=$read_speed
			elif (( $device_index == 2 )); then
				RAM_WRITE=$write_speed
				RAM_READ=$read_speed
			fi
		fi

		#Delete Test File
		rm "$benchmark_temp_file" &> /dev/null
	}

	#TARGETMENUID=12
	Menu_FilesystemBenchmark(){

		TARGETMENUID=11

		WHIP_TITLE='--- DietPi - Filesystem benchmarks ---'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu " SDcard: Write = $SD_WRITE | Read = $SD_READ \n USBHDD: Write = $USB_WRITE | Read = $USB_READ\n RAM   : Write = $RAM_WRITE | Read = $RAM_READ" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 13 60 3 \
		"SDcard" "Benchmark SDcard's IO performance." \
		"USBHDD" "Benchmark USB harddrive IO performance." \
		"RAM" "Benchmark RAM IO performance." 3>&1 1>&2 2>&3)

		case "$OPTION" in
		  SDcard)
			Run_FilesystemBenchmark 0

			#Return to this menu
			TARGETMENUID=12
			;;
		  USBHDD)
			#Check USB is connected and mounted
			if (( $(df -h | grep -ci -m1 '/mnt/usb_1') == 1 )); then
				Run_FilesystemBenchmark 1
			#No Drive
			else
				whiptail --title "No USB Drive was found" --msgbox "No USB Drive was found, and/or, /dev/sda1 isnt mounted to /mnt/usb_1. \nThe test has been aborted." --backtitle "$WHIP_BACKTITLE" 10 60
			fi

			#Return to this menu
			TARGETMENUID=12
			;;
		  RAM)
			Run_FilesystemBenchmark 2

			#Return to this menu
			TARGETMENUID=12
			;;
		esac
	}

	Reset_Overclocking(){
		sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
		if [ "$HW_MODEL" = 2 ]; then
			sed -i '/arm_freq=/c\#arm_freq=900' /DietPi/config.txt #Although not applied, we can use this for current values
		else
			sed -i '/arm_freq=/c\#arm_freq=700' /DietPi/config.txt #Although not applied, we can use this for current values
		fi
		sed -i '/core_freq=/c\#core_freq=250' /DietPi/config.txt
		sed -i '/sdram_freq=/c\#sdram_freq=400' /DietPi/config.txt
		REBOOT_REQUIRED=true
	}

	Warning_Overclocking(){
		WHIP_TITLE='Warning! Continue with overclocking?'
		WHIP_QUESTION='Your selected overclocking choice may void the warranty on this device. Do you wish to continue?\n\nUse of this tool is at your own risk. DietPi will not be held responsable for any damages due to overclocking.'
		whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 12 70
	}

	#TARGETMENUID=13
	Menu_Overclock(){

		TARGETMENUID=4

		#Get Current Overclocking Settings
		local over_voltage_value=$(grep -m1 'over_voltage=' /DietPi/config.txt | tr -d '#over_voltage=')
		local arm_freq_value=$(grep -m1 'arm_freq=' /DietPi/config.txt | tr -d '#arm_freq=')
		local core_freq_value=$(grep -m1 'core_freq=' /DietPi/config.txt | tr -d '#core_freq=')
		local sdram_freq_value=$(grep -m1 'sdram_freq=' /DietPi/config.txt | tr -d '#sdram_freq=')

		WHIP_TITLE="---------- DietPi - Overclocking ----------"

		#Overclocking Pi1
		if (( $HW_MODEL <= 1 )); then

			OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware : $HW_MODEL_DESCRIPTION \n Current: $arm_freq_value MHz ARM | $core_freq_value MHz core | $sdram_freq_value MHz SDRAM | $over_voltage_value overvolt" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 14 70 4 \
			"none" "700 MHz ARM | 250 MHz core | 400 MHz SDRAM | 0 overvolt" \
			"safe" "900 MHz ARM | 250 MHz core | 400 MHz SDRAM | 2 overvolt" \
			"high" "1000 MHz ARM | 375 MHz core | 400 MHz SDRAM | 5 overvolt" \
			"extreme" "1000 MHz ARM | 500 MHz core | 500 MHz SDRAM | 6 overvolt" 3>&1 1>&2 2>&3)

			case "$OPTION" in
			  none)
				Reset_Overclocking
				sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
				sed -i '/arm_freq=/c\#arm_freq=700' /DietPi/config.txt

				#Return to this menu
				TARGETMENUID=13

				;;
			  safe)
				Reset_Overclocking
				sed -i '/over_voltage=/c\over_voltage=2' /DietPi/config.txt
				sed -i '/arm_freq=/c\arm_freq=900' /DietPi/config.txt

				#Return to this menu
				TARGETMENUID=13

				;;
			  high)
				Warning_Overclocking
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					Reset_Overclocking
					sed -i '/over_voltage=/c\over_voltage=5' /DietPi/config.txt
					sed -i '/arm_freq=/c\arm_freq=1000' /DietPi/config.txt
					sed -i '/core_freq=/c\core_freq=375' /DietPi/config.txt
				fi

				#Return to this menu
				TARGETMENUID=13

				;;
			  extreme)
				Warning_Overclocking
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					Reset_Overclocking
					sed -i '/over_voltage=/c\over_voltage=6' /DietPi/config.txt
					sed -i '/arm_freq=/c\arm_freq=1000' /DietPi/config.txt
					sed -i '/core_freq=/c\core_freq=500' /DietPi/config.txt
					sed -i '/sdram_freq=/c\sdram_freq=500' /DietPi/config.txt
				fi

				#Return to this menu
				TARGETMENUID=13

				;;
			esac

		#Overclocking Pi2
		elif (( $HW_MODEL == 2 )); then

			OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware : $HW_MODEL_DESCRIPTION \n Current: $arm_freq_value MHz ARM | $core_freq_value MHz core | $sdram_freq_value MHz SDRAM | $over_voltage_value overvolt" --cancel-button "$TEXT_MENU_BACK" --backtitle "$WHIP_BACKTITLE" 13 75 4 \
			"none" "900 MHz  ARM  | 250 MHz core | 400 MHz SDRAM | 0 overvolt" \
			"low" "1000 MHz ARM | 250 MHz core | 400 MHz SDRAM | 2 overvolt" \
			"med" "1000 MHz ARM | 500 MHz core | 400 MHz SDRAM | 4 overvolt" \
			"extreme" "1100 MHz ARM | 500 MHz core | 450 MHz SDRAM | 6 overvolt" 3>&1 1>&2 2>&3)

			case "$OPTION" in
			  none)
				Reset_Overclocking
				sed -i '/over_voltage=/c\#over_voltage=0' /DietPi/config.txt
				sed -i '/arm_freq=/c\#arm_freq=900' /DietPi/config.txt

				#Return to this menu
				TARGETMENUID=13

				;;
			  low)
				Warning_Overclocking
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					Reset_Overclocking
					sed -i '/over_voltage=/c\over_voltage=2' /DietPi/config.txt
					sed -i '/arm_freq=/c\arm_freq=1000' /DietPi/config.txt
				fi

				#Return to this menu
				TARGETMENUID=13

				;;
			  med)
				Warning_Overclocking
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					Reset_Overclocking
					sed -i '/over_voltage=/c\over_voltage=4' /DietPi/config.txt
					sed -i '/arm_freq=/c\arm_freq=1000' /DietPi/config.txt
					sed -i '/core_freq=/c\core_freq=500' /DietPi/config.txt
				fi

				#Return to this menu
				TARGETMENUID=13

				;;
			  extreme)
				Warning_Overclocking
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					Reset_Overclocking
					sed -i '/over_voltage=/c\over_voltage=6' /DietPi/config.txt
					sed -i '/arm_freq=/c\arm_freq=1100' /DietPi/config.txt
					sed -i '/core_freq=/c\core_freq=500' /DietPi/config.txt
					sed -i '/sdram_freq=/c\sdram_freq=450' /DietPi/config.txt
				fi

				#Return to this menu
				TARGETMENUID=13

				;;
			esac

		fi
	}

	#TARGETMENUID=14
	Menu_AudioOptions(){

		TARGETMENUID=0

		local soundcard_current=$HW_MSG_NOTSUPPORTED
		local hq_analogue_audio_current_text=$HW_MSG_NOTSUPPORTED
		local hq_analogue_audio_enabled=0

		#RPi
		if (( $HW_MODEL < 10 )); then

			#Get soundcard Info
			soundcard_current=$(cat /DietPi/config.txt | grep -m1 'dtoverlay=' | sed 's/dtoverlay=//g' | sed 's/#//g')

			hq_analogue_audio_enabled=$(cat /DietPi/config.txt | grep -ci -m1 'avoid_pwm_pll=0')
			hq_analogue_audio_current_text='Disabled'
			if (( $hq_analogue_audio_enabled == 1 )); then
				hq_analogue_audio_current_text='Enabled'
			fi
		fi

		WHIP_TITLE='---------- DietPi - Audio Options ----------'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu "Make a Selection" --cancel-button "$TEXT_MENU_BACK" 13 60 3 \
		"1" "Change Soundcard  : $soundcard_current" \
		"2" "HQ Analogue Audio : $hq_analogue_audio_current_text" \
		"3" "Switch Audio Output" 3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			if (( $OPTION == 1 )); then

				#RPI Only
				if (( $HW_MODEL < 10 )); then

					WHIP_TITLE='---------- DietPi - Change Soundcard ----------'
					OPTION=$(whiptail --title "$WHIP_TITLE" --menu "Current : $soundcard_current" --cancel-button "$TEXT_MENU_BACK" 14 60 5 \
					"rpi-bcm2835" "Raspberry Pi - Broadcom (Default)" \
					"hifiberry-dac" "HifiBerry DAC" \
					"hifiberry-dacplus" "HifiBerry DAC+" \
					"hifiberry-digi" "HifiBerry DIGI / DIGI+" \
					"hifiberry-amp" "HifiBerry AMP / AMP+" 3>&1 1>&2 2>&3)

					CHOICE=$?
					if (( $CHOICE == 0 )); then
						case "$OPTION" in
							rpi-bcm2835)
								sed -i "/dtoverlay=/c\#dtoverlay=rpi-bcm2835" /DietPi/config.txt
								sed -i "/snd-bcm2835/c\snd-bcm2835" /etc/modules
								rm /etc/asound.conf
								REBOOT_REQUIRED=true
							;;
							hifiberry-*)
								sed -i "/dtoverlay=/c\dtoverlay=$OPTION" /DietPi/config.txt
								sed -i "/snd-bcm2835/c\#snd-bcm2835" /etc/modules
								cat << _EOF_ > /etc/asound.conf
pcm.!default {
 type hw
 card 0
}
ctl.!default {
 type hw
 card 0
}
_EOF_
								REBOOT_REQUIRED=true
							;;
						esac
					fi
				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=14

			elif (( $OPTION == 2 )); then

				#RPI Only
				if (( $HW_MODEL < 10 )); then

					#Enabled
					if (( $hq_analogue_audio_enabled == 1 )); then
						WHIP_QUESTION=" Current setting: $hq_analogue_audio_current_text \n Would you like to disable this setting ? \n \n Once Disabled: \n - No dedicated pll to PWM audio \n - Reduces analogue audio quality \n - Allows core_freq to be set independently from the GPU"
						whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 14 60
						CHOICE=$?
						if (( $CHOICE == 0 )); then
							sed -i '/avoid_pwm_pll=/c\avoid_pwm_pll=1' /DietPi/config.txt
							REBOOT_REQUIRED=true
						fi
					#Disabled
					elif (( $hq_analogue_audio_enabled == 0 )); then
						WHIP_QUESTION=" Current setting: $hq_analogue_audio_current_text \n Would you like to enable this setting ? \n \n Once Enabled: \n - Dedicated pll to PWM audio \n - Maximum analogue audio quality \n - Any core_freq overclocking will also effect GPU clock"
						whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --yes-button "Ok" --no-button "Back" --defaultno --backtitle "$WHIP_BACKTITLE" 14 60
						CHOICE=$?
						if (( $CHOICE == 0 )); then
							sed -i '/avoid_pwm_pll=/c\avoid_pwm_pll=0' /DietPi/config.txt
							REBOOT_REQUIRED=true
						fi
					fi
				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=14

			elif (( $OPTION == 3 )); then

				#RPI only
				if (( $HW_MODEL < 10 )); then
					OPTION=$(whiptail --title "Switch Audio Output" --menu "" --cancel-button "$TEXT_MENU_BACK" 10 60 3 \
					"0" "Auto (HDMI if connected, else 3.5mm Analogue)" \
					"1" "Force 3.5mm Analogue Output" \
					"2" "Force HDMI Output" 3>&1 1>&2 2>&3)
					CHOICE=$?
					if (( $CHOICE == 0 )); then
						amixer cset numid=3 "$OPTION"
					fi
				else
					Info_HW_OptionNotSupported
				fi

				#Return to This Menu
				TARGETMENUID=14
			fi
		fi
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	if (( $DIETPI_INSTALL_STAGE >= 0 )); then

		#Start DietPi-Config
		while (( $TARGETMENUID > -1 )); do
			#Clear Screen buffer
			clear

			if (( $TARGETMENUID == 0 )); then
				Menu_Main
			elif (( $TARGETMENUID == 1 )); then
				Menu_DisplayOptions
			elif (( $TARGETMENUID == 2 )); then
				Menu_DisplayOptions_Resolution
			elif (( $TARGETMENUID == 3 )); then
				Menu_AdvancedOptions
			elif (( $TARGETMENUID == 4 )); then
				Menu_PerformanceOptions
			elif (( $TARGETMENUID == 5 )); then
				Menu_SecurityOptions
			elif (( $TARGETMENUID == 6 )); then
				Menu_GpumemoryOptions
			elif (( $TARGETMENUID == 7 )); then
				Menu_LanguageOptions
			elif (( $TARGETMENUID == 8 )); then
				Menu_NetworkOptions
			elif (( $TARGETMENUID == 9 )); then
				Menu_NetworkOptions_Ethernet
			elif (( $TARGETMENUID == 10 )); then
				Menu_NetworkOptions_Wifi
			elif (( $TARGETMENUID == 11 )); then
				Menu_Tools
			elif (( $TARGETMENUID == 12 )); then
				Menu_FilesystemBenchmark
			elif (( $TARGETMENUID == 13 )); then
				Menu_Overclock
			elif (( $TARGETMENUID == 14 )); then
				Menu_AudioOptions
			fi
		done
	else
		echo -e " >> Filesystem prep has not yet completed: \n Please wait for the system to reboot "
	fi

	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}