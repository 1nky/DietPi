#!/bin/bash
{
	#////////////////////////////////////
	# DietPi CPU Gov Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - Runs at boot up /DietPi/dietpi/boot
	# - Sets CPU governor | ondemand | powersave | performance etc
	# - Sets CPU governor user prefs | throttle up percent etc
	#////////////////////////////////////

	HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
	CPU_CORES=$(nproc --all)

	CPU_GOVERNOR=$(cat /DietPi/dietpi.txt | grep -m1 '^cpu_governor=' | sed 's/.*=//')
	CPU_MAX_FREQ=$(cat /DietPi/dietpi.txt | grep -m1 '^cpu_max_frequency=' | sed 's/.*=//')
	#Add math for working out sampling rate and a set time for down rate.
	#EG: regardless of sample rate, always 4 seconds downrate

	Apply_CPU_Gov(){

		local input_gov_name=$1
		local input_core_start=$2
		local input_core_end=$3

		#Apply the Gov
		for ((i=$input_core_start; i<$input_core_end; i++))
		do
			echo "$input_gov_name" > /sys/devices/system/cpu/cpu"$i"/cpufreq/scaling_governor
		done

		#Apply CPU max frequency (if set)
		if (( $CPU_MAX_FREQ > 0 )); then

			local converted_hz_value=$(( $CPU_MAX_FREQ * 1000 ))

			for ((i=$input_core_start; i<$input_core_end; i++))
			do
				echo "$converted_hz_value" > /sys/devices/system/cpu/cpu"$i"/cpufreq/scaling_max_freq
			done

		fi

		#Set CPU governor ondemand settings
		if [ "$input_gov_name" = ondemand ]; then

			CPU_THROTTLE_UP_PERCENT=$(cat /DietPi/dietpi.txt | grep -m1 '^cpu_usage_throttle_up' | sed 's/.*=//')
			CPU_ONDEMAND_SAMPLING_RATE=$(cat /DietPi/dietpi.txt | grep -m1 '^cpu_ondemand_sampling_rate' | sed 's/.*=//')
			CPU_ONDEMAND_SAMPLING_DOWN_FACTOR=$(cat /DietPi/dietpi.txt | grep -m1 '^cpu_ondemand_sampling_down_factor' | sed 's/.*=//')

			#XU3/4 different path (must apply to each core)
			if (( $HW_MODEL == 11 )); then

				for ((i=$input_core_start; i<$input_core_end; i++))
				do
					echo "$CPU_THROTTLE_UP_PERCENT" > /sys/devices/system/cpu/cpu"$i"/cpufreq/ondemand/up_threshold
					echo "$CPU_ONDEMAND_SAMPLING_RATE" > /sys/devices/system/cpu/cpu"$i"/cpufreq/ondemand/sampling_rate
					echo "$CPU_ONDEMAND_SAMPLING_DOWN_FACTOR" > /sys/devices/system/cpu/cpu"$i"/cpufreq/ondemand/sampling_down_factor
				done

			else
				echo "$CPU_THROTTLE_UP_PERCENT" > /sys/devices/system/cpu/cpufreq/ondemand/up_threshold
				echo "$CPU_ONDEMAND_SAMPLING_RATE" > /sys/devices/system/cpu/cpufreq/ondemand/sampling_rate
				echo "$CPU_ONDEMAND_SAMPLING_DOWN_FACTOR" > /sys/devices/system/cpu/cpufreq/ondemand/sampling_down_factor
			fi

		#Set CPU governor conservative settings
		elif [ "$input_gov_name" = conservative ]; then

			CPU_THROTTLE_UP_PERCENT=$(cat /DietPi/dietpi.txt | grep -m1 '^cpu_usage_throttle_up' | sed 's/.*=//')

			#XU3/4 different path (must apply to each core)
			if (( $HW_MODEL == 11 )); then

				for ((i=$input_core_start; i<$input_core_end; i++))
				do
					echo "$CPU_THROTTLE_UP_PERCENT" > /sys/devices/system/cpu/cpu"$i"/cpufreq/conservative/up_threshold
				done

			else
				echo "$CPU_THROTTLE_UP_PERCENT" > /sys/devices/system/cpu/cpufreq/conservative/up_threshold
			fi

		#Set CPU governor interactive settings
		elif [ "$input_gov_name" = interactive ]; then

			echo "nothing here" &> /dev/null

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#XU4 Split govs
	if (( $HW_MODEL == 11 )); then

		Apply_CPU_Gov "$CPU_GOVERNOR" 0 4
		Apply_CPU_Gov "$CPU_GOVERNOR" 4 8

	#No Split. Apply CPU1 gov to all cores
	else

		Apply_CPU_Gov "$CPU_GOVERNOR" 0 $CPU_CORES

	fi


	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}