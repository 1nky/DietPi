#!/bin/bash
{
	#////////////////////////////////////
	# DietPi :
	# - dietpi-apt-get_update
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel_haze@hotmail.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Allows the running and control of automatic apt-get updates as a seperate thead.
	# - As all DietPi image apt-caches are empty: This script is mainly used during the 1st run setup of DietPi. It allows us to speed up the inital install and updates of DietPi, by updating apt in the background.
	# - All modes will clean the apt cache if the update is run (0/1) or forced (2).
	# - Uses $STATE_CURRENT which contains current state and hours since last update.
	#
	# Usage:
	# - /DietPi/dietpi/dietpi-apt-get_update 0  Check and run apt-get update if required
	# - /DietPi/dietpi/dietpi-apt-get_update 1  Check and run apt-get update if required 	| blocking visual mode
	# - /DietPi/dietpi/dietpi-apt-get_update 2  Forces a new update.					 	| blocking visual mode
	#
	# $STATE_FILE values:
	# line 1
	# - $STATE_CURRENT   0 = apt-get update is running
	# - $STATE_CURRENT   1 = apt-get updated and completed
	# - $STATE_CURRENT  -1 = failed (error and/or warning from apt)
	# - $STATE_CURRENT  -2 = apt-get update has never been run, and/or, ready to be run.
	# line 2:
	# - Hours since last successful update.
	#////////////////////////////////////

	#Force en_GB Locale for whole script. Prevents incorrect parsing with non-english locales.
	LANG=en_GB.UTF-8

	INPUT=0
	if [[ $1 =~ ^-?[0-9]+$ ]]; then
		INPUT=$1
	fi

	#/////////////////////////////////////////////////////////////////////////////////////
	# Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	FP_LOGFILE="/var/log/dietpi-apt-get_update"
	STATE_FILE="/DietPi/dietpi/.dietpi-apt-get_update"
	APT_PROCESS_RUNNING=0

	#-2 | Has never been run, and/or, ready to be run.
	STATE_CURRENT=-2

	#How many hours until we force a new update?
	MAX_HOURS=72
	HOURS_SINCE_1970=0
	HOURS_SINCE_1970_TO_LASTUPDATE=1337

	#ntpd mode
	NTPD_MODE=$(cat /DietPi/dietpi.txt | grep -m1 '^ntpd_update_mode=' | sed 's/.*=//')


	Get_Current_State(){

		#Obtain values from file
		if [ -f "$STATE_FILE" ]; then
			STATE_CURRENT=$(sed -n 1p "$STATE_FILE")
			HOURS_SINCE_1970_TO_LASTUPDATE=$(sed -n 2p "$STATE_FILE")
		fi

		APT_PROCESS_RUNNING=0
		if (( $(ps ax | grep -ci -m1 ' [a]pt-get') == 1 )); then
			APT_PROCESS_RUNNING=1
		fi

	}

	Get_Hours_Since_Last_Update(){

		HOURS_SINCE_1970=$(( $(date +'%s') / 60 / 60 ))
		HOURS_SINCE_1970_TO_LASTUPDATE=$(( $HOURS_SINCE_1970 - $HOURS_SINCE_1970_TO_LASTUPDATE ))

	}

	Update_Apt(){

		#clean
		apt-get clean

		#Update apt, output to temp file
		apt-get update > "$FP_LOGFILE"

		#read temp file
		if (( $(cat "$FP_LOGFILE" | grep -ci -m1 '[WE]: ') == 0 )); then

			# - Ignore NTPD if running disabled or constant+drift modes
			if (( $NTPD_MODE > 0 && $NTPD_MODE < 4 )); then

				# - Wait for NTPD to finish, if we are running it as a process.
				local ntp_timer=0
				local ntp_timer_max=8
				while (( $(ps ax | grep -ci -m1 "[n]tpd -gq") == 1 )); do

					sleep 1
					((ntp_timer++))

					if (( $ntp_timer >= $ntp_timer_max )); then
						#Update was sucessful, but NTPD did not finish, unable to set a correct last update time.
						killall ntpd
						break
					fi

				done

			fi

			#ok
			STATE_CURRENT=1
			#Reset hours since update to current.
			HOURS_SINCE_1970_TO_LASTUPDATE=$(( $(date +'%s') / 60 / 60 ))
		else
			#failed
			STATE_CURRENT=-1
		fi

		#Update state file
		Write_StateFile

	}

	Wait_For_Completion(){

		Get_Current_State

		#Currently running
		while (( $STATE_CURRENT == 0 )); do

			/DietPi/dietpi/dietpi-banner 0

			#Wait for NTPD to finish if running mode 1/2/3 (ntpd -gq)
			if (( $NTPD_MODE > 0 && $NTPD_MODE < 4 &&
				$(ps ax | grep -ci -m1 "[n]tpd -gq") == 1 )); then
				echo -e "\n Waiting for NTPd to finish: Please wait..."

			#Update progress (based on size of apt-cache)
			else
				local cache_folder_size=$(ls -l /var/cache/apt | grep 'total ' | sed 's/total //g')
				echo -e "\n Waiting for apt-get update to finish: Please wait..."
				echo -e "\n apt-cache database size: $cache_folder_size KB\n"
			fi

			#2+ cores, use one thread for making it look pretty :P
			if (( $(nproc --all) > 1 )); then

				/DietPi/dietpi/dietpi-funtime

			#1 core, go easy on it ;)
			else
				sleep 2
			fi

			Get_Current_State

		done

	}

	Write_StateFile(){

		#Update state file
		echo -e "$STATE_CURRENT" > "$STATE_FILE"
		echo -e "$HOURS_SINCE_1970_TO_LASTUPDATE" >> "$STATE_FILE"

	}

	Reset_StateFile(){

		STATE_CURRENT=-2
		Write_StateFile

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	Get_Current_State
	#-----------------------------------------------------------------------------------
	#If apt-get is not running, check for reset, run new update if required.
	if (( $APT_PROCESS_RUNNING == 0 )); then

		#check for resets
		Get_Hours_Since_Last_Update

		#Mode 2. Force reset
		if (( $INPUT == 2 )); then

			Reset_StateFile

		#>X days since last update, reset
		elif (( $HOURS_SINCE_1970_TO_LASTUPDATE >= $MAX_HOURS )); then

			Reset_StateFile

		#Clear state if 0 and apt-get is not running.
		# - This can occur if dietpi-apt-get_update is terminated before completion (eg: user, reboot etc).
		# - Assumes apt-cache may be corrupt, so new update required.
		# - Prevents STATE file staying at 0.
		elif (( $STATE_CURRENT == 0 )); then

			Reset_StateFile

		fi

		#Do we need to Run an update?
		Get_Current_State

		#Update required. Start apt-get update thread.
		if (( $STATE_CURRENT <= -1 )); then

			# 0 = running
			STATE_CURRENT=0

			#Update state file
			Write_StateFile

			Update_Apt &

		fi

	fi
	#-----------------------------------------------------------------------------------
	#Visual Updates/Blocking
	if (( $INPUT >= 1 )); then

		#Wait / inform user
		Wait_For_Completion

	fi
	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}