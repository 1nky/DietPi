#!/bin/bash
{

	#////////////////////////////////////
	# DietPi Move Arr to RAM
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Moves arr program database files to RAM (/tmp) with symlink, and, back to disk
	#
	# Usage:
	# - dietpi-arr_to_RAM 1			= Move to RAM
	# - dietpi-arr_to_RAM 0			= Move to Disk
	#////////////////////////////////////

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Arr_to_RAM'
	G_INIT
	G_CHECK_ROOT_USER
	#Import DietPi-Globals ---------------------------------------------------------------

	INPUT=$1
	if [[ ! $INPUT ]]; then

		exit 1

	fi

	aFP_FILES=(

		'nzbdrone.db'
		'nzbdrone.db-shm'
		'nzbdrone.db-wal'

		# - Lidarr
		'lidarr.db'
		'lidarr.db-shm'
		'lidarr.db-wal'

	)

	aFP_PROGRAM=(

		'sonarr'
		'radarr'
		'lidarr'

	)

	FP_SOURCE=''
	FP_TARGET=''

	Copy_To_Ram(){

		G_ERROR_HANDLER_INFO_ONLY=1 G_RUN_CMD cp $FP_SOURCE ${FP_SOURCE}.bak
		G_ERROR_HANDLER_INFO_ONLY=1 G_RUN_CMD cp $FP_SOURCE $FP_TARGET
		G_ERROR_HANDLER_INFO_ONLY=1 G_RUN_CMD rm $FP_SOURCE
		G_ERROR_HANDLER_INFO_ONLY=1 G_RUN_CMD ln -sf $FP_TARGET $FP_SOURCE

	}

	for i in ${!aFP_PROGRAM[@]}
	do

		systemctl stop ${aFP_PROGRAM[$i]}

		if [[ ! -d /tmp/${aFP_PROGRAM[$i]} ]]; then

			G_RUN_CMD mkdir -p /tmp/${aFP_PROGRAM[$i]}

		fi

		for j in ${!aFP_FILES[@]}
		do

			FP_SOURCE="$G_FP_DIETPI_USERDATA/${aFP_PROGRAM[$i]}/${aFP_FILES[$j]}"
			FP_TARGET="/tmp/${aFP_PROGRAM[$i]}/${aFP_FILES[$j]}"

			# - Copy to RAM + backup
			if (( $INPUT == 1 )); then

				if [[ -f $FP_TARGET ]]; then

					G_DIETPI-NOTIFY 2 "$FP_SOURCE already at location ($FP_TARGET)"

				elif [[ ! -L $FP_SOURCE && -f $FP_SOURCE ]]; then

					Copy_To_Ram

				# - recover + copy to RAM
				elif [[ -f ${FP_SOURCE}.bak ]]; then

					rm $FP_SOURCE &> /dev/null

					G_ERROR_HANDLER_INFO_ONLY=1 G_RUN_CMD cp ${FP_SOURCE}.bak $FP_SOURCE
					Copy_To_Ram

				fi

				systemctl start ${aFP_PROGRAM[$i]}

			# - Save to disk
			elif (( $INPUT == 0 )); then

				if [[ ! -f $FP_TARGET ]]; then

					G_DIETPI-NOTIFY 2 "$FP_TARGET does not exist."

				else

					G_ERROR_HANDLER_INFO_ONLY=1 G_RUN_CMD rm $FP_SOURCE
					G_ERROR_HANDLER_INFO_ONLY=1 G_RUN_CMD cp $FP_TARGET $FP_SOURCE
					G_ERROR_HANDLER_INFO_ONLY=1 G_RUN_CMD rm $FP_TARGET

				fi

			fi

			chown -R ${aFP_PROGRAM[$i]}:dietpi $FP_TARGET $FP_SOURCE &> /dev/null

		done

	done

	unset aFP_FILES
	unset aFP_PROGRAM

}
