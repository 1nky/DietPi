#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Software Install Script
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /boot/dietpi/dietpi-software
	# - Installs "ready to run" software and optimized configs unique to each Pi Model/Version
	# - Generates and uses /boot/dietpi/.installed (software list) # 0=not installed, 1=selected for install, 2=installed
	#////////////////////////////////////

	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain Install Stage Index (File always exists - is set with finalized)
	#/////////////////////////////////////////////////////////////////////////////////////
	# -3 = first boot / -2 = partition / -1 = filesystem / 0 = run dietpi-software at login / 1 = completed
	DIETPI_INSTALL_STAGE=$(cat /boot/dietpi/.install_stage)

	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain Pi Model Index & Obtain Pi Model Description
	#/////////////////////////////////////////////////////////////////////////////////////
	HW_MODEL=$(sed -n 1p /boot/dietpi/.hw_model) # 0=1(256) 1=1(512) 2=2(1024)
	HW_MODEL_DESCRIPTION=$(sed -n 2p /boot/dietpi/.hw_model)
	DISTRO=$(sed -n 3p /boot/dietpi/.hw_model)
	
	#/////////////////////////////////////////////////////////////////////////////////////
	#Check Internet Connection
	#/////////////////////////////////////////////////////////////////////////////////////
	INTERNET_CONNECTED=0
	INTERNET_SPIDER_TIMEOUT=5
	INTERNET_SPIDER_RETRYCOUNT=2
	
	Check_Internet_Connection(){

		INTERNET_CONNECTED=0
		
		#check internet connection
		wget -q --spider --timeout="$INTERNET_SPIDER_TIMEOUT" --tries="$INTERNET_SPIDER_RETRYCOUNT" http://mirrordirector.raspbian.org
		if [ $? -eq 0 ]; then
			INTERNET_CONNECTED=1
		fi
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Installation System
	#/////////////////////////////////////////////////////////////////////////////////////
	#Run Instalation Flag (1 = run installs)
	GOSTARTINSTALL=0
	INSTALL_DESCRIPTION='DietPi'

	#DietPi Software
	INSTALL_DIETPI_CHOICESMADE=false

	#Installed state # 0 = not installed / 1 = to be installed / 2 = installed
	USBDRIVE=0
	DESKTOP=0
	WEBSERVER=0
	OWNCLOUD=0
	TRANSMISSION=0
	PHPBB=0
	PROFTP=0
	YMPD=0
	KODI=0
	RETROPIE=0
	MINIDLNA=0
	NOIPDYNDNS=0
	SMBSERVER=0
	VPNSERVER=0
	OPENTYRIAN=0

	#Linux Software
	INSTALL_LINUX_CHOICESMADE=false
	VIMFULL=0
	SSHCLIENT=0
	SMBCLIENT=0
	RPIGPIO=0
	GITCLIENT=0
	BUILDESSENTIAL=0
	ALSABASE=0
	XSERVERXORG=0

	Write_InstallFileList_AbortChanges(){
		
		#Set all Install States from 1 to 0
		sed -i 's/1/0/g' /boot/dietpi/.installed
	}

	Write_InstallFileList(){

		rm /boot/dietpi/.installed
		
		echo -e "#DietPi External Drive" >> /boot/dietpi/.installed
		echo -e "USBDRIVE $USBDRIVE" >> /boot/dietpi/.installed
		
		echo -e "#DietPi Software" >> /boot/dietpi/.installed
		echo -e "DESKTOP $DESKTOP" >> /boot/dietpi/.installed
		echo -e "WEBSERVER $WEBSERVER" >> /boot/dietpi/.installed
		echo -e "OWNCLOUD $OWNCLOUD" >> /boot/dietpi/.installed
		echo -e "TRANSMISSION $TRANSMISSION" >> /boot/dietpi/.installed
		echo -e "PHPBB $PHPBB" >> /boot/dietpi/.installed
		echo -e "YMPD $YMPD" >> /boot/dietpi/.installed
		echo -e "PROFTP $PROFTP" >> /boot/dietpi/.installed
		echo -e "KODI $KODI" >> /boot/dietpi/.installed
		echo -e "RETROPIE $RETROPIE" >> /boot/dietpi/.installed
		echo -e "MINIDLNA $MINIDLNA" >> /boot/dietpi/.installed
		echo -e "NOIPDYNDNS $NOIPDYNDNS" >> /boot/dietpi/.installed
		echo -e "SMBSERVER $SMBSERVER" >> /boot/dietpi/.installed
		echo -e "VPNSERVER $VPNSERVER" >> /boot/dietpi/.installed
		echo -e "OPENTYRIAN $OPENTYRIAN" >> /boot/dietpi/.installed

		echo -e "#Additional Linux Software" >> /boot/dietpi/.installed
		echo -e "VIMFULL $VIMFULL" >> /boot/dietpi/.installed
		echo -e "SSHCLIENT $SSHCLIENT" >> /boot/dietpi/.installed
		echo -e "SMBCLIENT $SMBCLIENT" >> /boot/dietpi/.installed
		echo -e "RPIGPIO $RPIGPIO" >> /boot/dietpi/.installed
		echo -e "GITCLIENT $GITCLIENT" >> /boot/dietpi/.installed
		echo -e "BUILDESSENTIAL $BUILDESSENTIAL" >> /boot/dietpi/.installed
		echo -e "ALSABASE $ALSABASE" >> /boot/dietpi/.installed
		echo -e "XSERVERXORG $XSERVERXORG" >> /boot/dietpi/.installed
		
	}

	Install_ReloadChoices(){

		#DietPi	
		USBDRIVE=$(cat /boot/dietpi/.installed | grep USBDRIVE | awk '{print $2}')

		DESKTOP=$(cat /boot/dietpi/.installed | grep DESKTOP | awk '{print $2}')
		WEBSERVER=$(cat /boot/dietpi/.installed | grep WEBSERVER | awk '{print $2}')
		OWNCLOUD=$(cat /boot/dietpi/.installed | grep OWNCLOUD | awk '{print $2}')
		TRANSMISSION=$(cat /boot/dietpi/.installed | grep TRANSMISSION | awk '{print $2}')
		PHPBB=$(cat /boot/dietpi/.installed | grep PHPBB | awk '{print $2}')
		PROFTP=$(cat /boot/dietpi/.installed | grep PROFTP | awk '{print $2}')
		KODI=$(cat /boot/dietpi/.installed | grep KODI | awk '{print $2}')
		RETROPIE=$(cat /boot/dietpi/.installed | grep RETROPIE | awk '{print $2}')
		MINIDLNA=$(cat /boot/dietpi/.installed | grep MINIDLNA | awk '{print $2}')
		NOIPDYNDNS=$(cat /boot/dietpi/.installed | grep NOIPDYNDNS | awk '{print $2}')
		YMPD=$(cat /boot/dietpi/.installed | grep YMPD | awk '{print $2}')
		SMBSERVER=$(cat /boot/dietpi/.installed | grep SMBSERVER | awk '{print $2}')
		VPNSERVER=$(cat /boot/dietpi/.installed | grep VPNSERVER | awk '{print $2}')
		OPENTYRIAN=$(cat /boot/dietpi/.installed | grep OPENTYRIAN | awk '{print $2}')

		#Additions must be checked before getting data
		#if (($(cat /boot/dietpi/.installed | grep -ci -m1 'OPENTYRIAN') == 1)); then
			#OPENTYRIAN=$(cat /boot/dietpi/.installed | grep OPENTYRIAN | awk '{print $2}')
		#fi
		
		#Linux
		VIMFULL=$(cat /boot/dietpi/.installed | grep VIMFULL | awk '{print $2}')
		SSHCLIENT=$(cat /boot/dietpi/.installed | grep SSHCLIENT | awk '{print $2}')
		SMBCLIENT=$(cat /boot/dietpi/.installed | grep SMBCLIENT | awk '{print $2}')
		RPIGPIO=$(cat /boot/dietpi/.installed | grep RPIGPIO | awk '{print $2}')
		GITCLIENT=$(cat /boot/dietpi/.installed | grep GITCLIENT | awk '{print $2}')
		BUILDESSENTIAL=$(cat /boot/dietpi/.installed | grep BUILDESSENTIAL | awk '{print $2}')
		ALSABASE=$(cat /boot/dietpi/.installed | grep ALSABASE | awk '{print $2}')
		XSERVERXORG=$(cat /boot/dietpi/.installed | grep XSERVERXORG | awk '{print $2}')
		
		#Additions must be checked before getting data
		#if (($(cat /boot/dietpi/.installed | grep -ci -m1 'RPIGPIO') == 1)); then
			#RPIGPIO=$(cat /boot/dietpi/.installed | grep RPIGPIO | awk '{print $2}')
		#fi

	}

	Install_Dietpi_Software(){

		# Stop Services
		/boot/dietpi/dietpi-services stop
		
		#--------------------------------------------------------------
		# Sort and apply all "combo" installs

		# Installs that require PROFTP for file transfers/access
		if (( $TRANSMISSION == 1 )); then
			PROFTP=1
		elif (( $RETROPIE == 1 )); then
			PROFTP=1
		elif (( $MINIDLNA == 1 )); then
			PROFTP=1
		elif (( $YMPD == 1 )); then
			PROFTP=1
		fi

		# Installs that require Apache Webserver
		if (( $OWNCLOUD == 1 )); then
			WEBSERVER=1
		elif (( $PHPBB == 1 )); then
			WEBSERVER=1
		fi
		
		#--------------------------------------------------------------
		#Install Software

		#Desktop LXDE
		if (( $DESKTOP == 1 )); then
			
			INSTALL_DESCRIPTION='Desktop (LXDE)'
			Banner_Installing
			
			apt-get install lxde upower policykit-1 iceweasel p7zip-full --no-install-recommends -y
			#upower policykit-1. Needed for LXDE logout menu item to show shutdown/restart ...... sigh...
			
		fi

		if (( $TRANSMISSION == 1 )); then
			INSTALL_DESCRIPTION='BitTorrent (Transmission)'
			Banner_Installing
			apt-get install transmission-daemon -y
		fi

		if (( $PROFTP == 1 )); then
			INSTALL_DESCRIPTION='FTP Server (Proftp)'
			Banner_Installing
			apt-get install proftpd-basic -y
		fi

		# Apache2
		if (( $WEBSERVER == 1 )); then
		
			INSTALL_DESCRIPTION='(Apache2) / Mysql / php5 / phpmyadmin'
			Banner_Installing
			apt-get install apache2 -y
			
			INSTALL_DESCRIPTION='Apache2 / (Mysql) / php5 / phpmyadmin'
			Banner_Installing
			apt-get install mysql-server -y
			
			INSTALL_DESCRIPTION='Apache2 / Mysql / (php5) / phpmyadmin'
			Banner_Installing
			apt-get install php5 -y
			
			#Debian - php-apc
			if (( $DISTRO == 1 )); then
				apt-get install php-apc -y
			#Ubuntu - php-apcU
			elif (( $DISTRO == 2 )); then
				apt-get install php5-apcu -y
			fi
			
			INSTALL_DESCRIPTION='Apache2 / Mysql / php5 / (phpmyadmin)'
			Banner_Installing
			apt-get install phpmyadmin -y
			apt-get install libapache2-mod-php5 -y
			
			#Forums PHPBB
			if (( $PHPBB == 1 )); then
				INSTALL_DESCRIPTION='PHPBB Forums'
				Banner_Installing
				apt-get install phpbb3 -y
			fi
		fi

		#OwnCloud
		if (( $OWNCLOUD == 1 )); then
			INSTALL_DESCRIPTION='OwnCloud'
			Banner_Installing
		
			#Debian
			if (( $DISTRO == 1 )); then
				apt-get install owncloud -y
			
			#Ubuntu 14.04 - add repo
			elif (( $DISTRO == 2 )); then
				#check source is online
				wget -q --spider --timeout="$INTERNET_SPIDER_TIMEOUT" --tries="$INTERNET_SPIDER_RETRYCOUNT" http://download.opensuse.org/repositories/isv:/ownCloud:/community/xUbuntu_14.04/
				
				#Install
				if [ $? -eq 0 ]; then
					if [ ! -f /etc/apt/sources.list.d/owncloud.list ]; then 
						sh -c "echo 'deb http://download.opensuse.org/repositories/isv:/ownCloud:/community/xUbuntu_14.04/ /' >> /etc/apt/sources.list.d/owncloud.list"
						apt-get update
					fi
					apt-get install owncloud --force-yes -y
					
				#Offline!
				else
					WHIP_TITLE='Error - Unable to Connect'
					whiptail --title "$WHIP_TITLE" --msgbox "Unable to Install Owncloud. http://download.opensuse.org/repositories/isv:/ownCloud:/community/xUbuntu_14.04/ is offline and/or unreachable" 10 60

					#Abort Install, prevent configs being applied
					OWNCLOUD=0
				fi		
			fi			
		fi
	 
		#Ympd MPD
		if (( $YMPD == 1 )); then    
			#Check online
			wget -q --spider --timeout="$INTERNET_SPIDER_TIMEOUT" --tries="$INTERNET_SPIDER_RETRYCOUNT" http://www.ympd.org/downloads/ympd-1.2.3-armhf.tar.bz2
			#Install
			if [ $? -eq 0 ]; then
				INSTALL_DESCRIPTION='Hifi / Web Interface Music Player (Mpd Ympd)'
				Banner_Installing
				
				#Install MPD
				apt-get install mpd libmpdclient2 -y
				
				#Setup YMPD			
				wget http://www.ympd.org/downloads/ympd-1.2.3-armhf.tar.bz2
				tar -xvf ympd-*
				rm ympd-*
				mv ympd /usr/bin/ympd
				
			#Offline!
			else
				WHIP_TITLE='Error - Unable to Connect'
				whiptail --title "$WHIP_TITLE" --msgbox "Unable to Install Hifi / Web Interface Music Player (Mpd Ympd). ympd.org is offline and/or unreachable" 10 60

				#Abort Install, prevent configs being applied
				YMPD=0
			fi
		fi
		
		#Kodi
		if (( $KODI == 1 )); then
			#oDroid C1
			if (( $HW_MODEL == 10 )); then
				INSTALL_DESCRIPTION='Kodi'
				Banner_Installing
				apt-get install libcurl4-gnutls-dev --no-install-recommends -y
				apt-get install kodi -y
				
			#RPI (Michael Gorven Repository) 
			elif (( $HW_MODEL <= 2 )); then
				INSTALL_DESCRIPTION='Kodi (Adding Michael Gorven Repo)'
				Banner_Installing

				#Check APT is online
				wget -q --spider --timeout="$INTERNET_SPIDER_TIMEOUT" --tries="$INTERNET_SPIDER_RETRYCOUNT" http://archive.mene.za.net/raspbian
				
				#Install
				if [ $? -eq 0 ]; then
					#Check if apt address and key needs adding
					if (( $(cat /etc/apt/sources.list.d/mene.list | grep -ci -m1 'http://archive.mene.za.net/raspbian') == 0 )); then
						echo -e 'deb http://archive.mene.za.net/raspbian wheezy contrib' >> /etc/apt/sources.list.d/mene.list
						apt-key adv --keyserver keyserver.ubuntu.com --recv-key 5243CDED
					fi

					#Update Apt
					apt-get update
					
					INSTALL_DESCRIPTION='Kodi (Michael Gorven Repo)'
					Banner_Installing
					
					apt-get install kodi -y
					
				#Offline!
				else
					WHIP_TITLE='Error - Unable to Connect'
					whiptail --title "$WHIP_TITLE" --msgbox "Unable to Install Kodi. archive.mene.za.net/raspbian is offline and/or unreachable" 10 60

					#Abort Install, prevent configs being applied
					KODI=0
				fi
			fi
		fi
		
		#Retro Pie
		if (( $RETROPIE == 1 )); then
			INSTALL_DESCRIPTION='RetroPie'
			Banner_Installing

			#Check GIT is online
			wget -q --spider https://github.com/petrockblog/RetroPie-Setup
			
			#Install
			if [ $? -eq 0 ]; then

				#Install dialog
				apt-get install dialog -y
				
				#Clone RetroPie Git
				git clone --depth=0 https://github.com/petrockblog/RetroPie-Setup
				chmod +x /root/RetroPie-Setup/retropie_setup.sh

				#Info for RetroPie script
				WHIP_TITLE='RetroPie - Information'
				whiptail --title "$WHIP_TITLE" --msgbox "DietPi will now run the RetroPie setup script. Please follow the DietPi + RetroPie Setup Guide: \n http://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=8 \n \n(WARNING) If you tell RetroPie to auto load at boot, any DietPi boot choices will not work \n(WARNING) DO NOT select Reboot from the RetroPie menu, press escape when you are done. Selecting reboot will prevent other DietPi installation choices from working" 20 70

				#Run RetroPie setup script
				~/RetroPie-Setup/retropie_setup.sh
			else
			#Offline
				WHIP_TITLE='Error - Unable to Connect'
				whiptail --title "$WHIP_TITLE" --msgbox "Unable to Install RetroPie. github.com/petrockblog/RetroPie-Setup is offline and/or unreachable" 10 60

				#Abort Install, prevent configs being applied
				RETROPIE=0
			fi
		fi
		
		#MINIDLNA
		if (( $MINIDLNA == 1 )); then
			INSTALL_DESCRIPTION='DLNA/UPnP Media Server (MiniDLNA)'
			Banner_Installing
			apt-get install minidlna -y
		fi
		
		#NoIp
		if (( $NOIPDYNDNS == 1 )); then
			INSTALL_DESCRIPTION='Website URL Address (No-Ip)'
			Banner_Installing
			
			wget https://dl.dropboxusercontent.com/u/33437507/dietpi_wget/noip2.gz
			wget https://dl.dropboxusercontent.com/u/33437507/dietpi_wget/noip2.sh
			
			#Check if Files couldnt be found/downloaded
			if [ "$(ls | grep -ci -m1 'noip2.gz')" = 0 ] || [ "$(ls | grep -ci -m1 'noip2.sh')" = 0 ]; then
				WHIP_TITLE='Error - Unable to Connect'
				whiptail --title "$WHIP_TITLE" --msgbox "Unable to Install NoIp. https://dl.dropboxusercontent.com/u/33437507/dietpi_wget/noip2.gz is offline and/or unreachable" 10 60
				NOIPDYNDNS=0
			else
				#NoIp Binary install
				gzip -d noip2.gz
				mv noip2 /usr/local/bin/noip2
				chmod +x /usr/local/bin/noip2

				#noip2 service file
				mv noip2.sh /etc/init.d/noip2
				chmod +x /etc/init.d/noip2
				update-rc.d noip2 defaults 94 6
			fi
		fi
		
		#Samba Server
		if (( $SMBSERVER == 1 )); then
			INSTALL_DESCRIPTION='File Server (Samba)'
			Banner_Installing
			apt-get install samba samba-common-bin --no-install-recommends -y
			
		fi
		
		#VPN Server
		if (( $VPNSERVER == 1 )); then

			#Download Source / extract / delete tar
			INSTALL_DESCRIPTION='VPN Server (SoftEther) - Download'
			Banner_Installing
			wget http://www.softether-download.com/files/softether/v4.15-9546-beta-2015.04.05-tree/Linux/SoftEther_VPN_Server/32bit_-_ARM_EABI/softether-vpnserver-v4.15-9546-beta-2015.04.05-linux-arm_eabi-32bit.tar.gz

			#Check file downloaded
			if (( $(ls | grep -ci -m1 'softether-vpnserver') == 0 )); then
				WHIP_TITLE='Error - Unable to Connect'
				whiptail --title "$WHIP_TITLE" --msgbox "Unable to Install VPN Server.  http://www.softether-download.com/files/softether/v4.15-9546-beta-2015.04.05-tree/Linux/SoftEther_VPN_Server/32bit_-_ARM_EABI/softether-vpnserver-v4.15-9546-beta-2015.04.05-linux-arm_eabi-32bit.tar.gz is offline and/or unreachable" 14 70
				VPNSERVER=0
			#Begin Install
			else
				tar zxvf softether-vpnserver-*
				rm softether-vpnserver-*
				
				#Compile / move
				INSTALL_DESCRIPTION='VPN Server (SoftEther) - Compiling'
				Banner_Installing
				echo -e "1\n1\n1" | make -C vpnserver
				mv vpnserver* /usr/local

				#Run at startup
				cp /boot/dietpi/conf/vpnserver.initd /etc/init.d/vpnserver 
				chmod +x /etc/init.d/vpnserver
				update-rc.d vpnserver defaults
			fi
		fi
		
		#OpenTyrian
		if (( $OPENTYRIAN == 1 )); then
			INSTALL_DESCRIPTION='Gaming (OpenTyrian Game)'
			Banner_Installing
			wget http://fuzon.co.uk/downloads/dietpi-opentyrian.zip

			#Check file downloaded
			if (( $(ls | grep -ci -m1 'dietpi-opentyrian') == 0 )); then
				WHIP_TITLE='Error - Unable to Connect'
				whiptail --title "$WHIP_TITLE" --msgbox "Unable to Install Gaming (OpenTyrian Game). http://fuzon.co.uk/downloads/dietpi-opentyrian.zip is offline and/or unreachable" 14 70
				OPENTYRIAN=0
			#Begin Install
			else
				apt-get install ibsdl1.2debian libsdl-net1.2 --no-install-recommends -y

				#Unzip binaries and source
				unzip -o dietpi-opentyrian.zip -d /
				rm dietpi-opentyrian.zip
				chmod +x /usr/local/games/opentyrian/opentyrian
				
				#Copy the DietPi run file for OpenTyrian
				cp /boot/dietpi/conf/opentyrian_run /usr/local/games/opentyrian/run
				chmod +x /usr/local/games/opentyrian/run
			fi
		fi
	}

	Install_Linux_Software(){

		# Stop Services
		/boot/dietpi/dietpi-services stop

		if (( $VIMFULL == 1 )); then
			INSTALL_DESCRIPTION='Vim'
			Banner_Installing
			apt-get install vim -y
			
			VIMFULL=2
		fi
	 
		if (( $SSHCLIENT == 1 )); then
			INSTALL_DESCRIPTION='OpenSSH Client'
			Banner_Installing
			apt-get install openssh-client -y
			
			SSHCLIENT=2
		fi
		
		if (( $SMBCLIENT == 1 )); then
			INSTALL_DESCRIPTION='Samba Client'
			Banner_Installing
			apt-get install smbclient cifs-utils -y --no-install-recommends
			
			SMBCLIENT=2
		fi
		
		if (( $RPIGPIO == 1 )); then
			INSTALL_DESCRIPTION='RPi.GPIO'
			Banner_Installing
			apt-get install python-rpi.gpio python3-rpi.gpio -y
			
			RPIGPIO=2
		fi
		
		#DietPi software that requires Build-Essential
		if (( $VPNSERVER == 1 )); then
			BUILDESSENTIAL=1
		fi
		
		if (( $BUILDESSENTIAL == 1 )); then
			INSTALL_DESCRIPTION='Build Essential'
			Banner_Installing
			 apt-get install build-essential --no-install-recommends -y
			
			BUILDESSENTIAL=2
		fi

		#DietPi software that requires GIT
		if (( $RETROPIE == 1 )); then
			GITCLIENT=1
		fi
		
		if (( $GITCLIENT == 1 )); then
			INSTALL_DESCRIPTION='Git'
			Banner_Installing
			apt-get install git --no-install-recommends -y
			
			GITCLIENT=2
		fi
		
		#DietPi software that requires Alsa-base
		if (( $DESKTOP == 1 )); then
			ALSABASE=1
		elif (( $YMPD == 1 )); then
			ALSABASE=1
		elif (( $KODI == 1 )); then
			ALSABASE=1
		elif (( $RETROPIE == 1 )); then
			ALSABASE=1
		elif (( $MINIDLNA == 1 )); then
			ALSABASE=1
		elif (( $OPENTYRIAN == 1 )); then
			ALSABASE=1
		fi
		
		if (( $ALSABASE == 1 )); then
			INSTALL_DESCRIPTION='ALSA (Sound)'
			Banner_Installing
			apt-get install alsa-base -y
			
			ALSABASE=2
		fi
		
		#DietPi software that requires Xserver - Xorg
		if (( $DESKTOP == 1 )); then
			XSERVERXORG=1
		elif (( $KODI == 1 )); then
			XSERVERXORG=1
		elif (( $RETROPIE == 1 )); then
			XSERVERXORG=1
		elif (( $OPENTYRIAN == 1 )); then
			XSERVERXORG=1
		fi	
		
		if (( $XSERVERXORG == 1 )); then
			#RPI
			if (( $HW_MODEL <= 2 )); then
				INSTALL_DESCRIPTION='Xserver / Xorg (fbturbo)'
				Banner_Installing
				apt-get install xinit xauth xserver-xorg xfonts-base xserver-xorg-video-fbturbo xserver-xorg-video-fbdev --no-install-recommends -y

			elif (( $HW_MODEL == 10 )); then
				INSTALL_DESCRIPTION='Xserver / Xorg (mali)'
				Banner_Installing
				apt-get install xinit xauth xserver-xorg xfonts-base --no-install-recommends -y
			
			fi
			
			XSERVERXORG=2
		fi
		
	}

	Install_Apply_Configs(){

		# Stop Services
		/boot/dietpi/dietpi-services stop

		# Copy/Set optimised Software settings. 
		# Set install states to 2 (installed).
	 
		#Destop
		if (( $DESKTOP == 1 )); then
			
			#Remove Lxrandr Menu item (monitor configuration tool as we set res in config.txt)
			rm /usr/share/applications/lxrandr.desktop
			
			#Copy PCmanFM configs
			mkdir -p ~/.config/pcmanfm/LXDE
			cp /boot/dietpi/conf/desktop/pcmanfm.conf ~/.config/pcmanfm/LXDE/pcmanfm.conf
			cp /boot/dietpi/conf/desktop/pcmanfm-desktopitems.conf ~/.config/pcmanfm/LXDE/desktop-items-0.conf
			
			#Disable Trash
			sed -i '/use_trash=/c\use_trash=0' /etc/xdg/libfm/libfm.conf

			#Copy DietPi Panel config
			mkdir -p ~/.config/lxpanel/LXDE/panels
			cp /boot/dietpi/conf/desktop/panel ~/.config/lxpanel/LXDE/panels/panel
		
			#Openbox config
			mkdir -p ~/.config/openbox
			cp /boot/dietpi/conf/desktop/lxde-rc.xml ~/.config/openbox/lxde-rc.xml
			
			#Copy dietpi-desktop entries to menu
			cp /boot/dietpi/conf/desktop/dietpi-config.desktop /usr/share/applications/dietpi-config.desktop
			cp /boot/dietpi/conf/desktop/dietpi-software.desktop /usr/share/applications/dietpi-software.desktop
			cp /boot/dietpi/conf/desktop/dietpi-update.desktop /usr/share/applications/dietpi-update.desktop

			#Copy DietPi pcmanfm favourite links
			cp /boot/dietpi/conf/desktop/.gtk-bookmarks ~/.gtk-bookmarks
			
			#Create Desktop Folder SymLinks
			mkdir -p ~/Desktop
			ln -s /usr/share/applications/pcmanfm.desktop ~/Desktop/pcmanfm.desktop
			ln -s /usr/share/applications/htop.desktop ~/Desktop/htop.desktop
			ln -s /usr/share/applications/dietpi-software.desktop ~/Desktop/dietpi-software.desktop
			ln -s /usr/share/applications/dietpi-update.desktop ~/Desktop/dietpi-update.desktop
			ln -s /usr/share/applications/dietpi-config.desktop ~/Desktop/dietpi-config.desktop

			DESKTOP=2
		fi

		#Apache2
		if (( $WEBSERVER == 1 )); then
			#Copy PHP web test file
			cp /boot/dietpi/conf/index.php /var/www/index.php
			
			#Set PHP.INI to UTF-8
			sed -i '/default_charset/c\default_charset = "UTF-8"' /etc/php5/apache2/php.ini
			sed -i '/default_charset/c\default_charset = "UTF-8"' /etc/php5/cli/php.ini

			#Odroid C1
			if (( $HW_MODEL == 10 )); then
				#Apache2 confs
				cp /boot/dietpi/conf/apache2_c1.conf /etc/apache2/apache2.conf
				cp /boot/dietpi/conf/apache2_c1_000-default /etc/apache2/sites-available/000-default.conf
				cp /boot/dietpi/conf/apache2_c1_mpmevent /etc/apache2/mods-available/mpm_event.conf
				cp /boot/dietpi/conf/apache2_c1_mpmprefork /etc/apache2/mods-available/mpm_prefork.conf
				cp /boot/dietpi/conf/apache2_c1_mpmworker /etc/apache2/mods-available/mpm_worker.conf
				
				#php-apcU
				echo -e "extension=apcu.so" > /etc/php5/apache2/conf.d/20-apcu.ini
				echo -e "apc.enabled=1" >> /etc/php5/apache2/conf.d/20-apcu.ini
				echo -e "apc.shm_size=64M" >> /etc/php5/apache2/conf.d/20-apcu.ini
				echo -e "apc.ttl=259200 (3 Days)" >> /etc/php5/apache2/conf.d/20-apcu.ini
				cp /usr/share/doc/php5-apcu/apc.php /var/www/apc.php
				
				#Use /var/www as default webfolder
				mv /var/www/html/index.html /var/www/index.html
				rm -R /var/www/html
				
			#Rpi
			elif (( $HW_MODEL == 2 )); then
				#Apache2 confs
				cp /boot/dietpi/conf/apache2_p2.conf /etc/apache2/apache2.conf
				
				#php-apc
				echo -e "extension=apc.so" > /etc/php5/apache2/conf.d/20-apc.ini
				echo -e "apc.enabled=1" >> /etc/php5/apache2/conf.d/20-apc.ini
				echo -e "apc.shm_size=64M" >> /etc/php5/apache2/conf.d/20-apc.ini
				echo -e "apc.ttl=259200 (3 Days)" >> /etc/php5/apache2/conf.d/20-apc.ini
				cp /usr/share/doc/php-apc/apc.php /var/www/apc.php
			elif (( $HW_MODEL == 1 )); then
				#Apache2 confs
				cp /boot/dietpi/conf/apache2_p1.conf /etc/apache2/apache2.conf
				
				#php-apc
				echo -e "extension=apc.so" > /etc/php5/apache2/conf.d/20-apc.ini
				echo -e "apc.enabled=1" >> /etc/php5/apache2/conf.d/20-apc.ini
				echo -e "apc.shm_size=32M" >> /etc/php5/apache2/conf.d/20-apc.ini
				echo -e "apc.ttl=259200 (3 Days)" >> /etc/php5/apache2/conf.d/20-apc.ini
				cp /usr/share/doc/php-apc/apc.php /var/www/apc.php
			elif (( $HW_MODEL == 0 )); then
				#Apache2 confs
				cp /boot/dietpi/conf/apache2_p1.conf /etc/apache2/apache2.conf
				
				#php-apc
				echo -e "extension=apc.so" > /etc/php5/apache2/conf.d/20-apc.ini
				echo -e "apc.enabled=1" >> /etc/php5/apache2/conf.d/20-apc.ini
				echo -e "apc.shm_size=12M" >> /etc/php5/apache2/conf.d/20-apc.ini
				echo -e "apc.ttl=259200 (3 Days)" >> /etc/php5/apache2/conf.d/20-apc.ini
				cp /usr/share/doc/php-apc/apc.php /var/www/apc.php
			fi
			
			WEBSERVER=2
		fi

		#OwnCloud
		if (( $OWNCLOUD == 1 )); then
		   mkdir /mnt/usb_1/owncloud_data
		   chown -R www-data:www-data /mnt/usb_1/owncloud_data
		   rm /var/lib/owncloud/data
		   ln -s /mnt/usb_1/owncloud_data /var/lib/owncloud/data
		   
		   OWNCLOUD=2
		fi

		# Transmission
		if (( $TRANSMISSION == 1 )); then
		
			sed -i '/USER=/c\USER=root' /etc/init.d/transmission-daemon
			cp /boot/dietpi/conf/transmission_settings /etc/transmission-daemon/settings.json
			
			#Odroid C1
			if (( $HW_MODEL == 10 )); then
				sed -i '/cache-size-mb/c\    "cache-size-mb": 192,' /etc/transmission-daemon/settings.json
				
				sed -i '/peer-limit-global/c\    "peer-limit-global": 16,' /etc/transmission-daemon/settings.json
				sed -i '/max-peers-global/c\    "max-peers-global": 16,' /etc/transmission-daemon/settings.json
				sed -i '/peer-limit-per-torrent/c\    "peer-limit-per-torrent": 10,' /etc/transmission-daemon/settings.json
				sed -i '/upload-slots-per-torrent/c\    "upload-slots-per-torrent": 3,' /etc/transmission-daemon/settings.json

			#Rpi
			elif (( $HW_MODEL == 2 )); then
				sed -i '/cache-size-mb/c\    "cache-size-mb": 128,' /etc/transmission-daemon/settings.json
				
				sed -i '/peer-limit-global/c\    "peer-limit-global": 12,' /etc/transmission-daemon/settings.json
				sed -i '/max-peers-global/c\    "max-peers-global": 12,' /etc/transmission-daemon/settings.json
				sed -i '/peer-limit-per-torrent/c\    "peer-limit-per-torrent": 7,' /etc/transmission-daemon/settings.json
				sed -i '/upload-slots-per-torrent/c\    "upload-slots-per-torrent": 2,' /etc/transmission-daemon/settings.json

			elif (( $HW_MODEL == 1 )); then
				sed -i '/cache-size-mb/c\    "cache-size-mb": 96,' /etc/transmission-daemon/settings.json
				
				sed -i '/peer-limit-global/c\    "peer-limit-global": 10,' /etc/transmission-daemon/settings.json
				sed -i '/max-peers-global/c\    "max-peers-global": 10,' /etc/transmission-daemon/settings.json
				sed -i '/peer-limit-per-torrent/c\    "peer-limit-per-torrent": 6,' /etc/transmission-daemon/settings.json
				sed -i '/upload-slots-per-torrent/c\    "upload-slots-per-torrent": 2,' /etc/transmission-daemon/settings.json

			elif (( $HW_MODEL == 0 )); then
				sed -i '/cache-size-mb/c\    "cache-size-mb": 48,' /etc/transmission-daemon/settings.json
				
				sed -i '/peer-limit-global/c\    "peer-limit-global": 7,' /etc/transmission-daemon/settings.json
				sed -i '/max-peers-global/c\    "max-peers-global": 7,' /etc/transmission-daemon/settings.json
				sed -i '/peer-limit-per-torrent/c\    "peer-limit-per-torrent": 5,' /etc/transmission-daemon/settings.json
				sed -i '/upload-slots-per-torrent/c\    "upload-slots-per-torrent": 2,' /etc/transmission-daemon/settings.json
			fi
			
			TRANSMISSION=2
		fi

		#PHPBB
		if (( $PHPBB == 1 )); then
		
		   PHPBB=2
		fi
		
		# Proftpd
		if (( $PROFTP == 1 )); then
			sed -i '/root/c\#root' /etc/ftpusers
			cp /boot/dietpi/conf/proftpd.conf /etc/proftpd/proftpd.conf
			if (( $USBDRIVE > 0 )); then
				sed -i '/DefaultRoot /c\DefaultRoot                     /mnt/usb_1' /etc/proftpd/proftpd.conf
			else
				sed -i '/DefaultRoot /c\DefaultRoot                     /root' /etc/proftpd/proftpd.conf
			fi
			
			PROFTP=2
		fi

		#Ympd MPD
		if (( $YMPD == 1 )); then
		
			#Start at boot		
			cp /boot/dietpi/conf/ympd_init /etc/init.d/ympd
			chmod +x /etc/init.d/ympd
			update-rc.d ympd defaults

			#Copy configs
			cp /boot/dietpi/conf/mpd.conf /etc/mpd.conf
			
			#Grab My test music
			wget https://dl.dropboxusercontent.com/u/33437507/dietpi_wget/fourdee_tech.ogg
			
			#Grab Absolute Radio Streams
			wget http://network.absoluteradio.co.uk/core/audio/ogg/live.pls?service=vrbb
			mv live.pls* Absolute-Radio.pls
			
			wget http://network.absoluteradio.co.uk/core/audio/ogg/live.pls?service=a8bb
			mv live.pls* Absolute-Radio-80s.pls

			wget http://network.absoluteradio.co.uk/core/audio/ogg/live.pls?service=a9bb
			mv live.pls* Absolute-Radio-90s.pls
			
			wget http://network.absoluteradio.co.uk/core/audio/ogg/live.pls?service=a0bb
			mv live.pls* Absolute-Radio-00s.pls
			
			#Setup Paths
			if (( $USBDRIVE > 0 )); then
				mkdir -p /mnt/usb_1/Music
				mkdir -p /mnt/usb_1/.mpd_cache
				sed -i '/music_directory/c\music_directory "/mnt/usb_1/Music"' /etc/mpd.conf
				sed -i '/playlist_directory/c\playlist_directory "/mnt/usb_1/Music"' /etc/mpd.conf
				sed -i '/db_file/c\db_file "/mnt/usb_1/.mpd_cache/db_file"' /etc/mpd.conf

				#Move Test Music
				mv fourdee_tech.ogg /mnt/usb_1/Music/
				mv Absolute-* /mnt/usb_1/Music/
				
			else
				mkdir -p /root/Music
				mkdir -p /root/.mpd_cache
				sed -i '/music_directory/c\music_directory "/root/Music"' /etc/mpd.conf
				sed -i '/playlist_directory/c\playlist_directory "/root/Music"' /etc/mpd.conf
				sed -i '/db_file/c\db_file "/root/.mpd_cache/db_file"' /etc/mpd.conf

				#Move Test Music
				mv fourdee_tech.ogg /root/Music/
				mv Absolute-* /root/Music/
			fi
		
			#Enable Dedicated PWM pll (HQ Audio)
			sed -i '/avoid_pwm_pll=/c\avoid_pwm_pll=0' /boot/config.txt
			
			YMPD=2
		fi

		#Kodi
		if (( $KODI == 1 )); then
			#odroid c1
			if (( $HW_MODEL == 10 )); then
				echo -e "x"
			#rpi
			elif (( $HW_MODEL <= 2 )); then
				#Remove Kodi user (Whilst waving)
				userdel -r kodi

				#Copy udev rules, probably not needed for root, but we'll do it anyway
				cp /boot/dietpi/conf/kodi_udev /etc/udev/rules.d/99-input.rules
				chmod +x /etc/udev/rules.d/99-input.rules

				#Run Kodi as root
				sed -i '/USER=/c\USER=root' /etc/default/kodi
		 
				#Enable Dedicated PWM pll
				sed -i '/avoid_pwm_pll=/c\avoid_pwm_pll=0' /boot/config.txt
			fi
			
			KODI=2
		fi
		
		#RetroPie
		if (( $RETROPIE == 1 )); then
			
			#Move Retro Pie Roms and Bios to USB?		
			if (( $USBDRIVE > 0 )); then
				#Move Retro Pie Roms to USB
				mkdir -p /mnt/usb_1/RetroPie/roms
				cp -R /root/RetroPie/roms/* /mnt/usb_1/RetroPie/roms
				rm -R /root/RetroPie/roms
				ln -s /mnt/usb_1/RetroPie/roms /root/RetroPie/roms

				#Move Retro Pie BIOS to USB
				mkdir -p /mnt/usb_1/RetroPie/BIOS
				cp -R /root/RetroPie/BIOS/* /mnt/usb_1/RetroPie/BIOS
				rm -R /root/RetroPie/BIOS
				ln -s /mnt/usb_1/RetroPie/BIOS /root/RetroPie/BIOS
			fi
			
			#Fix RetroPi Emulation Station menu (remove raspi-config)
			rm ~/RetroPie/retropiemenu/*
			touch ~/RetroPie/retropiemenu/rpsetup.rp
			sed -i 's/sudo//g' /etc/emulationstation/es_systems.cfg
			
			#Enable Dedicated PWM pll
			sed -i '/avoid_pwm_pll=/c\avoid_pwm_pll=0' /boot/config.txt

			RETROPIE=2
		fi
		
		#MINIDLNA
		if (( $MINIDLNA == 1 )); then
			#Run as root
			sed -i '/USER=m/c\USER=root' /etc/init.d/minidlna
			
			#Copy Config
			cp /boot/dietpi/conf/minidlna.conf /etc/minidlna.conf

			if (( $USBDRIVE > 0 )); then
				mkdir -p /mnt/usb_1/.MiniDLNA_Cache
				mkdir -p /mnt/usb_1/Music
				mkdir -p /mnt/usb_1/Pictures
				mkdir -p /mnt/usb_1/Video

				sed -i '/media_dir=A,/c\media_dir=A,\/mnt\/usb_1\/Music' /etc/minidlna.conf
				sed -i '/media_dir=P,/c\media_dir=P,\/mnt\/usb_1\/Pictures' /etc/minidlna.conf
				sed -i '/media_dir=V,/c\media_dir=V,\/mnt\/usb_1\/Video' /etc/minidlna.conf
				sed -i '/db_dir=/c\db_dir=\/mnt\/usb_1\/.MiniDLNA_Cache' /etc/minidlna.conf
			else
				mkdir -p ~/.MiniDLNA_Cache
				mkdir -p ~/Music
				mkdir -p ~/Pictures
				mkdir -p ~/Video

				sed -i '/media_dir=A,/c\media_dir=A,\/root\/Music' /etc/minidlna.conf
				sed -i '/media_dir=P,/c\media_dir=P,\/root\/Pictures' /etc/minidlna.conf
				sed -i '/media_dir=V,/c\media_dir=V,\/root\/Video' /etc/minidlna.conf
				sed -i '/db_dir=/c\db_dir=\/root\/.MiniDLNA_Cache' /etc/minidlna.conf
			fi
			
			MINIDLNA=2
		fi
		
		#NoIp
		if (( $NOIPDYNDNS == 1 )); then

			NOIPDYNDNS=2
		fi
		
		#Samba Server
		if (( $SMBSERVER == 1 )); then
			echo -e "raspberry\nraspberry" | smbpasswd -s -a root
			cp /boot/dietpi/conf/smb.conf /etc/samba/smb.conf
			
			if (( $USBDRIVE > 0 )); then
				sed -i '/path = /c\path = /mnt/usb_1' /etc/samba/smb.conf
			else
				sed -i '/path = /c\path = /root' /etc/samba/smb.conf
			fi
			
			SMBSERVER=2
		fi
		
		#VPN Server
		if (( $VPNSERVER == 1 )); then
			#Set password to raspberry
			service vpnserver start
			sleep 3
			echo -e "1\n\n\nServerPasswordSet\nraspberry\nraspberry" | /usr/local/vpnserver/vpncmd

			#Copy config file to VPN server
			service vpnserver stop
			cp /boot/dietpi/conf/vpnserver.config /usr/local/vpnserver/vpn_server.config

			VPNSERVER=2
		fi
		
		#OpenTyrian
		if (( $OPENTYRIAN == 1 )); then

			#Copy opentyrian.desktop entries to menu
			cp /boot/dietpi/conf/desktop/opentyrian.desktop /usr/share/applications/opentyrian.desktop

			#Create Desktop Folder SymLinks
			mkdir -p ~/Desktop
			ln -s /usr/share/applications/opentyrian.desktop ~/Desktop/opentyrian.desktop

			OPENTYRIAN=2
		fi

		#Apply GPU Memory Splits
		Install_Apply_Memory_Split
	}

	Install_Apply_Memory_Split(){

		local memory_split_mode=0

		#Define Memory Split Modes with installed software
		#Mode 2 (Kodi/Gaming)	
		if (( $KODI == 2 )); then 
			memory_split_mode=2
		elif (( $RETROPIE == 2 )); then 
			memory_split_mode=2
			
		#Mode 1 (Desktop)	
		elif (( $DESKTOP == 2 )); then 
			memory_split_mode=1
		elif (( $OPENTYRIAN == 2 )); then 
			memory_split_mode=1
			
		#Mode 0 (Server)	
		else
			memory_split_mode=0
		fi

		#Apply Memory Split Mode
		#Mode 2 (Kodi/Gaming)
		if (( $memory_split_mode == 2 )); then

			#odroid c1
			sed -i '/setenv hdmioutput /c\setenv hdmioutput "1"' /boot/boot.ini
			sed -i '/setenv vpu /c\setenv vpu "1"' /boot/boot.ini

			#rpi
			sed -i '/gpu_mem_256=/c\gpu_mem_256=128' /boot/config.txt
			sed -i '/gpu_mem_512=/c\gpu_mem_512=192' /boot/config.txt
			sed -i '/gpu_mem_1024=/c\gpu_mem_1024=256' /boot/config.txt
			sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /boot/dietpi.txt
		#Mode 1 (Desktop)	
		elif (( $memory_split_mode == 1 )); then

			#odroid c1
			sed -i '/setenv hdmioutput /c\setenv hdmioutput "1"' /boot/boot.ini
			sed -i '/setenv vpu /c\setenv vpu "1"' /boot/boot.ini

			#rpi
			sed -i '/gpu_mem_256=/c\gpu_mem_256=64' /boot/config.txt
			sed -i '/gpu_mem_512=/c\gpu_mem_512=128' /boot/config.txt
			sed -i '/gpu_mem_1024=/c\gpu_mem_1024=128' /boot/config.txt
			sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /boot/dietpi.txt
		#Mode 0 (Server)	
		elif (( $memory_split_mode == 0 )); then

			#odroid c1
			#sed -i '/setenv hdmioutput /c\setenv hdmioutput "1"' /boot/boot.ini
			sed -i '/setenv vpu /c\setenv vpu "0"' /boot/boot.ini

			#rpi
			sed -i '/gpu_mem_256=/c\gpu_mem_256=16' /boot/config.txt
			sed -i '/gpu_mem_512=/c\gpu_mem_512=16' /boot/config.txt
			sed -i '/gpu_mem_1024=/c\gpu_mem_1024=16' /boot/config.txt
			#HDMI output, use user setting, dont change | sed -i "/rpi_hdmi_output=/c\rpi_hdmi_output=1" /boot/dietpi.txt
		fi

	}

	USB_HDD_CONNECTED=0
	Check_Usb_Hdd_Connected(){

		USB_HDD_CONNECTED=$(df -h | grep -ci -m1 '/dev/sda1')
	}
	
	#/////////////////////////////////////////////////////////////////////////////////////
	# WHIPTAIL MENUS
	#/////////////////////////////////////////////////////////////////////////////////////
	TARGETMENUID=0

	Menu_Main(){

		WHIP_TITLE='---------- DietPi - Software Setup ----------'
		OPTION=$(whiptail --title "$WHIP_TITLE" --menu " Hardware Detected : $HW_MODEL_DESCRIPTION" --cancel-button "Exit Setup" 14 60 5 \
		"1" "Select DietPi Optimized Software" \
		"2" "Select Additional Linux Software" \
		"3" "DietPi-Config" \
		"4" "Help!" \
		"Go" "Start Install"  3>&1 1>&2 2>&3)

		CHOICE=$?
		if (( $CHOICE == 0 )); then
			case "$OPTION" in
			  1)
				TARGETMENUID=1
				;;
			  2)
				TARGETMENUID=2
				;;
			  3)
				/boot/dietpi/dietpi-config
				;;
			  4)
				whiptail --title "DietPi - Help" --msgbox "Welcome to DietPi.\n\nEasy to follow, step by step guides for installing DietPi:\nhttp://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=9\n\nFor a list of all installation options and their details:\nhttp://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=5" --backtitle "$WHIP_TITLE" 16 75
				;;
			  Go)
				Menu_StartInstall
				;;
			esac
		#Exit/Abort Setup
		else
			Menu_Exit
		fi
	}

	Menu_Exit(){

		#1st run install
		if (( $DIETPI_INSTALL_STAGE == 0 )); then
			WHIP_TITLE='Exit Setup Requested'
			WHIP_QUESTION=' DietPi has not fully been installed.\n This must be completed prior to using DietPi by selecting:\n - Go Start Install. \n \n Would you like to exit and abort the installation?'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" --yes-button "Exit" --no-button "Resume" --defaultno 13 65
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				#Abort any Changes
				Write_InstallFileList_AbortChanges
				Banner_Aborted
				#Exit script NOW
				exit
			else
				#Return to Main Menu
				TARGETMENUID=0
			fi
		#Standard exit
		elif (( $DIETPI_INSTALL_STAGE == 1 )); then
			WHIP_TITLE='Exit Setup?'
			WHIP_QUESTION=' Do you wish to exit DietPi-Software? \n \n All changes to software selections will be cleared.'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" --yes-button "Exit" --no-button "Resume" --defaultno 12 65
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				#Abort any Changes
				Write_InstallFileList_AbortChanges
				Banner_Aborted
				#Exit script NOW
				exit
			else
				#Return to Main Menu
				TARGETMENUID=0
			fi
		fi
	}

	Menu_ConfirmInstall(){

		#Confirm Software install
		WHIP_TITLE='Begin DietPi Install?'
		WHIP_QUESTION=' DietPi is now ready to install your software choices. Would you like to begin? '
		whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" --yes-button "Start Install" --no-button "Back To Menu" 12 65
		CHOICE=$?
		if (( $CHOICE == 0 )); then
			#exit menu system
			TARGETMENUID=-1
			
			#Enable installation start flag
			GOSTARTINSTALL=1
		else
			#Return to Main Menu
			TARGETMENUID=0
		fi
		
	}

	Menu_StartInstall(){

		#No Software selected / No changes Made / nothing to install
		if [ "$INSTALL_DIETPI_CHOICESMADE" = false ] && [ "$INSTALL_LINUX_CHOICESMADE" = false ]; then
			#1st run install
			if (( $DIETPI_INSTALL_STAGE == 0 )); then
				WHIP_TITLE='No Software Selected!'
				WHIP_QUESTION=' You have not selected any DietPi or Linux software to be installed \n Would you like to return to the Menu? \n \n By selecting DietPi-Core: \n - Optimized/Ready to Run software will NOT be installed \n - You want a Minimal Raspbian/Debian Server Install'
				whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" --yes-button "DietPi-Core" --no-button "Back To Menu" --defaultno 16 65
				CHOICE=$?
				if (( $CHOICE == 0 )); then
					#exit menu system
					TARGETMENUID=-1
					
					#Enable installation start flag
					GOSTARTINSTALL=1
				else
					#Return to Main Menu
					TARGETMENUID=0
				fi
			#Not 1st run
			elif (( $DIETPI_INSTALL_STAGE == 1 )); then
				WHIP_TITLE='No Changes to Software Selection'
				whiptail --title "$WHIP_TITLE" --msgbox "No changes have been detected. Unable to start install." 10 60
			fi
		# Confirm install with user
		else
			Menu_ConfirmInstall
		fi
	}

	#TARGETMENUID=1
	Menu_Dietpi_Software(){

		#Reset Choices made flag
		INSTALL_DIETPI_CHOICESMADE=false

		#Reload Installed States file
		Install_ReloadChoices

		#Obtain On/Off state for whiptail menu
		local usbdrive_w="off"
		if (( $USBDRIVE > 0 )); then
			usbdrive_w="on"
			
			#Reset to 0. Menu checklists will apply back to 1
			if (( $USBDRIVE == 1 )); then
				USBDRIVE=0
			fi
		fi
		
		local desktop_w="off"
		if (( $DESKTOP > 0 )); then
			desktop_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $DESKTOP == 1 )); then
				DESKTOP=0
			fi
		fi
		
		local transmission_w="off"
		if (( $TRANSMISSION > 0 )); then
			transmission_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $TRANSMISSION == 1 )); then
				TRANSMISSION=0
			fi
		fi
		
		local owncloud_w="off"
		if (( $OWNCLOUD > 0 )); then
			owncloud_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $OWNCLOUD == 1 )); then
				OWNCLOUD=0
			fi
		fi

		local phpbb_w="off"
		if (( $PHPBB > 0 )); then
			phpbb_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $PHPBB == 1 )); then
				PHPBB=0
			fi
		fi

		local webserver_w="off"
		if (( $WEBSERVER > 0 )); then
			webserver_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $WEBSERVER == 1 )); then
				WEBSERVER=0
			fi
		fi

		local proftp_w="off"
		if (( $PROFTP > 0 )); then
			proftp_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $PROFTP == 1 )); then
				PROFTP=0
			fi
		fi
		
		local ympd_w="off"
		if (( $YMPD > 0 )); then
			ympd_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $YMPD == 1 )); then
				YMPD=0
			fi
		fi
		
		local kodi_w="off"
		if (( $KODI > 0 )); then
			kodi_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $KODI == 1 )); then
				KODI=0
			fi
		fi

		local retropie_w="off"
		if (( $RETROPIE > 0 )); then
			retropie_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $RETROPIE == 1 )); then
				RETROPIE=0
			fi
		fi
		
		local minidlna_w="off"
		if (( $MINIDLNA > 0 )); then
			minidlna_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $MINIDLNA == 1 )); then
				MINIDLNA=0
			fi
		fi
		
		local noipdyndns_w="off"
		if (( $NOIPDYNDNS > 0 )); then
			noipdyndns_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $NOIPDYNDNS == 1 )); then
				NOIPDYNDNS=0
			fi
		fi
		
		local smbserver_w="off"
		if (( $SMBSERVER > 0 )); then
			smbserver_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $SMBSERVER == 1 )); then
				SMBSERVER=0
			fi
		fi
		
		local vpnserver_w="off"
		if (( $VPNSERVER > 0 )); then
			vpnserver_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $VPNSERVER == 1 )); then
				VPNSERVER=0
			fi
		fi
		
		local opentyrian_w="off"
		if (( $OPENTYRIAN > 0 )); then
			opentyrian_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $OPENTYRIAN == 1 )); then
				OPENTYRIAN=0
			fi
		fi

		#Odroid C1 Software Installation
		if (( $HW_MODEL == 10 )); then
			WHIP_TITLE='DietPi - Software Selection'
			whiptail --title "$WHIP_TITLE" --checklist --separate-output "Please Select the Software you wish to install \n - Press the SpaceBar to select/unselect" --backtitle "$WHIP_TITLE" 18 64 10 \
			"2" "Kodi / XBMC" $kodi_w \
			"5" "BitTorrent (Transmission)" $transmission_w \
			"6" "OwnCloud" $owncloud_w \
			"9" "Forums (PHPBB)" $phpbb_w \
			"10" "WebServer (Apache2/mysql/php5/phpmyadmin)" $webserver_w \
			"11" "FTP Server (Proftp)" $proftp_w \
			"12" "File Server (Samba)" $smbserver_w \
			"13" "VPN Server (SoftEther)" $vpnserver_w \
			"14" "Website URL Address (No-Ip)" $noipdyndns_w 2>results
		#Rpi
		elif (( $HW_MODEL <= 2 )); then
			WHIP_TITLE='DietPi - Software Selection'
			whiptail --title "$WHIP_TITLE" --checklist --separate-output "Please Select the Software you wish to install \n - Press the SpaceBar to select/unselect" --backtitle "$WHIP_TITLE" 18 70 10 \
			"1" "Desktop (LXDE)" $desktop_w \
			"2" "Kodi / XBMC (Michael Gorven Repo)" $kodi_w \
			"3" "Gaming (RetroPie)" $retropie_w \
			"4" "Gaming (OpenTyrian Game)" $opentyrian_w \
			"5" "BitTorrent (Transmission)" $transmission_w \
			"6" "OwnCloud" $owncloud_w \
			"7" "DLNA/UPnP Media Server (MiniDLNA)" $minidlna_w \
			"8" "HiFi / Web Interface Music Player (Mpd Ympd)" $ympd_w \
			"9" "Forums (PHPBB)" $phpbb_w \
			"10" "WebServer (Apache2/mysql/php5/phpmyadmin)" $webserver_w \
			"11" "FTP Server (Proftp)" $proftp_w \
			"12" "File Server (Samba)" $smbserver_w \
			"13" "VPN Server (SoftEther)" $vpnserver_w \
			"14" "Website URL Address (No-Ip)" $noipdyndns_w 2>results
		fi

		while read choice
		do
			case $choice in
			1)
				if (( $DESKTOP == 0 )); then
					DESKTOP=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			2)
				if (( $KODI == 0 )); then
					KODI=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			3)
				if (( $RETROPIE == 0 )); then
					RETROPIE=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			4)
				if (( $OPENTYRIAN == 0 )); then
					OPENTYRIAN=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			5)
				if (( $USBDRIVE > 0 )); then
					if (( $TRANSMISSION == 0 )); then
						TRANSMISSION=1
						INSTALL_DIETPI_CHOICESMADE=true
					fi
				else
					WHIP_TITLE='Error - USB Drive Required'
					whiptail --title "$WHIP_TITLE" --msgbox " A USB Harddrive is required for BitTorrent (Transmission) \n - This will not be installed" 10 60
				fi
			;;
			6)
				if (( $USBDRIVE > 0 )); then
					if (( $OWNCLOUD == 0 )); then
						OWNCLOUD=1
						INSTALL_DIETPI_CHOICESMADE=true
					fi
				else
					WHIP_TITLE='Error - USB Drive Required'
					whiptail --title "$WHIP_TITLE" --msgbox " A USB Harddrive is required for OwnCloud \n - This will not be installed" 10 60
				fi
			;;
			7)
				if (( $MINIDLNA == 0 )); then
					MINIDLNA=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			8)
				if (( $YMPD == 0 )); then
					YMPD=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			9)
				if (( $PHPBB == 0 )); then
					PHPBB=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			10)
				if (( $WEBSERVER == 0 )); then
					WEBSERVER=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			11)
				if (( $PROFTP == 0 )); then
					PROFTP=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			12)
				if (( $SMBSERVER == 0 )); then
					SMBSERVER=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			13)
				if (( $VPNSERVER == 0 )); then
					VPNSERVER=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			14)
				if (( $NOIPDYNDNS == 0 )); then
					NOIPDYNDNS=1
					INSTALL_DIETPI_CHOICESMADE=true
				fi
			;;
			esac
		done < results
		rm results


		#Install Info/Warnings
		#oDroid c1
		if (( $HW_MODEL == 10 )); then
			echo -e "Nothing here"
		#RPi
		elif (( $HW_MODEL <= 2 )); then
			if (( $RETROPIE == 1 )); then
				#RetroPie Project
				WHIP_TITLE=' RetroPie - Advanced Users'
				WHIP_QUESTION='DietPi will clone the RetroPie git for you and start the RetroPie Setup Script. Please follow the DietPi + RetroPie Setup Guide: http://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=8'
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 14 70
			fi

			#Give full credit to Micheal and his Repo.
			if (( $KODI == 1 )); then
				WHIP_TITLE=' Kodi - Thanks to Michael Groven'
				WHIP_QUESTION=' DietPi uses the Kodi installation which is provided by Michael Grovens excellent Repository \n \n For more information and to thank Michael for his hard work, please goto http://michael.gorven.za.net/raspberrypi/xbmc'
				whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_BACKTITLE" 14 70
			fi
		fi

		#Update Install file
		Write_InstallFileList
		
		#Boot Choices
		local bootchoices_available=false
		if (( $DESKTOP == 1 )); then
			bootchoices_available=true
		elif (( $KODI == 1 )); then
			bootchoices_available=true
		elif (( $RETROPIE == 1 )); then
			bootchoices_available=true
		elif (( $OPENTYRIAN == 1 )); then
			bootchoices_available=true	
		fi

		if [ "$bootchoices_available" = true ]; then
			# Set Boot Order
			WHIP_TITLE=' DietPi - Boot Options'
			WHIP_QUESTION=' Would you like to configure the auto boot options for DietPi? \n This will allow you to choose what program loads automatically after booting (eg: Desktop)'
			whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" 12 62
			CHOICE=$?
			if (( $CHOICE == 0 )); then
				/boot/dietpi/dietpi-boot_order
			fi
		fi
		
		#Return to Main Menu
		TARGETMENUID=0
	}

	#TARGETMENUID=2
	Menu_Linux_Software(){

		#Inform User that DietPi software will automatically install additional linux software when required.
		WHIP_TITLE='Additional Linux Software'
		WHIP_QUESTION='DietPi will automatically install additional Linux software on the next screen, when required (eg: Desktop LXDE will install ALSA + Xserver).\n\nThis means you only need to select the software you actually require.'
		whiptail --title "$WHIP_TITLE" --msgbox "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" 12 70

		#Reset Choices made flag
		INSTALL_LINUX_CHOICESMADE=false

		#Reload Installed States file
		Install_ReloadChoices

		#Obtain On/Off state for whiptail menu
		local vimfull_w="off"
		if (( $VIMFULL > 0 )); then
			vimfull_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $VIMFULL == 1 )); then
				VIMFULL=0
			fi
		fi
		
		local sshclient_w="off"
		if (( $SSHCLIENT > 0 )); then
			sshclient_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $SSHCLIENT == 1 )); then
				SSHCLIENT=0
			fi
		fi
		
		local smbclient_w="off"
		if (( $SMBCLIENT > 0 )); then
			smbclient_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $SMBCLIENT == 1 )); then
				SMBCLIENT=0
			fi
		fi
		
		local rpigpio_w="off"
		if (( $RPIGPIO > 0 )); then
			rpigpio_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $RPIGPIO == 1 )); then
				RPIGPIO=0
			fi
		fi
		
		local gitclient_w="off"
		if (( $GITCLIENT > 0 )); then
			gitclient_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $GITCLIENT == 1 )); then
				GITCLIENT=0
			fi
		fi
		
		local buildessential_w="off"
		if (( $BUILDESSENTIAL > 0 )); then
			buildessential_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $BUILDESSENTIAL == 1 )); then
				BUILDESSENTIAL=0
			fi
		fi
		
		local alsabase_w="off"
		if (( $ALSABASE > 0 )); then
			alsabase_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $ALSABASE == 1 )); then
				ALSABASE=0
			fi
		fi
		
		#XSERVERXORG
		local xserverxorg_w="off"
		if (( $XSERVERXORG > 0 )); then
			xserverxorg_w="on"
			#Reset to 0. Menu checklists will apply back to 1
			if (( $XSERVERXORG == 1 )); then
				XSERVERXORG=0
			fi
		fi

		#Odroid C1 Software Installation
		if (( $HW_MODEL == 10 )); then
			WHIP_TITLE='Linux - Software Selection'
			whiptail --title "$WHIP_TITLE" --checklist --separate-output "Please Select Additional Software you Require \n - Press the SpaceBar to select/unselect" --backtitle "$WHIP_TITLE" 20 60 12 \
			"1" "Vim" $vimfull_w \
			"2" "OpenSSH Client" $sshclient_w \
			"3" "Samba Client (Access Windows Network Shares)" $smbclient_w \
			"5" "Build-Essentials" $buildessential_w \
			"6" "Git" $gitclient_w \
			"7" "ALSA (Sound)" $alsabase_w \
			"8" "Xserver / Xinit / Xauth(Display)" $xserverxorg_w 2>results
		#Rpi
		elif (( $HW_MODEL <= 2 )); then

			WHIP_TITLE='Linux - Software Selection'
			whiptail --title "$WHIP_TITLE" --checklist --separate-output "Please Select Additional Software you Require \n - Press the SpaceBar to select/unselect" --backtitle "$WHIP_TITLE" 20 60 12 \
			"1" "Vim" $vimfull_w \
			"2" "OpenSSH Client" $sshclient_w \
			"3" "Samba Client (Access Windows Network Shares)" $smbclient_w \
			"4" "RPi.GPIO (GPIO Projects)" $rpigpio_w \
			"5" "Build-Essentials" $buildessential_w \
			"6" "Git" $gitclient_w \
			"7" "ALSA (Sound)" $alsabase_w \
			"8" "Xserver / Xinit / Xauth / fbturbo (Display)" $xserverxorg_w 2>results
		fi

		while read choice
		do
			case $choice in
				1)
					if (( $VIMFULL == 0 )); then
						VIMFULL=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				2)
					if (( $SSHCLIENT == 0 )); then
						SSHCLIENT=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				3)
					if (( $SMBCLIENT == 0 )); then
						SMBCLIENT=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				4)
					if (( $RPIGPIO == 0 )); then
						RPIGPIO=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				5)
					if (( $BUILDESSENTIAL == 0 )); then
						BUILDESSENTIAL=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				6)
					if (( $GITCLIENT == 0 )); then
						GITCLIENT=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				7)
					if (( $ALSABASE == 0 )); then
						ALSABASE=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
				8)
					if (( $XSERVERXORG == 0 )); then
						XSERVERXORG=1
						INSTALL_LINUX_CHOICESMADE=true
					fi
				;;
			esac
		done < results
		rm results
		
		#Update Install file
		Write_InstallFileList
		
		#Return to Main Menu
		TARGETMENUID=0
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Banner Print
	#/////////////////////////////////////////////////////////////////////////////////////
	Banner_Dietpi(){
		/boot/dietpi/dietpi-banner 0
	}

	Banner_Setup(){
		Banner_Dietpi
		echo -e "\n First Run Setup \n"
	}

	Banner_Installing(){
		Banner_Dietpi
		echo -e "\n Installing Software: $INSTALL_DESCRIPTION \n Please Wait, this may take some time... \n "
		sleep 3
	}

	Banner_Apt_Update(){
		Banner_Dietpi
		echo -e "\n Please Wait: \n Updating and Upgrading APT, this may take some time... \n"
		sleep 1
	}

	Banner_Reboot(){
		Banner_Dietpi
		echo -e "\n The system will now reboot in 5 seconds. \n This completes the DietPi installation \n"
		sleep 4
	}

	Banner_Configs(){
		Banner_Dietpi
		echo -e "\n Please Wait: \n Installing optimized config files for $HW_MODEL_DESCRIPTION \n"
		sleep 3
	}

	Banner_Aborted(){
		#1st run abort
		if (( $DIETPI_INSTALL_STAGE == 0 )); then
			/boot/dietpi/dietpi-banner 0
			echo -e "\n Installation Aborted by User \n Installation must be completed prior to using DietPi \n Please run /boot/dietpi/dietpi-software to restart the installation \n"
		#Standard abort
		else
			/boot/dietpi/dietpi-banner 1
		fi
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

		Banner_Setup

		#--------------------------------------------------------------------------------------
		#Check Internet before starting Installation Menus
		Check_Internet_Connection
		while (( $INTERNET_CONNECTED == 0 )); do
			#Ask to check settings, 
			whiptail --title "No Internet Connection!" --yesno " Internet access is required to start the DietPi Installation Program \n Would you like to change your network settings and try again?" --yes-button "Change Settings" --no-button "Abort Setup" --backtitle "$WHIP_BACKTITLE" 14 60
			CHOICE=$?
			#run dietpi config
			if (( $CHOICE == 0 )); then
				whiptail --title "Launching DietPi-Config" --msgbox " DietPi-Config will now be started. \n Select the Network Options menu to change and test your network settings \n \n When completed, Exit DietPi-Config to resume setup" --backtitle "Launching DietPi-Config" 14 60
				/boot/dietpi/dietpi-config
			#User aborted setup
			else
				Banner_Aborted
				
				#Exit Script NOW
				exit
			fi
			
			#Check connection again.
			Check_Internet_Connection
		done
		
		#--------------------------------------------------------------------------------------
		#Check for DietPi updates on 1st run (-1 = 1st run | 0 = Reboot, updates applied | 1 = Idle, No updates).
		if (( $(cat /boot/dietpi/.update_stage) == -1 )) && (( $INTERNET_CONNECTED == 1 )); then

			#Update .update_stage file to completed
			echo 1 > /boot/dietpi/.update_stage		
			
			#Check for updates and apply if needed (1=force apply updates).
			/boot/dietpi/dietpi-update 1
			
			#Check update stage file again (dietpi-update will set to 0 if an update was applied and requires a reboot)
			if (( $(cat /boot/dietpi/.update_stage) == 0 )); then

				#Update .update_stage file to completed
				echo 1 > /boot/dietpi/.update_stage	

				clear
				/boot/dietpi/dietpi-banner 0
				WHIP_TITLE='DietPi has been updated'
				whiptail --title "$WHIP_TITLE" --msgbox "DietPi has been updated to the latest version.\nYour system will now reboot to finish the DietPi update. Once completed, simply login to resume DietPi Setup \n\nPress Enter to Continue" 14 65

				#Reboot required NOW, exit this script NOW
				reboot
				exit
			fi
			
		fi
		
		#--------------------------------------------------------------------------------------
		#Generate blank .install file. Doesnt exist on a fresh image.
		if [ ! -f /boot/dietpi/.installed ]; then
			Write_InstallFileList
		fi
		
		#--------------------------------------------------------------------------------------
		#Ask our inital questions, before allowing access to the software selection menus.
		if (( $DIETPI_INSTALL_STAGE == 0 )); then
		
			WHIP_TITLE='DietPi - Welcome'
			whiptail --title "$WHIP_TITLE" --msgbox "Welcome to the DietPi Installation System. \n \nBefore we can begin, we need to ask you a few questions regarding this installation. \n \nPress Enter to begin." 14 70
			
			#Reload Installed States file
			Install_ReloadChoices

			#Request for Dedicated External Drive installation.
			if (( $USBDRIVE == 0 )); then
				WHIP_TITLE='DietPi - USB Dedicated Drive'
				WHIP_QUESTION='Will you be using a dedicated USB Harddrive with this DietPi installation? \n \n(NOTICE) Your decision now is final and cannot be changed at a later date. I HIGHLY recommend using a USB External Drive with DietPi to ensure all install options are available to you. \n \n This is required For: \n - BitTorrent (Transmission) \n - OwnCloud \n \n This is recommended For: \n - Kodi / XBMC (Store Media Files) \n - RetroPie (Store Roms) \n - Hifi / MiniDLNA'
				whiptail --title "$WHIP_TITLE" --yesno "$WHIP_QUESTION" --backtitle "$WHIP_TITLE" --defaultno 22 70
				CHOICE=$?
				if (( $CHOICE == 0 )); then
				
					#Run external drive setup script
					/boot/dietpi/dietpi-external_drive_setup
					
					#Confirm drive is available
					Check_Usb_Hdd_Connected
					if (( $USB_HDD_CONNECTED == 1 )); then
						USBDRIVE=2
						
						#Save to .installed file list
						Write_InstallFileList						
					fi
				fi
			fi
			
			WHIP_TITLE='DietPi - Questions Completed'
			whiptail --title "$WHIP_TITLE" --msgbox "The DietPi-Software menu will now appear with the following options. \n- Select DietPi Optimized Software\nThis will allow you to select Optimized and Ready to Run software.\n\n- Select Additional Linux Software.\nThis will allow you to select standard linux software relative to this installation. \n\n- DietPi-Config\n A feature rich configuration tool for your device\n \nPress Enter to begin" 18 75
		fi

		#--------------------------------------------------------------------------------------
		#Start DietPi Menu
		while (( $TARGETMENUID > -1 )); do
		
			clear
		
			if (( $TARGETMENUID == 0 )); then
				Menu_Main
			elif (( $TARGETMENUID == 1 )); then
				Menu_Dietpi_Software
			elif (( $TARGETMENUID == 2 )); then
				Menu_Linux_Software
			fi
		done
		
		#--------------------------------------------------------------------------------------
		#All code above uses (EXIT) to exit script (eg: if installation is aborted/cancled)
		#--------------------------------------------------------------------------------------
		#Start DietPi-Software installs
		
		if (( $GOSTARTINSTALL == 1 )); then
		
			Check_Internet_Connection

			if (( $INTERNET_CONNECTED == 1 )); then
			
				#Set local path to home folder
				cd ~/
				
				#Update Apt
				Banner_Apt_Update
				apt-get update
				
				#Upgrade Apt
				Banner_Setup
				Banner_Apt_Update
				apt-get upgrade -y

				#Install Linux Software
				Install_Linux_Software
				
				#Install DietPi Optimized Software
				Install_Dietpi_Software

				#Apply DietPi Configuration and Optimization Files
				Banner_Configs
				Install_Apply_Configs
				
				#Write .Install File
				Write_InstallFileList

				#Set Install Stage to Finished
				echo 1 > /boot/dietpi/.install_stage
				
				#Upload DietPi-Survey Data
				/boot/dietpi/dietpi-survey &> /dev/null

				#clear log files (prevents waiting for ramlog to save /var/log to disk)
				logclear

				#Reboot
				Banner_Reboot
				reboot
			#Failed Install (E01)
			else
				clear
				
				echo -e "\n (E01) Unable To Install \n - No Network or http://mirrordirector.raspbian.org is offline \n - Please run dietpi-config and check your Network Settings \n Log back in, or, run dietpi-software to restart installation"
			fi
		fi
		
	#Run whole script inside a function. Loads into memory, allows for online file patching.
	exit
}