#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Services Script
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	# Info:
	# - Allows service control for all listed programs used in dietpi-software
	# - Disable removes the autostart from init.d and systemD. This allows DietPi to control startup services.
	#
	# Usage:
	# - Start/Stop | Called from rc.local
	# - Disable | Called from dietpi-software at end of installation.
	# - /DietPi/dietpi/dietpi-services start/stop/restart/disable
	#////////////////////////////////////

	DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)

	aSERVICES=(
		"cron"
		"transmission-daemon"
		"proftpd"
		"samba"
		"vsftpd"
		"apache2"
		"nginx"
		"mysql"
		"php5-fpm"
		"mpd"
		"ympd"
		"squeezelite"
		"minidlna"
		"noip2"
		"grasshopper"
		"dnsmasq"
		"subsonic"
		"webiopi"
		"haproxy"
		"fail2ban"
		"openvpn"
		"isc-dhcp-server"
		"hostapd"
	)

	FP_TEMP="/tmp/.dietpi-services_installed"

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main
	#/////////////////////////////////////////////////////////////////////////////////////
	#Info
	echo -e "\n DietPi-Services"
	echo -e " Mode: $1"
	echo -e " Please wait..."

	#Find installed services
	dpkg --get-selections > "$FP_TEMP"

	#-----------------------------------------------------------------------------------
	#disable/enable
	if [ "$1" = "disable" ] ||
		[ "$1" = "enable" ]; then

		for ((i=0; i<${#aSERVICES[@]}; i++))
		do
			if (( $(grep -ci -m1 "${aSERVICES[$i]}" "$FP_TEMP") == 1 )); then

				#LSB
				if (( $DISTRO == 1 )); then
					update-rc.d -f ${aSERVICES[$i]} $1 &> /dev/null

				#SystemD
				elif (( $DISTRO == 3 )); then
					systemctl $1 ${aSERVICES[$i]} &> /dev/null
				fi

			fi

		done

		# + SystemD reload daemon
		if (( $DISTRO == 3 )); then
			systemctl daemon-reload &> /dev/null
		fi

		echo -e " Completed"

	#-----------------------------------------------------------------------------------
	#start/stop/restart
	elif [ "$1" = "start" ] ||
		[ "$1" = "stop" ] ||
		[ "$1" = "restart" ]; then

		for ((i=0; i<${#aSERVICES[@]}; i++))
		do
			if (( $(grep -ci -m1 "${aSERVICES[$i]}" "$FP_TEMP") == 1 )); then

				#LSB
				if (( $DISTRO == 1 )); then
					service ${aSERVICES[$i]} $1 &> /dev/null

				#SystemD
				elif (( $DISTRO == 3 )); then
					systemctl $1 ${aSERVICES[$i]} &> /dev/null
				fi

			fi
		done

		#Non-service based control for specific software
		/etc/raspimjpeg_init $1 &> /dev/null
		/etc/deluge_init $1 &> /dev/null
		/etc/squeezeboxserver_init $1 &> /dev/null

		echo -e " Completed"

		#Set Nice / Affinity
		if [ "$1" = "start" ] ||
			[ "$1" = "restart" ]; then
			echo -e "\n DietPi-Nice\n Applying nice levels....."
			/DietPi/dietpi/dietpi-nice 1
			echo -e " Completed"

			echo -e "\n DietPi-Affinity\n Applying CPU affinity settings....."
			/DietPi/dietpi/dietpi-affinity 1
			echo -e " Completed\n"
		fi

	#-----------------------------------------------------------------------------------
	#Invalid command
	else
		echo -e "\nError, invalid command: $1\nAvailable commands: start / stop / restart / enable / disable"
	fi
	#-----------------------------------------------------------------------------------
	rm "$FP_TEMP"
	unset aSERVICES
	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------
}