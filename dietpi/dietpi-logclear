#!/bin/bash
{
	#////////////////////////////////////
	# DietPi-logclear Script
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	# Info:
	# Clears logs in /var/log, with backup option.
	#
	# usage:
	# - logclear 		| Update current log files data to /"$HOME"/logfile_storage/*. Then clear.
	# - logclear 1		| Clear all logs in /var/log
	#////////////////////////////////////

	INPUT=0
	if [[ $1 =~ ^-?[0-9]+$ ]]; then
		INPUT=$1
	fi
	
	#////////////////////////////////////////////////////////////////
	# Info Printouts
	#////////////////////////////////////////////////////////////////
	INFO_SIZE_CLEARED=0
	INFO_LOGS_PROCESSED=0
	INFO_BACKUPS_MADE=0
	
	#////////////////////////////////////////////////////////////////
	# Temp
	#////////////////////////////////////////////////////////////////
	TEMP_LOGLIST_FILEPATH="/tmp/logclear_temp"

	#////////////////////////////////////////////////////////////////
	# Run
	#////////////////////////////////////////////////////////////////

	#Find existing logs and read their filepath into an array
	find /var/log -type f > "$TEMP_LOGLIST_FILEPATH"
	readarray -t ARRAY_LOG_FILEPATH < "$TEMP_LOGLIST_FILEPATH"
	
	#Process Logfiles
	for ((i=0; i<${#ARRAY_LOG_FILEPATH[@]}; i++))
	do
		#Update current log files data to /"$HOME"/logfile_storage/*. Then clear.
		if (( $INPUT == 0 )); then
		
			#Do we have any data to write? Check size of file.
			if (( $(stat -c%s "${ARRAY_LOG_FILEPATH[$i]}") > 1 )); then
			
				filename=$(echo -e ${ARRAY_LOG_FILEPATH[$i]} | sed 's/\/var\/log\///g')

				#Generate filepaths
				if [ ! -f "$HOME/logfile_storage/$filename" ]; then
					#This is a little "hack" to automatically generate the required subdirectories.
					# EG: /this/is/my/logfile.txt | will create the folders /this/is/my
					mkdir -p "$HOME/logfile_storage/$filename"
					rm -R "$HOME/logfile_storage/$filename"
				fi

				#Write current logfile contents to existing.
				cat "${ARRAY_LOG_FILEPATH[$i]}" >> "$HOME"/logfile_storage/"$filename"
				((INFO_BACKUPS_MADE++))
			fi
		fi

		#Update Info
		INFO_SIZE_CLEARED+=$(stat -c%s "${ARRAY_LOG_FILEPATH[$i]})
		((INFO_LOGS_PROCESSED++))
		
		#Clear log files by overwriting them.
		echo -e "" > "${ARRAY_LOG_FILEPATH[$i]}"

	done
	
	#Remove temp files
	rm "$TEMP_LOGLIST_FILEPATH" &> /dev/null

	#delete[] array
	unset ARRAY_LOG_FILEPATH

	#----------------------------------------------------------------
	#Print Info
	echo -e "\n DietPi-Logclear:"
	echo -e " - Log files processed     | $INFO_LOGS_PROCESSED"
	echo -e " - Log files space cleared | $INFO_SIZE_CLEARED bytes"
	if (( $INFO_BACKUPS_MADE > 0 )); then
		echo -e " - Log files backed up     | $INFO_BACKUPS_MADE to /$HOME/logfile_storage"
	fi
	echo -e "\n"
	#----------------------------------------------------------------
	exit
	#----------------------------------------------------------------
}