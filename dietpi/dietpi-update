#!/bin/bash
#Load the whole script into memory.
{
	#////////////////////////////////////
	# DietPi Update
	#
	#////////////////////////////////////
	# Created by Dan Knight / daniel_haze@hotmail.com / fuzon.co.uk
	#
	#////////////////////////////////////
	#
	# Info:
	# - Updates DietPi from Git
	# - Uses patch_file for online pactching
	#
	# Usage:
	# - dietpi-update   = Normal
	# - dietpi-update 1 = forced update
	# - dietpi-update 2 = Check for updates. print server_version to /DietPi/dietpi/.update_available (-1=new image required)
	#////////////////////////////////////

	INPUT=0
	
	if [[ $1 =~ ^-?[0-9]+$ ]]; then
		INPUT=$1
	fi

	#/////////////////////////////////////////////////////////////////////////////////////
	#Exit Paths
	#/////////////////////////////////////////////////////////////////////////////////////
	#Exit path for non-root logins.
	if (( $UID != 0 )); then
		clear
		echo -e "\n ERROR: You do not have root privileges.\n Please login as root, or, use:\n sudo dietpi-update\n"
		
		exit
	fi
	
	#/////////////////////////////////////////////////////////////////////////////////////
	#GIT Branch | master / testing
	#/////////////////////////////////////////////////////////////////////////////////////
	GITBRANCH=$(cat /DietPi/dietpi.txt | grep -m1 'gitbranch=' | sed 's/gitbranch=//g')
	
	#/////////////////////////////////////////////////////////////////////////////////////
	#Obtain Hardware Details
	#/////////////////////////////////////////////////////////////////////////////////////
	HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
	HW_MODEL_DESCRIPTION=$(sed -n 2p /DietPi/dietpi/.hw_model)
	DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)

	#/////////////////////////////////////////////////////////////////////////////////////
	#UPDATE Vars
	#/////////////////////////////////////////////////////////////////////////////////////
	DIETPIUPDATE_VERSION_CURRENT=4 # Version of dietpi-update / set server_version line two to value++ and obsolete previous dietpi-update scripts
	DIETPIUPDATE_VERSION_REQUIRED=0
	
	FILEPATH_TEMP="/tmp/dietpi-update"

	SERVER_ONLINE=0
	UPDATE_AVAILABLE=0
	UPDATE_REQUIRESNEWIMAGE=0
	RUN_UPDATE=0

	VERSION_CURRENT=0
	VERSION_SERVER=0

	Get_Client_Version(){
		VERSION_CURRENT=$(cat /DietPi/dietpi/.version)
	}

	Get_Server_Version(){

		#Get server version file
		wget https://raw.githubusercontent.com/Fourdee/DietPi/"$GITBRANCH"/dietpi/server_version -O "$FILEPATH_TEMP"/server_version
		if (( $? == 0 )); then
			SERVER_ONLINE=1
			
			#Get server Version info
			VERSION_SERVER=$(sed -n 1p "$FILEPATH_TEMP"/server_version)
			DIETPIUPDATE_VERSION_REQUIRED=$(sed -n 2p "$FILEPATH_TEMP"/server_version)
				
		fi
	}
	
	Check_Update_Available(){
		#Check if server_version is a valid interger.
		if [[ $VERSION_SERVER =~ ^-?[0-9]+$ ]]; then

			#Update Requires new image?
			if (( $DIETPIUPDATE_VERSION_CURRENT < $DIETPIUPDATE_VERSION_REQUIRED )); then
				UPDATE_REQUIRESNEWIMAGE=1
			#Update available
			elif (( $VERSION_CURRENT < $VERSION_SERVER )); then 
				UPDATE_AVAILABLE=1
			fi

		else
			/DietPi/dietpi/dietpi-banner 0
			echo -e "\nError: Obtained server version value from github is invalid. Please try running dietpi-update again.\n"
			exit
		fi
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# MENUS
	#/////////////////////////////////////////////////////////////////////////////////////
	WHIP_BACKTITLE='DietPi - Update'
	WHIP_TITLE='DietPi - Update'
	WHIP_QUESTION='DietPi - Update'
	CHOICE=0
	OPTION=0

	Menu_Update(){

		WHIP_TITLE='---------- DietPi - Update ----------'
		whiptail --title "$WHIP_TITLE" --yesno " DietPi Version: $VERSION_CURRENT \n Latest Version: $VERSION_SERVER \n \n Update available, would you like to update DietPi?\n\n Changelog: https://goo.gl/G9ikqn" --yes-button "Ok" --no-button "Exit" --backtitle "$WHIP_BACKTITLE" 14 60
		CHOICE=$?
		#Confirm action
		if (( $CHOICE == 0 )); then
			RUN_UPDATE=1
		fi
	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Update DietPi
	#/////////////////////////////////////////////////////////////////////////////////////
	
	Run_Update(){
	
		#git clone Zip method (no need to install GIT)
		wget https://github.com/Fourdee/DietPi/archive/"$GITBRANCH".zip -O "$FILEPATH_TEMP"/update.zip
		if (( $? == 0 )); then

			unzip "$FILEPATH_TEMP"/update.zip -d "$FILEPATH_TEMP"/
			
			#Remove Files from git that are not to be updated
			rm "$FILEPATH_TEMP"/DietPi-"$GITBRANCH"/dietpi/.* &> /dev/null

			#Copy downloaded DietPi to RAM
			cp -Rf "$FILEPATH_TEMP"/DietPi-"$GITBRANCH"/dietpi /DietPi/

			#Allow execute of patch file
			chmod +x /DietPi/dietpi/patch_file
			
			#Run Patch file
			while (( $VERSION_CURRENT < $VERSION_SERVER )); do	
				
				/DietPi/dietpi/dietpi-banner 0
				
				echo -e "DietPi-Update is running the update process, please wait.... \n \n - Current Version : $VERSION_CURRENT \n - Server Version  : $VERSION_SERVER \n "
				
				#Run patch file
				/DietPi/dietpi/patch_file "$VERSION_CURRENT" "$VERSION_SERVER"
				
				#Update Local Version ID
				((VERSION_CURRENT++))
				echo -e "$VERSION_CURRENT" > /DietPi/dietpi/.version

				Get_Client_Version
					
			done
			
			#Remove Patch files.
			rm /DietPi/dietpi/patch_file &> /dev/null
			rm /DietPi/dietpi/server_version &> /dev/null

			#Remove temp
			rm -R "$FILEPATH_TEMP" &> /dev/null			

		#Unable to download file.
		else
			/DietPi/dietpi/dietpi-banner 0
			echo -e "\nError: Download failed, unable to run update. Please try running dietpi-update again.\n"
			exit
		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#----------------------------------------------------------------
	#Inform user
	/DietPi/dietpi/dietpi-banner 0
	echo -e " DietPi-Update: \n Checking for DietPi updates, Please wait..."
	#----------------------------------------------------------------
	#Create temp directory used in dietpi-update
	rm -R "$FILEPATH_TEMP" &> /dev/null
	mkdir -p "$FILEPATH_TEMP" &> /dev/null
	#----------------------------------------------------------------
	#Get versions
	Get_Client_Version
	Get_Server_Version
	#----------------------------------------------------------------
	#Check if update is available
	Check_Update_Available
	#----------------------------------------------------------------
	#Check for updates only. Send result to global file for use by dietpi-banner update available notifications.
	if (( $INPUT == 2 )); then
	
		#Clear previous .update_available file
		rm /DietPi/dietpi/.update_available &> /dev/null
		
		#Write update available version to file.
		if (( $UPDATE_AVAILABLE == 1 )); then
			echo -e "$VERSION_SERVER" > /DietPi/dietpi/.update_available
		elif (( $UPDATE_REQUIRESNEWIMAGE == 1 )); then
			echo -e "-1" > /DietPi/dietpi/.update_available
		fi

	#----------------------------------------------------------------
	#Run menus / prompts / updates
	else

		#----------------------------------------------------------------
		#Server offline
		if (( $SERVER_ONLINE == 0 )); then
			whiptail --title "Error - Server Offline" --msgbox "http://github.com is either offline, or, unable to connect \n \n No updates applied." 12 60

		#Update requires new DietPi image
		elif (( $UPDATE_REQUIRESNEWIMAGE == 1 )); then 
			#Cannot update, Image required
			whiptail --title "Unable to update image" --msgbox " Your version of DietPi is now obsolete and cannot be updated. \n Please download the latest DietPi image:\n http://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=6 \n\n - Current Version : $VERSION_CURRENT \n - Server Version  : $VERSION_SERVER \n " 18 70

			/DietPi/dietpi/dietpi-banner 0
			echo -e " Your version of DietPi is now obsolete and cannot be updated. \n Please download the latest DietPi image:\n http://fuzon.co.uk/phpbb/viewtopic.php?f=8&t=6 \n\n - Current Version : $VERSION_CURRENT \n - Server Version  : $VERSION_SERVER \n "

		#Update available
		elif (( $UPDATE_AVAILABLE == 1 )); then 
			#Forced update
			if (( $INPUT == 1 )); then
				/DietPi/dietpi/dietpi-banner 0
				echo -e "Updates have been found and are being applied, please wait.... \n \n - Current Version : $VERSION_CURRENT \n - Server Version  : $VERSION_SERVER \n "

				/DietPi/dietpi/dietpi-funtime 0

				RUN_UPDATE=1
			
			#Ask for update
			else
				Menu_Update
			fi

		#No Updates
		else
			/DietPi/dietpi/dietpi-banner 0
			echo -e " DietPi Update - No updates required \n Your DietPi installation is upto date \n \n - Current Version : $VERSION_CURRENT \n - Server Version  : $VERSION_SERVER \n "
			sleep 2
		fi

		#----------------------------------------------------------------
		#Run Update
		if (( $RUN_UPDATE == 1 )); then
		
			#Stop Services
			/DietPi/dietpi/dietpi-services stop
			
			#Run update and patcher
			Run_Update
			
			#.update file stage (only used on 1st run of dietpi-software to check/apply updates, 0 tells dietpi-software to reboot)
			echo 0 > /DietPi/dietpi/.update_stage
			
			#Remove update_available file
			rm /DietPi/dietpi/.update_available &> /dev/null
			
			#Done
			/DietPi/dietpi/dietpi-banner 0
			
			echo -e "DietPi Update Completed.\n\n - Current Version : $VERSION_CURRENT\n - Server Version  : $VERSION_SERVER\n"
			echo -e "Please reboot your system, using the command reboot"
		fi

		#----------------------------------------------------------------
		#Desktop Run, exit key prompt
		if (( $(ps aux | grep -ci -m1 '[l]xpanel') == 1 )); then
			read -p "Press any key to exit DietPi-Update..."
		fi

	fi
	
	#----------------------------------------------------------------
	#Clear temp files and folders
	rm -R "$FILEPATH_TEMP" &> /dev/null
	#----------------------------------------------------------------
	exit
	#----------------------------------------------------------------
}