#!/bin/bash
{
	#////////////////////////////////////
	# DietPi RAMDISK Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Copies dietpi files from /boot to /DietPi (RAM)
	# - /DietPi is mounted as tmpfs (RAMdisk)
	# - This allows us to vastly reduce filesystem IO across DietPi.
	# - Creates a file when active (/DietPi/.ramdisk)
	#
	# Usage:
	# - /DietPi/dietpi/func/dietpi-ramdisk 0		= Copy from /boot (disk) to /DietPi (RAM)
	# - /DietPi/dietpi/func/dietpi-ramdisk 1		= Copy from /DietPi (RAM) to /boot (disk)
	#////////////////////////////////////

	#-----------------------------------------------------------------------------------
	#. /DietPi/dietpi/func/dietpi-globals	# Not compatible until dietpi-preboot.service and overkill for the purpose of this script.
	#export LC_ALL=en_GB.UTF-8		# Not needed, as we do not parse any external command and "date" is allowed to be in user locale format.
	#cd $HOME				# "cd: HOME not set" error and not needed, since we do not create any tmp files.
	#-----------------------------------------------------------------------------------

	INPUT=0
	[[ $1 =~ ^-?[0-9]+$ ]] && INPUT=$1

	EXIT_CODE=0

	PROGRAM_NAME='DietPi-RAMdisk'
	FP_RAM='/DietPi'
	FP_DISK='/boot'

	# List of ini/config files located in /boot
	aFILE_BOOT_INI=(

		'dietpi.txt'
		'config.txt'
		'boot.ini'
		'uEnv.txt'

	)

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	# Start: Copy to RAM
	if (( $INPUT == 0 )); then

		echo "$(date) | $PROGRAM_NAME: Starting..."

		if [[ ! -f $FP_RAM'/.ramdisk' ]]; then

			# - Failsafe: Pre-create /DietPi
			mkdir -p $FP_RAM

			# - Copy array of /boot/* files to RAM (config/ini etc)
			for ((i=0; i<${#aFILE_BOOT_INI[@]}; i++))
			do

				if [[ -f $FP_DISK/${aFILE_BOOT_INI[$i]} ]]; then

					cp $FP_DISK/${aFILE_BOOT_INI[$i]} $FP_RAM/

					# - Convert line endings to Unix from DOS. Prevents various issues where users modify file on another system, then save with DOS line endings: https://github.com/Fourdee/DietPi/issues/390
					sed -i $'s/\r$//' $FP_RAM/${aFILE_BOOT_INI[$i]}

				fi

			done

			# - Copy to RAM
			cp -Rf $FP_DISK/dietpi $FP_RAM/

			# - Set DietPi user + exec
			#chown -R dietpi:dietpi $FP_RAM # Unless we can find a way to prevent file permissions being changed after root modifies them, no point in having this.
			chmod -R +x $FP_RAM

			# - Generate active flag
			> $FP_RAM/.ramdisk

			echo "$(date) | $PROGRAM_NAME: Completed"

		else

			echo "$(date) | $PROGRAM_NAME: Already running. Aborting..."

		fi

	#Stop: Copy everything back to DISK
	elif (( $INPUT == 1 )); then

		echo "$(date) | $PROGRAM_NAME: Stopping..."

		if [[ -f $FP_RAM'/.ramdisk' ]]; then

			if [[ ! -f $FP_RAM'/dietpi/boot' ]]; then # Only copy back if file exists (in-case "DietPi-RAMdisk: Already running" occured during start): https://github.com/Fourdee/DietPi/issues/719#issuecomment-276101472

				echo "$(date) | $PROGRAM_NAME: [ERROR] $FP_RAM/dietpi/boot is missing. Aborting..."
				EXIT_CODE=1

			else

				# - Remove all of DietPi files and folders from disk
				#rm -R $FP_DISK/dietpi # https://github.com/Fourdee/DietPi/issues/905#issuecomment-298241622

				# - Copy DietPi to disk with files from RAM
				cp -Rf $FP_RAM/* /boot/

				# - Remove active flag
				rm $FP_RAM/.ramdisk

				# - Remove update available status (refreshed during reboot)
				rm $FP_DISK/dietpi/.update_available &> /dev/null

				# - Sync changes to disk NOW
				sync

				echo "$(date) | $PROGRAM_NAME: Completed"

			fi

		else

			echo "$(date) | $PROGRAM_NAME: Is not currently running. Aborting..."

		fi

	else

		echo "$(date) | $PROGRAM_NAME: Unknown argument: $INPUT. Aborting..."
		EXIT_CODE=1

	fi

	#-----------------------------------------------------------------------------------
	#delete[]
	unset aFILE_BOOT_INI
	#-----------------------------------------------------------------------------------
	exit $EXIT_CODE
	#-----------------------------------------------------------------------------------
}
