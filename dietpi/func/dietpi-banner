#!/bin/bash

	#////////////////////////////////////
	# DietPi Banner Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/func/dietpi-banner
	# - Checks /DietPi/dietpi/.update_available
	#
	# Usage:
	# - dietpi-banner 0 = top section only
	# - dietpi-banner 1 = top section and credits + clear
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	G_PROGRAM_NAME='DietPi-Banner'
	G_INIT
	# Import DietPi-Globals --------------------------------------------------------------

	disable_error=1 G_CHECK_VALIDINT "$1" && INPUT=$1 || INPUT=0

	#/////////////////////////////////////////////////////////////////////////////////////
	# Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	DIETPI_VERSION="$G_DIETPI_VERSION_CORE.$G_DIETPI_VERSION_SUB.$G_DIETPI_VERSION_RC"
	[[ $G_GITBRANCH != 'master' ]] && DIETPI_VERSION+=" ($G_GITBRANCH)"

	FP_SAVEFILE='/DietPi/dietpi/.dietpi-banner'

	GREEN_LINE=' \e[38;5;154m─────────────────────────────────────────────────────\e[0m'

	aOBTAIN=(

		'sed -n 3p /DietPi/dietpi/.network' 								#0: 'Active IP adapter'
		'sed -n 4p /DietPi/dietpi/.network'									#1: 'LAN IP address'
		'wget -q -O- --timeout=2 --tries=1 https://dietpi.com/myip.php' 	#2: 'WAN IP address' # Move this to /DietPi/dietpi/.network?
		'hostname'															#3: Hostname
		'domainname'														#4: Domain name

	)

	aENABLED=()
	aDESCRIPTION=(

		'Device model'
		'CPU temp'
		'LAN IP'
		'WAN IP'
		'Freespace (RootFS)'
		'Freespace (DietPi userdata)'
		'Display DietPi useful commands?'
		'Hostname'
		'Domain name'

	)

	Update_Ip_Address(){

		/DietPi/dietpi/func/obtain_network_details

	}

	UPDATE_AVAILABLE=0
	UPDATE_AVAILABLE_VERSION='' # -1 = image required, other value = latest version
	Obtain_Update_Available(){

		# Update Available?
		if [[ -f '/DietPi/dietpi/.update_available' ]]; then

			UPDATE_AVAILABLE=1
			UPDATE_AVAILABLE_VERSION=$(</DietPi/dietpi/.update_available)

		fi

	}

	Load(){

		for ((i=0; i<${#aDESCRIPTION[@]}; i++))
		do

			aENABLED[$i]=0

		done

		if [[ -f $FP_SAVEFILE ]]; then

			. $FP_SAVEFILE

		else

			#Set Default options
			aENABLED[0]=1
			aENABLED[1]=1
			aENABLED[2]=1
			aENABLED[6]=1

		fi

	}

	Save(){

		[[ -f $FP_SAVEFILE ]] && rm $FP_SAVEFILE

		for ((i=0; i<${#aENABLED[@]}; i++))
		do

			echo -e "aENABLED[$i]=${aENABLED[$i]}" >> $FP_SAVEFILE

		done

	}

	Menu_Main(){

		G_WHIP_CHECKLIST_ARRAY=()

		for ((i=0; i<${#aDESCRIPTION[@]}; i++))
		do

			local state='off'
			(( ${aENABLED[$i]} == 1 )) && state='on'
			G_WHIP_CHECKLIST_ARRAY+=($i "${aDESCRIPTION[$i]}" $state)

		done

		if G_WHIP_CHECKLIST "Please select options to enable in $G_PROGRAM_NAME display:"; then

			for ((i=0; i<${#aDESCRIPTION[@]}; i++))
			do

				aENABLED[$i]=0

			done

			for i in ${G_WHIP_RETURNED_VALUE[@]}
			do

				aENABLED[$i]=1

			done

			Save

		fi

	}

	Print_Header(){

		# Update Available?
		Obtain_Update_Available
		local text_update_available_date=''
		if (( $UPDATE_AVAILABLE )); then

			if [[ $UPDATE_AVAILABLE_VERSION == '-1' ]]; then

				text_update_available_date='\e[1;33mImage available\e[0m'

			else

				text_update_available_date='\e[1;33mUpdate available\e[0m'

			fi

		else

			text_update_available_date=$(date +"%R - %a %x")

		fi

		echo -e "\
$GREEN_LINE
 \e[1mDietPi v$DIETPI_VERSION\e[0m \e[90m| $text_update_available_date\e[0m
$GREEN_LINE"

	}

	Print_Banner(){

		local green_bullet='\e[38;5;154m -\e[0m'

		# - Re-obtain network details if not already done.
		[[ ! $(${aOBTAIN[1]}) ]] && Update_Ip_Address

		local index=0
		index=0; (( ${aENABLED[$index]} )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[$index]} \e[90m| $G_HW_MODEL_DESCRIPTION\e[0m"
		index=1; (( ${aENABLED[$index]} )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[$index]} \e[90m| $(print_full_info=1 G_OBTAIN_CPU_TEMP)\e[0m"
		index=7; (( ${aENABLED[$index]} )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[$index]} \e[90m| $(${aOBTAIN[3]})\e[0m"
		index=8; (( ${aENABLED[$index]} )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[$index]} \e[90m| $(${aOBTAIN[4]})\e[0m"
		index=2; (( ${aENABLED[$index]} )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[$index]} \e[90m| $(${aOBTAIN[1]}) ($(${aOBTAIN[0]}))\e[0m"
		index=3; (( ${aENABLED[$index]} )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[$index]} \e[90m| $(${aOBTAIN[2]})\e[0m"

		index=4; (( ${aENABLED[$index]} )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[$index]} \e[90m| $(info_autoscale=1 G_CHECK_FREESPACE /)\e[0m"
		index=5; (( ${aENABLED[$index]} )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[$index]} \e[90m| $(info_autoscale=1 G_CHECK_FREESPACE /mnt/dietpi_userdata)\e[0m"

		echo -e "$GREEN_LINE\n"

		Credits_Print
		index=6; (( ${aENABLED[$index]} )) && Useful_Commands_Print

	}

	Credits_Print(){

		echo -e '\e[90m DietPi Team     : MichaIng (lead), Daniel Knight (founder)\e[0m'

		local fp_prep_info='/DietPi/dietpi/.prep_info'
		if [[ -f $fp_prep_info ]]; then

			local image_creator=$(sed -n 1p $fp_prep_info)
			local preimage_name=$(sed -n 2p $fp_prep_info)
			[[ $image_creator == '0' ]] && image_creator='DietPi Core Team'

			echo -e "\e[90m Image           : $image_creator (pre-image: $preimage_name)\e[0m"

		fi

		echo -e '\e[90m Web             : https://DietPi.com | https://twitter.com/dietpi_
 Patreon Legends : PINE64 community
 Donate          : https://DietPi.com/#donate'

		local image_additional_credits=$(sed -n 8p /DietPi/dietpi/.hw_model)
		[[ $image_additional_credits ]] && echo -e "\n\ Device image possible thanks to: $image_additional_credits"

		echo -e ' DietPi Hosting  : Powered by https://MyVirtualServer.com\e[0m'

		# Update available?
		if (( $UPDATE_AVAILABLE )); then

			if [[ $UPDATE_AVAILABLE_VERSION = '-1' ]]; then

				echo -e '\n\e[1;31m Updated DietPi image is available, please download it:\e[0m\n https://dietpi.com/download\n'

			else

				echo -e "\e[1m dietpi-update\e[0m    = \e[1;31mRun now to update DietPi (from v$DIETPI_VERSION to v$UPDATE_AVAILABLE_VERSION).\e[0m"

			fi

		fi

		echo ''

	}

	Useful_Commands_Print(){

		echo -e '\e[1m dietpi-launcher\e[0m  = All the DietPi programs in one place.
\e[1m dietpi-config\e[0m    = Feature rich configuration tool for your device.
\e[1m dietpi-software\e[0m  = Select optimized software for installation.
\e[1m htop\e[0m             = Resource monitor.
\e[1m cpu\e[0m              = Shows CPU information and stats.\n'

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	if (( $INPUT == 0 )); then

		Print_Header

	elif (( $INPUT == 1 )); then

		printf '\ec' # clear current terminal screen
		Load
		Print_Header
		Print_Banner

	elif (( $INPUT == 2 )); then

		Load
		Menu_Main

		printf '\ec' # clear current terminal screen
		Print_Header
		Print_Banner

	fi

	#-----------------------------------------------------------------------------------
	exit 0
	#-----------------------------------------------------------------------------------
