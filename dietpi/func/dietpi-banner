#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Banner Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - filename /DietPi/dietpi/func/dietpi-banner
	# - Checks /DietPi/dietpi/.update_available
	#
	# Usage:
	# - dietpi-banner 0 = top section only
	# - dietpi-banner 1 = top section and credits + clear
	#////////////////////////////////////

	# Import DietPi-Globals --------------------------------------------------------------
	# Do in main menu and on demand
	# Import DietPi-Globals --------------------------------------------------------------

	[[ $1 == [012] ]] && INPUT=$1 || INPUT=0

	#/////////////////////////////////////////////////////////////////////////////////////
	# Globals
	#/////////////////////////////////////////////////////////////////////////////////////
	FP_SAVEFILE='/DietPi/dietpi/.dietpi-banner'

	aDESCRIPTION=(

		'Device model'
		'Uptime'
		'CPU temp'
		'Hostname'
		'Domain name'
		'LAN IP'
		'WAN IP'
		'Freespace (RootFS)'
		'Freespace (DietPi userdata)'
		'Weather (wttr.in)'
		'Display DietPi useful commands?'

	)
	# Set defaults
	aENABLED=(1 0 1 0 0 1 0 0 0 0 1)

	GREEN_LINE=' \e[38;5;154m─────────────────────────────────────────────────────\e[0m'

	. /DietPi/dietpi/.version
	DIETPI_VERSION="$G_DIETPI_VERSION_CORE.$G_DIETPI_VERSION_SUB.$G_DIETPI_VERSION_RC"
	[[ $G_GITBRANCH != 'master' ]] && DIETPI_VERSION+=" ($G_GITBRANCH)"

	# Update available?
	UPDATE_AVAILABLE=0
	UPDATE_AVAILABLE_VERSION='' # -1 = image required, other value = latest version
	Obtain_Update_Available(){

		if [[ -f '/DietPi/dietpi/.update_available' ]]; then

			UPDATE_AVAILABLE=1
			UPDATE_AVAILABLE_VERSION=$(</DietPi/dietpi/.update_available)

		fi

	}

	Load(){	[[ -f $FP_SAVEFILE ]] && . $FP_SAVEFILE; }

	Save(){

		> $FP_SAVEFILE

		for i in ${!aDESCRIPTION[@]}
		do

			echo "aENABLED[$i]=${aENABLED[$i]}" >> $FP_SAVEFILE

		done

	}

	Print_Header(){

		# Update Available?
		Obtain_Update_Available
		local text_update_available_date=''
		if (( $UPDATE_AVAILABLE )); then

			if [[ $UPDATE_AVAILABLE_VERSION == '-1' ]]; then

				text_update_available_date='\e[1;33mImage available\e[0m'

			else

				text_update_available_date='\e[1;33mUpdate available\e[0m'

			fi

		else

			text_update_available_date=$(date +"%R - %a %x")

		fi

		echo -e "$GREEN_LINE
 \e[1mDietPi v$DIETPI_VERSION\e[0m \e[90m| $text_update_available_date\e[0m
$GREEN_LINE"

	}

	Print_Credits(){

		echo -e ' \e[90mDietPi Team     : MichaIng (lead), Daniel Knight (founder)'

		[[ -f /DietPi/dietpi/.prep_info ]] && mawk 'NR==1 {sub(/^0$/,"DietPi Core Team");a=$0} NR==2 {print " Image           : "a" (pre-image: "$0")"}' /DietPi/dietpi/.prep_info

		echo ' Web             : https://DietPi.com | https://twitter.com/dietpi_
 Patreon Legends : PINE64 community
 Donate          : https://DietPi.com/#donate'

		local image_additional_credits=$(sed -n 8p /DietPi/dietpi/.hw_model)
		[[ $image_additional_credits ]] && echo " Device image possible thanks to: $image_additional_credits"

		echo -e ' DietPi Hosting  : Powered by https://MyVirtualServer.com\e[0m\n'

		# Update available?
		if (( $UPDATE_AVAILABLE )); then

			if [[ $UPDATE_AVAILABLE_VERSION = '-1' ]]; then

				echo -e ' \e[1;31mUpdated DietPi image is available, please download it:\e[0m\n https://dietpi.com/#download\n'

			else

				echo -e " \e[1mdietpi-update\e[0m    = \e[1;31mRun now to update DietPi (from v$DIETPI_VERSION to v$UPDATE_AVAILABLE_VERSION).\e[0m"

			fi

		fi

	}

	Print_Useful_Commands(){

		echo -e '\e[1m dietpi-launcher\e[0m  = All the DietPi programs in one place.
 \e[1mdietpi-config\e[0m    = Feature rich configuration tool for your device.
 \e[1mdietpi-software\e[0m  = Select optimized software for installation.
 \e[1mhtop\e[0m             = Resource monitor.
 \e[1mcpu\e[0m              = Shows CPU information and stats.\n'

	}

	Print_Banner(){

		local green_bullet=' \e[38;5;154m-\e[0m'

		# - Source DietPi-Globals if CPU temp chosen
		[[ ${aENABLED[2]} != 1 || $G_PROGRAM_NAME ]] || . /DietPi/dietpi/func/dietpi-globals

		# - Re-obtain network details if missing and LAN IP chosen
		[[ ${aENABLED[5]} != 1 || -f /DietPi/dietpi/.network ]] || /DietPi/dietpi/func/obtain_network_details

		printf '\ec' # clear current terminal screen
		Print_Header

		(( ${aENABLED[0]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[0]} \e[90m| $(mawk 'NR==2 {print $0}' /DietPi/dietpi/.hw_model 2>&1)\e[0m"				#0: Device model
		(( ${aENABLED[1]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[1]} \e[90m| $(uptime -p 2>&1)\e[0m"									#1: Uptime
		(( ${aENABLED[2]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[2]} \e[90m| $(print_full_info=1 G_OBTAIN_CPU_TEMP 2>&1)\e[0m"						#2: CPU temp
		(( ${aENABLED[3]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[3]} \e[90m| $(hostname 2>&1)\e[0m"									#3: Hostname
		(( ${aENABLED[4]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[4]} \e[90m| $(domainname 2>&1)\e[0m"									#4: Domain name
		(( ${aENABLED[5]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[5]} \e[90m| $(mawk 'NR==3 {dev=$0} NR==4 {print $0" ("dev")"}' /DietPi/dietpi/.network 2>&1)\e[0m"	#5: LAN IP (adapter)
		(( ${aENABLED[6]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[6]} \e[90m| $(curl -sLm 2 https://dietpi.com/myip.php 2>&1)\e[0m"					#6: WAN IP # Move this to /DietPi/dietpi/.network?
		(( ${aENABLED[7]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[7]} \e[90m| $(df -h --output=avail / | mawk 'NR==2 {print $1}' 2>&1)\e[0m"				#7: Freespace (RootFS)
		(( ${aENABLED[8]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[8]} \e[90m| $(df -h --output=avail /mnt/dietpi_userdata | mawk 'NR==2 {print $1}' 2>&1)\e[0m"		#8: Freespace (DietPi userdata)
		(( ${aENABLED[9]} == 1 )) && echo -e "$green_bullet \e[1m${aDESCRIPTION[9]} \e[90m| $(curl -sLm 2 https://wttr.in/?format=4 2>&1)\e[0m"						#9: Weather
		echo -e "$GREEN_LINE\n"

		Print_Credits
		(( ${aENABLED[10]} == 1 )) && Print_Useful_Commands

	}

	Menu_Main(){

		. /DietPi/dietpi/func/dietpi-globals
		G_PROGRAM_NAME='DietPi-Banner'
		G_INIT

		G_WHIP_CHECKLIST_ARRAY=()

		for i in ${!aDESCRIPTION[@]}
		do

			local state='off'
			(( ${aENABLED[$i]=0} == 1 )) && state='on'
			G_WHIP_CHECKLIST_ARRAY+=($i "${aDESCRIPTION[$i]}" $state)

		done

		if G_WHIP_CHECKLIST "Please select options to enable in $G_PROGRAM_NAME display:"; then

			for i in ${!aDESCRIPTION[@]}
			do

				aENABLED[$i]=0

			done

			for i in ${G_WHIP_RETURNED_VALUE[@]}
			do

				aENABLED[$i]=1

			done

			Save

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	if (( $INPUT == 0 )); then

		Print_Header

	elif (( $INPUT == 1 )); then

		Load
		Print_Banner

	elif (( $INPUT == 2 )); then

		Load
		Menu_Main
		Print_Banner

	fi

	#-----------------------------------------------------------------------------------
	exit 0
	#-----------------------------------------------------------------------------------
}
