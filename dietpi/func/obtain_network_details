#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function:
	# - obtain_network_details
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Attempts to find the 1st index numbers for eth[0-9] and wlan[0-9] devices
	# - Obtains the active network adapter (eth, then wlan).
	# - Saves the above data to $FP_NETFILE for use systemwide
	#
	# $FP_NETFILE line1
	# - eth index
	# $FP_NETFILE line2
	# - wlan index
	# $FP_NETFILE line3
	# - Active adapter name (eg: eth0)
	# $FP_NETFILE line4
	# - IP address
	#////////////////////////////////////

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	export G_PROGRAM_NAME='DietPi-Obtain_network_details'
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	#/////////////////////////////////////////////////////////////////////////////////////
	# Global
	#/////////////////////////////////////////////////////////////////////////////////////

	FP_TEMP='/tmp/dietpi-ip_list'
	FP_NETFILE='/DietPi/dietpi/.network'

	ETH_INDEX=0
	WLAN_INDEX=0
	ACTIVE_DEVICE='NULL'
	IP_ADDRESS='Use dietpi-config to setup a connection'

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#grab content of ip l
	ip -o l > $FP_TEMP

	# Find active eth device
	if tmp=$(grep -m1 ' eth[0-9]: .* state UP ' $FP_TEMP); then

		tmp=${tmp#* eth}
		ETH_INDEX=${tmp%%: *}

		ACTIVE_DEVICE="eth$ETH_INDEX"
		IP_ADDRESS=$(ip -o a s $ACTIVE_DEVICE)
		IP_ADDRESS=${IP_ADDRESS#*inet* }
		IP_ADDRESS=${IP_ADDRESS%%/*}

	# Else find available eth device
	elif tmp=$(grep -m1 ' eth[0-9]: ' $FP_TEMP); then

		tmp=${tmp#* eth}
		ETH_INDEX=${tmp%%: *}

	fi

	# Find active wlan device
	if tmp=$(grep -m1 ' wlan[0-9]: .* state UP ' $FP_TEMP); then

		tmp=${tmp#* wlan}
		WLAN_INDEX=${tmp%%: *}

		# Eth has priority
		if [[ $ACTIVE_DEVICE == 'NULL' ]]; then

			ACTIVE_DEVICE="wlan$WLAN_INDEX"
			IP_ADDRESS=$(ip -o a s $ACTIVE_DEVICE)
			IP_ADDRESS=${IP_ADDRESS#*inet* }
			IP_ADDRESS=${IP_ADDRESS%%/*}

		fi

	# Else find available wlan device
	elif tmp=$(grep -m1 ' wlan[0-9]: ' $FP_TEMP); then

		tmp=${tmp#* wlan}
		WLAN_INDEX=${tmp%%: *}

	fi

	#-----------------------------------------------------------------------------------
	#Output to file
	cat << _EOF_ > $FP_NETFILE
$ETH_INDEX
$WLAN_INDEX
$ACTIVE_DEVICE
$IP_ADDRESS
_EOF_
	# Assure that non-root user can call this script:
	chmod 666 $FP_NETFILE &> /dev/null

	#Clean up tmp files used
	rm $FP_TEMP
	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------

}
