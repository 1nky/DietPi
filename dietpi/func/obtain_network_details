#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function:
	# - obtain_network_details
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Attempts to find the 1st index numbers for eth[0-9] and wlan[0-9] devices
	# - Obtains the active network adapter (eth, then wlan).
	# - Saves the above data to $FP_NETFILE for use systemwide
	#
	# $FP_NETFILE line1
	# - eth index
	# $FP_NETFILE line2
	# - wlan index
	# $FP_NETFILE line3
	# - Active adapter name (eg: eth9)
	# $FP_NETFILE line4
	# - IP Address
	#////////////////////////////////////

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	export G_PROGRAM_NAME='DietPi-Obtain_network_details'
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	#/////////////////////////////////////////////////////////////////////////////////////
	# Global
	#/////////////////////////////////////////////////////////////////////////////////////

	MAX_DEVICE=10
	FP_TEMP='/tmp/find_network_index'
	FP_NETFILE='/DietPi/dietpi/.network'

	ACTIVE_DEVICE='NULL'
	DEVICE_FOUND=0
	ETH_INDEX=0
	WLAN_INDEX=0
	IP_ADDRESS='Use dietpi-config to setup a connection'

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	#grab content of ifconfig -a
	ifconfig -a > "$FP_TEMP"

	#clear previous
	rm "$FP_NETFILE" &> /dev/null

	#find eth[0-9]
	for ((i=0; i<$MAX_DEVICE; i++))
	do

		if (( $(grep -ci -m1 "eth$i" "$FP_TEMP") )); then

			ETH_INDEX=$i
			DEVICE_FOUND=1
			break

		fi

	done

	#find wlan[0-9]
	for ((i=0; i<$MAX_DEVICE; i++))
	do

		if (( $(grep -ci -m1 "wlan$i" "$FP_TEMP") )); then

			WLAN_INDEX=$i
			DEVICE_FOUND=1
			break

		fi

	done

	#Obtain device/ip info
	if (( $DEVICE_FOUND )); then

		#Find active network device
		# - eth takes priority, if both eth wlan are active.
		ip r > "$FP_TEMP"
		if (( $(grep -ci -m1 "eth$ETH_INDEX" "$FP_TEMP") )); then

			ACTIVE_DEVICE="eth$ETH_INDEX"

		elif (( $(grep -ci -m1 "wlan$WLAN_INDEX" "$FP_TEMP") )); then

			ACTIVE_DEVICE="wlan$WLAN_INDEX"

		fi

		#IP address
		IP_ADDRESS=$(ifconfig "$ACTIVE_DEVICE" 2>&1 | grep -m1 'inet' | awk '{ print $2 }' | cut -d: -f2)

	fi

	#-----------------------------------------------------------------------------------
	#Output to file
	cat << _EOF_ > "$FP_NETFILE"
$ETH_INDEX
$WLAN_INDEX
$ACTIVE_DEVICE
$IP_ADDRESS
_EOF_

	#Clean up tmp files used
	rm "$FP_TEMP"
	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------

}
