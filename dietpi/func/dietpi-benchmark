#!/bin/bash
{
	#////////////////////////////////////
	# DietPi Function:
	# - benchmark
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# /DietPi/dietpi/func/dietpi-benchmark 0 $FP		= Benchmark $FP filesystem read/write. result file=/tmp/.dietpi-benchmark_result
	#
	#////////////////////////////////////

	#Import DietPi-Globals ---------------------------------------------------------------
	. /DietPi/dietpi/func/dietpi-globals
	export G_PROGRAM_NAME='DietPi-Benchmark'
	G_INIT
	#Import DietPi-Globals ---------------------------------------------------------------

	INPUT=$1

	#/////////////////////////////////////////////////////////////////////////////////////
	# Global
	#/////////////////////////////////////////////////////////////////////////////////////

	Filesystem_Benchmark(){

		local benchmark_file_name='benchmark.file'
		local fp_benchmark_file="$1"
		local read_speed=0
		local write_speed=0
		local benchmark_filesize=0
		local min_benchmark_size=10
		local max_benchmark_size=$(( $(G_CHECK_FREESPACE $fp_benchmark_file) - 100 ))
		if (( $max_benchmark_size > 1000 )); then

			max_benchmark_size=1000

		fi

		if [[ $fp_benchmark_file != *'/' ]]; then

			fp_benchmark_file+='/'

		fi
		fp_benchmark_file+=$benchmark_file_name

		printf '\ec' # clear current terminal screen

		#Obtain user benchmark size.
		G_WHIP_DEFAULT_ITEM=$min_benchmark_size
		G_WHIP_INPUTBOX "Please enter a filesize test value (MB). A value of 100 is recommended.\n- Minimum value: $min_benchmark_size\n- Maximum possible value: $max_benchmark_size"
		if (( $? == 0 )); then

			benchmark_filesize=$G_WHIP_RETURNED_VALUE

			#Check for valid interger/entry
			if G_CHECK_VALIDINT $benchmark_filesize && (( $benchmark_filesize > 0 )); then

				if (( $benchmark_filesize > $max_benchmark_size )); then

					G_WHIP_MSG "Error: Above max limit and/or insufficient space to run filesystem benchmark"
					benchmark_filesize=-1

				#Value too small
				elif (( $benchmark_filesize < $min_benchmark_size )); then

					G_WHIP_MSG "Error: The requested benchmark size of $benchmark_filesize MB is too small."
					benchmark_filesize=-1

				fi

			fi

		fi

		#Run benchmark
		if (( $benchmark_filesize > 0 )); then

			G_DIETPI-NOTIFY 2 "Performing Read/Write benchmark on $fp_benchmark_file, please wait..."

			G_DIETPI-NOTIFY 2 "Testing Seq Write Speed ($benchmark_filesize MB)"

			sleep 1

			write_speed=$(dd bs=4K count=$(( $benchmark_filesize * 1024 / 4 )) if=/dev/zero of=$fp_benchmark_file conv=fdatasync 2>&1 | grep 'MB' | awk '{print $(NF - 1), $NF}')

			# - Clear cache
			sync
			echo 3 > /proc/sys/vm/drop_caches
			G_DIETPI-NOTIFY 2 "Testing Seq Read Speed ($benchmark_filesize MB)"

			sleep 1

			read_speed=$(dd bs=4K count=$(( $benchmark_filesize * 1024 / 4 )) if=$fp_benchmark_file of=/dev/zero conv=fdatasync 2>&1 | grep 'MB' | awk '{print $(NF - 1), $NF}')

			cat << _EOF_ > /tmp/.dietpi-benchmark_result
$read_speed
$write_speed
_EOF_

			G_WHIP_MSG "Filesystem Benchmark Results:\n\n
 - Filepath  = $fp_benchmark_file
 - Test size = ${benchmark_filesize}MB
 - READ      = $read_speed
 - WRITE     = $write_speed"

			rm $fp_benchmark_file &> /dev/null

		fi

	}

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////
	if (( $INPUT == 0 )); then

		Filesystem_Benchmark "$2"

	fi
	#-----------------------------------------------------------------------------------
	exit
	#-----------------------------------------------------------------------------------

}
