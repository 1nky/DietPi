#!/bin/bash
{
	#////////////////////////////////////
	# DietPi-Globals
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - Allows export of shared DietPi global variables into current bash session, and, other scripts
	#
	# Excluded scripts, which do NOT load these globals
	# - dietpi-ramlog
	# - dietpi-ramdisk
	# - PREP_SYSTEM_FOR_DIETPI.sh
	#
	# Notes:
	# - . /DietPi/dietpi/func/dietpi-globals > $HOME/.bashrc
	# - . /DietPi/dietpi/func/dietpi-globals > for each script that uses these globals
	#////////////////////////////////////

	#Non-configured DietPi system, simply exit.
	if [ ! -f /DietPi/dietpi/func/dietpi-globals ]; then

		exit 0

	fi

	#-----------------------------------------------------------------------------------
	# Core var's, functions, environment. Used at start of all scripts.
	#-----------------------------------------------------------------------------------
	#Prevent incorrect parsing with non-english locales.
	LANG=en_GB.UTF-8

	#Ensure we are in users home dir: https://github.com/Fourdee/DietPi/issues/905#issuecomment-298223705
	cd "$HOME"

	#-----------------------------------------------------------------------------------
	# DietPi-Notify
	#-----------------------------------------------------------------------------------
	# $1:
	#	-1=autodetect_fail_ok
	#	- $2 = EXIT_CODE
	#	0=OK
	#	- $2 = text
	#	1=failed
	#	- $2 = text
	#	2=info
	#	- $2 = text
	#	3=DietPi banner style
	#	- $2 = txt program name
	#	- $3 = txt mode
	dietpi-notify(){

		local ainput_string=("$@")

		#header_line="\e[38;5;154m─────────────────────────────────────────────────────\e[0m"
		local header_line="\e[90m─────────────────────────────────────────────────────\e[0m"

		local status_text_ok="\e[32mOk\e[0m"
		local status_text_failed="\e[31mFailed:\e[0m"

		local bracket_string_l="\e[90m[\e[0m"
		local bracket_string_r="\e[90m]\e[0m"

		#Funcs

		Print_Ok(){

			echo -ne " $bracket_string_l\e[32mOk\e[0m$bracket_string_r"

		}

		Print_Failed(){

			echo -ne " $bracket_string_l\e[31mFailed\e[0m$bracket_string_r"

		}

		# - Print all input string on same line
		# - $1 = start printing from word number $1
		Print_Input_String(){

			local i=0
			for (( i=$1;i<${#ainput_string[@]} ;i++))
			do
				echo -ne " ${ainput_string[$i]}"
			done

			echo -e ""

			# echo -e "SIZE = ${#ainput_string}"

			# ainput_string="$@"
			# for (( i=$1;i<${#ainput_string} ;i++))
			# do
				# echo -ne "${ainput_string:$i:1}"
				# sleep 0.02
			# done

		}

		#--------------------------------------------------------------------------------------
		# Main Loop
		#--------------------------------------------------------------------------------------
		#Exit code, print OK or Failed
		#$2 = exit code
		# - Use this at end of DietPi scripts, EG: dietpi-notify -1 ${EXIT_CODE:=0}
		if (( $1 == -1 )); then

			if [ "$2" = "0" ]; then

				ainput_string+=("Completed")
				Print_Ok
				Print_Input_String 2
				echo -e ""

			else

				ainput_string+=("An issue has occured")
				Print_Failed
				Print_Input_String 2
				echo -e ""

			fi

		#--------------------------------------------------------------------------------------
		#Status Ok
		#$@ = txt desc
		elif (( $1 == 0 )); then

			Print_Ok
			Print_Input_String 1

		#Status failed
		#$@ = txt desc
		elif (( $1 == 1 )); then

			Print_Failed
			Print_Input_String 1

		#Status Info
		#$@ = txt desc
		elif (( $1 == 2 )); then

			echo -ne " $bracket_string_l\e[0mInfo\e[0m$bracket_string_r"
			echo -ne "\e[90m"
			Print_Input_String 1
			echo -ne "\e[0m"

		#DietPi banner style
		#$2 = txt program name
		#$3 = txt mode
		elif (( $1 == 3 )); then

			echo -e "\n \e[38;5;154m$2\e[0m"
			echo -e "$header_line"
			echo -e " \e[90mMode:\e[0m$(Print_Input_String 2)"
			echo -e " \e[90mPlease wait...\e[0m\n"

		fi
		#-----------------------------------------------------------------------------------
		unset ainput_string
		#-----------------------------------------------------------------------------------

	}

	CHECK_ROOT_USER(){

		if (( $UID != 0 )); then

			dietpi-notify 1 'Error: Root privileges required. Please run the command with "sudo"\n'
			exit 1

		fi

	}

	CHECK_ROOTFS_RW(){

		#RootFS RW check
		/DietPi/dietpi/dietpi-drive_manager 3
		if (( $? != 0 )); then

			dietpi-notify 1 'Error: RootFS is currently Read Only, unable to continue.\n'
			exit 1

		fi

	}

	#-----------------------------------------------------------------------------------
	# DietPi First-Run Stage
	#-----------------------------------------------------------------------------------
	# -1 = first boot / 0 = run dietpi-software at login / 1 = completed
	DIETPI_INSTALL_STAGE=$(cat /DietPi/dietpi/.install_stage)

	#-----------------------------------------------------------------------------------
	# Hardware Details
	#-----------------------------------------------------------------------------------
	HW_MODEL=0
	HW_MODEL_DESCRIPTION='NULL'
	HW_ARCH=0
	HW_CPU_CORES=1
	HW_CPUID=0

	DISTRO=0
	DISTRO_NAME='NULL'

	# - Update
	#	NB: dietpi-boot service launches dietpi-obtain_hw_model to create the following file
	if [ -f /DietPi/dietpi/.hw_model ]; then

		HW_MODEL=$(sed -n 1p /DietPi/dietpi/.hw_model)
		HW_MODEL_DESCRIPTION=$(sed -n 2p /DietPi/dietpi/.hw_model)
		HW_ARCH=$(sed -n 6p /DietPi/dietpi/.hw_model)
		HW_CPU_CORES=$(nproc --all)
		HW_CPUID=$(sed -n 9p /DietPi/dietpi/.hw_model)

		DISTRO=$(sed -n 3p /DietPi/dietpi/.hw_model)
		DISTRO_NAME='jessie'
		if (( $DISTRO == 4 )); then

			DISTRO_NAME='stretch'

		elif (( $DISTRO == 5 )); then

			DISTRO_NAME='buster'

		fi

	fi

	#-----------------------------------------------------------------------------------
	# DietPi specific directories
	#-----------------------------------------------------------------------------------
	FP_DIETPI_USERDATA='/mnt/dietpi_userdata'
	#FP_DIETPI_VAR_LIB='/var/lib/dietpi'
	#FP_DIETPI_VAR_TMP='/var/tmp/dietpi'

	#-----------------------------------------------------------------------------------
	# APT
	#-----------------------------------------------------------------------------------
	FP_LOG_APT='/var/tmp/dietpi/logs/dietpi-software_apt.log'
	EXITCODE_APT=0 #only way I found of exporting the exit code, once the command is run.

	#Support for apt-fast: https://github.com/Fourdee/DietPi/issues/698
	# APT_BINARY='apt-get'
	# if [ -f /usr/bin/apt-fast ]; then

		# APT_BINARY='apt-fast'

	# fi

	AGI(){

		local string="$@"
		local force_options=''

		if (( $DISTRO >= 4 )); then

			force_options='--allow-downgrades --allow-remove-essential --allow-change-held-packages --allow-unauthenticated'

		else

			force_options='--force-yes'

		fi

		#-qq can add a slight period of appearing nothing is happening, lets inform user
		dietpi-notify 2 "APT installation for: $string"
		dietpi-notify 2 "APT is processing, please wait...\n"
		DEBIAN_FRONTEND=noninteractive apt-get install -y -qq $force_options $string 2>&1 | tee "$FP_LOG_APT"
		EXITCODE_APT=${PIPESTATUS[0]}

	}

	#apt-get purge
	AGP(){

		local string="$@"
		local options=''
		if (( $DISTRO >= 4 )); then

			options+=' --allow-change-held-packages'

		fi

		dietpi-notify 2 "APT removal for: $string"
		DEBIAN_FRONTEND=noninteractive apt-get purge -y $string $options
		EXITCODE_APT=${PIPESTATUS[0]}

	}

	#apt-get autoremove
	AGA(){

		dietpi-notify 2 "APT autoremove + purge"
		DEBIAN_FRONTEND=noninteractive apt-get autoremove --purge -y
		EXITCODE_APT=${PIPESTATUS[0]}

	}

	#apt-get install -f
	AGF(){

		dietpi-notify 2 "APT fix"
		DEBIAN_FRONTEND=noninteractive apt-get install -f -y 2>&1 | tee "$FP_LOG_APT"
		EXITCODE_APT=${PIPESTATUS[0]}

	}

	#apt-get update
	AGUP(){

		dietpi-notify 2 "APT update"
		DEBIAN_FRONTEND=noninteractive apt-get update 2>&1 | tee "$FP_LOG_APT"
		EXITCODE_APT=${PIPESTATUS[0]}

	}

	#apt-get upgrade
	AGUG(){

		dietpi-notify 2 "APT upgrade"
		DEBIAN_FRONTEND=noninteractive apt-get upgrade -y 2>&1 | tee "$FP_LOG_APT"
		EXITCODE_APT=${PIPESTATUS[0]}

	}

	#apt-get dist-upgrade
	AGDUG(){

		local string="$@"
		local force_options=''

		if (( $DISTRO >= 4 )); then

			force_options='--allow-downgrades --allow-remove-essential --allow-change-held-packages --allow-unauthenticated'

		else

			force_options='--force-yes'

		fi

		dietpi-notify 2 "APT dist-upgrade"
		DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y 2>&1 | tee "$FP_LOG_APT"
		EXITCODE_APT=${PIPESTATUS[0]}

	}

	#-----------------------------------------------------------------------------------
	#dietpi-notify 0 'DietPi-Globals\n'
	#-----------------------------------------------------------------------------------
}
