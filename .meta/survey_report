#!/bin/bash

SURVEY_COUNT_TOTAL=0
SURVEY_COUNT_EMPTY=0

aSURVEY_VERSION=()
aSURVEY_SENTCOUNT=()
declare -A aDIETPI_VERSION
declare -A aDEVICE_NAME
declare -A aCPU_ARCH
aCPU_COUNT=()
declare -A aDISTRO_VERSION
declare -A aAUTOSTART_OPTION
declare -A aSOFTWARE
# v6.10 additions
aAUTO_SETUP_AUTOMATED=(
	[0]=0
	[1]=0
)
declare -A aNETWORK_INTERFACE

# Pre v6.10: Convert cpu arch index to name array
aCPU_NAME=(
	[1]='armv6l'
	[2]='armv7l'
	[3]='aarch64'
	[10]='x86_64'
)

# Convert autostart index to name array
aAUTOSTART_NAME=(
	[0]='Console manual login'
	[1]='Kodi'
	[2]='Desktop auto login'
	[3]='RetroPie'
	[4]='OpenTyrian'
	[5]='DietPi-Cloudshell'
	[6]='AmiBerry fast boot'
	[7]='Console auto login'
	[8]='AmiBerry standard boot'
	[9]='DXX-Rebith'
	[10]='CAVA Spectrum'
	[11]='Chromium'
	[12]='NULL'
	[13]='NULL'
	[14]='Custom'
	[15]='JRiver'
	[16]='Desktop LightDM login'
)

# Convert software index to title array
aSOFTWARE_NAME=(
	[0]='OpenSSH Client'
	[1]='Samba Client'
	[2]='Curlftpfs'
	[3]='MC'
	[4]='ViFM'
	[5]='ALSA'
	[6]='Xserver'
	[7]='FFmpeg'
	[8]='Java'
	[9]='Node.js'
	[10]='iftop'
	[11]='IPTraf'
	[12]='Iperf'
	[13]='MTR-Tiny'
	[14]='nLoad'
	[15]='tcpdump'
	[16]='Build-Essentials'
	[17]='Git Client'
	[18]='Emacs'
	[19]='Jed'
	[20]='Vim'
	[21]='Vim-Tiny'
	[22]='QuiteRSS'
	[23]='LXDE'
	[24]='MATE'
	[25]='XFCE'
	[26]='GNUStep'
	[27]='TightVNC Server'
	[28]='VNC4 Server'
	[29]='XRDP'
	[30]='NoMachine'
	[31]='Kodi'
	[32]='YMPD'
	[33]='AirSonic'
	[34]='SubSonic 6'
	[35]='SqueezeBox'
	[36]='SqueezeLite'
	[37]='Shairport Sync'
	[38]='BruteFIR'
	[39]='ReadyMedia'
	[40]='Ampache'
	[41]='Emby Server'
	[42]='Plex Media Server'
	[43]='Murmur'
	[44]='Transmission'
	[45]='Deluge'
	[46]='qBitTorrent'
	[47]='ownCloud'
	[48]='Pydio'
	[49]='Gogs'
	[50]='Syncthing'
	[51]='OpenTyrian'
	[52]='Cuberite'
	[53]='MineOS'
	[54]='Forums'
	[55]='Wordpress'
	[56]='Image Gallery'
	[57]='BaiKal'
	[58]='OpenBazaar'
	[59]='RPi Cam Control'
	[60]='WiFi Hotspot'
	[61]='Tor Hotspot'
	[62]='DietPi-Cloudshell'
	[63]='LinuxDash'
	[64]='PhpSysInfo'
	[65]='NetData'
	[66]='RPi-Monitor'
	[67]='NoIp'
	[68]='Remot3.it'
	[69]='RPi.GPIO'
	[70]='WiringPi'
	[71]='WebIOPi'
	[72]='I2c'
	[73]='Fail2Ban'
	[74]='InfluxDB'
	[75]='LASP'
	[76]='LAMP'
	[77]='Grafana'
	[78]='LESP'
	[79]='LEMP'
	[80]='NULL'
	[81]='LLSP'
	[82]='LLMP'
	[83]='Apache2'
	[84]='Lighttpd'
	[85]='Nginx'
	[86]='NULL'
	[87]='SQlite'
	[88]='MariaDB'
	[89]='PHP'
	[90]='phpMyAdmin'
	[91]='Redis'
	[92]='CertBot'
	[93]='Pi-hole'
	[94]='ProFTP'
	[95]='vsFTPD'
	[96]='Samba'
	[97]='OpenVPN'
	[98]='HaProxy'
	[99]='EmonPi'
	[100]='PiJuice'
	[101]='Log Rotate'
	[102]='Rsyslog'
	[103]='DietPi-Ramlog'
	[104]='Dropbear'
	[105]='OpenSSH Server'
	[106]='NTP'
	[107]='rTorrent'
	[108]='AmiBerry'
	[109]='NFS'
	[110]='NFS Client'
	[111]='UrBackup server'
	[112]='DXX-Rebirth'
	[113]='Chromium'
	[114]='Nextcloud'
	[115]='Webmin'
	[116]='SickRage'
	[117]='PiVPN'
	[118]='Mopidy'
	[119]='CAVA'
	[120]='RealVNC Server'
	[121]='Roon Bridge'
	[122]='Node-Red'
	[123]='Mosquitto '
	[124]='NAA daemon'
	[125]='Tomcat8'
	[126]='LibSSL1.0.0'
	[127]='NeoVim'
	[128]='MPD'
	[129]='O!MPD'
	[130]='Python Pip'
	[131]='Blynk Server'
	[132]='Aria2'
	[133]='YaCy'
	[134]='Tonido'
	[135]='IceCast'
	[136]='MotionEye'
	[137]='CloudPrint'
	[138]='VirtualHere'
	[139]='SABnzbd'
	[140]='SDL2'
	[141]='Spotify Connect Web'
	[142]='CouchPotato'
	[143]='Koel'
	[144]='Sonarr'
	[145]='Radarr'
	[146]='Tautulli'
	[147]='Jackett'
	[148]='JRiver MC'
	[149]='NZBget'
	[150]='Mono'
	[151]='Nvidia'
	[152]='Avahi-Daemon'
	[153]='OctoPrint'
	[154]='Roon Server'
	[155]='HTPC Manager'
	[156]='Steam'
	[157]='Home Assistant'
	[158]='Minio'
	[159]='Allo'
	[160]='Allo_update'
	[161]='FuguHub'
	[162]='Docker'
	[163]='Gmediarender'
	[164]='Nukkit'
	[165]='Gitea'
	[166]='PI-SPC'
	[167]='Raspotify'
	[168]='moOde'
	[169]='Google AIY'
)

# - v6.10 software index changes
aSOFTWARE_NAME6_10=()
for i in ${!aSOFTWARE_NAME[@]}
do

	aSOFTWARE_NAME6_10[$i]="${aSOFTWARE_NAME[$i]}"

done
#aSOFTWARE_NAME6_10[2]='NULL' # CurlTMPFS Removed but not marked as removed => v6.12
aSOFTWARE_NAME6_10[80]='Ubooquity'
aSOFTWARE_NAME6_10[86]='Roon Extension Manager'
aSOFTWARE_NAME6_10[106]='NULL' # NTP
aSOFTWARE_NAME6_10[168]='NULL' # Moode

# - v6.11 hotfix
aSOFTWARE_NAME6_11=()
for i in ${!aSOFTWARE_NAME6_10[@]}
do

        aSOFTWARE_NAME6_11[$i]="${aSOFTWARE_NAME6_10[$i]}"

done

# - v6.12
aSOFTWARE_NAME6_12=()
for i in ${!aSOFTWARE_NAME6_11[@]}
do

        aSOFTWARE_NAME6_12[$i]="${aSOFTWARE_NAME6_11[$i]}"

done
aSOFTWARE_NAME6_12[2]='NULL' # CurlTMPFS
aSOFTWARE_NAME6_12[148]='NULL' # JRiver

# - v6.13
aSOFTWARE_NAME6_13=()
for i in ${!aSOFTWARE_NAME6_12[@]}
do

        aSOFTWARE_NAME6_13[$i]="${aSOFTWARE_NAME6_12[$i]}"

done
aSOFTWARE_NAME6_13[2]='Folding@Home'
aSOFTWARE_NAME6_13[106]='Lidarr'

# - v6.14
aSOFTWARE_NAME6_14=()
for i in ${!aSOFTWARE_NAME6_13[@]}
do

        aSOFTWARE_NAME6_14[$i]="${aSOFTWARE_NAME6_13[$i]}"

done
aSOFTWARE_NAME6_14[38]='FreshRSS'

# - v6.15 testing
aSOFTWARE_NAME6_15=()
for i in ${!aSOFTWARE_NAME6_14[@]}
do

        aSOFTWARE_NAME6_15[$i]="${aSOFTWARE_NAME6_14[$i]}"

done

# Copy files to RAM to speed up grep
mkdir -p /tmp/survey-report
cp /home/dietpi-survey/survey/*.txt /tmp/survey-report/

for file in /tmp/survey-report/*.txt
do

	# Filled and empty survey files
	((SURVEY_COUNT_TOTAL++))
	if [[ ! -s $file ]]; then

		((SURVEY_COUNT_EMPTY++))
		continue

	fi

	# v6.10+: files can be sourced:
	if grep -q '^#!/bin/bash' $file; then

		. $file
		continue

	fi

	# pre v6.10: Files need to be scraped:

	# Reset variables
	survey_version=0
	survey_sendcount=0
	dietpi_version='0.0'
	device_name='NULL'
	cpu_arch=0
	cpu_count=0
	distro_version='NULL'
	autostart_option=-1
	software_list=''
	software=''

	# Survey versions
	#survey_version=$(grep -m1 '^DietPi-Survey v' $file)
	#((aSURVEY_VERSION[${survey_version##* v}]++))
	# - Can only be v5 on pre v6.10
	((aSURVEY_VERSION[5]++))

	# Upload count numbers
	survey_sendcount=$(grep -m1 '^Upload Count' $file)
	((aSURVEY_SENTCOUNT[${survey_sendcount##* : }]++))

	# DietPi versions
	#dietpi_version=$(grep -m1 '^DietPi Version' $file)
	# As survey runs on v6.9 currently within patch file, the version string is still at v6.8. Currently manual edit is needed, on v6.10 survey will run on dietpi-update after version string increase.
	#dietpi_version=${dietpi_version/6.8/6.9}
	#((aDIETPI_VERSION[${dietpi_version##* : }]++))
	# - Can only be v6.9
	((aDIETPI_VERSION[6.9]++))

	# Device name
	device_name=$(grep -m1 '^Hardware Name' $file)
	((aDEVICE_NAME[${device_name##* : }]++))

	# CPU architecture
	cpu_arch=$(grep -m1 '^CPU Arch Index' $file)
	((aCPU_ARCH[${aCPU_NAME[${cpu_arch##* : }]}]++))

	# CPU core count
	cpu_count=$(grep -m1 '^CPU Count' $file)
	((aCPU_COUNT[${cpu_count##* : }]++))

	# Distro version
	distro_version=$(grep -m1 '^Distro Name' $file)
	((aDISTRO_VERSION[${distro_version##* : }]++))

	# Autostart option
	autostart_option=$(grep -m1 '^Autoboot Index' $file)
	((aAUTOSTART_OPTION[${aAUTOSTART_NAME[${autostart_option##* : }]}]++))

	# Installed software
	software_list=$(grep '^aSOFTWARE_INSTALL_STATE\[' $file)
	while read software
	do

		software=${software##*[}
		((aSOFTWARE[${aSOFTWARE_NAME[${software%%]*}]}]++))

	done <<< "$software_list"

done

SURVEY_SENTCOUNT_TOTAL=0
for i in ${!aSURVEY_SENTCOUNT[@]}
do

	SURVEY_SENTCOUNT_TOTAL=$(( $SURVEY_SENTCOUNT_TOTAL + $i*${aSURVEY_SENTCOUNT[$i]} ))

done

cat << _EOF_ > /var/www/survey/index.html
<html>
	<head>
		<style>
			body {
				color: white;
				background-color: black;
				font-family: Verdana, Arial, Helvetica, sans-serif;
			}
			th, td {
				padding: 10px;
			}
			table, th, td {
				border: 1px solid white;
			}
		</style>
	</head>
	<body>
		<h2>DietPi-Survey report page:</h2>
		<i>Last update: $(TZ=UTC date "+%Y-%m-%d %T UTC")</i>
		<br>
		<table>
			<tr><td>Total user count</td><td align="right">$SURVEY_COUNT_TOTAL</td></tr>
			<tr><td>Users opted in</td><td align="right">$(( $SURVEY_COUNT_TOTAL - $SURVEY_COUNT_EMPTY ))</td></tr>
			<tr><td>Users opted out</td><td align="right">$SURVEY_COUNT_EMPTY</td></tr>
		</table>

		<h4>DietPi-Survey versions:</h4>
		<table>
			$(for i in ${!aSURVEY_VERSION[@]}; do echo "<tr><td>DietPi-Survey v$i</td><td align=\"right\">	${aSURVEY_VERSION[$i]}</td></tr>"; done | sort -nrk 1.24 -t '	')
		</table>

		<h4>DietPi-Survey upload counts:</h4>
		<table>
			<tr><td>Overall upload count</td><td align="right">$SURVEY_SENTCOUNT_TOTAL</td></tr>
			<tr><th>Upload count</th><th>by user count</th></tr>
			$(for i in ${!aSURVEY_SENTCOUNT[@]}; do echo "<tr><td>$i</td><td align=\"right\">	${aSURVEY_SENTCOUNT[$i]}</td></tr>"; done | sort -nrk 1.9 -t '	')
		</table>

		<h4>DietPi versions:</h4>
		<table>
			$(for i in ${!aDIETPI_VERSION[@]}; do echo "<tr><td>DietPi v$i</td><td align=\"right\">	${aDIETPI_VERSION[$i]}</td></tr>"; done | sort -nrk 1.20 -t '	')
		</table>

		<h4>Devices:</h4>
		<table>
			$(for i in "${!aDEVICE_NAME[@]}"; do echo "<tr><td>$i</td><td align=\"right\">	${aDEVICE_NAME[$i]}</td></tr>"; done | sort -nrk 2 -t '	')
		</table>

                <h4>CPU architectures:</h4>
                <table>
                        $(for i in ${!aCPU_ARCH[@]}; do echo "<tr><td>$i</td><td align=\"right\">	${aCPU_ARCH[$i]}</td></tr>"; done | sort -nrk 2 -t '	')
                </table>

                <h4>CPU core counts:</h4>
                <table>
                        $(for i in ${!aCPU_COUNT[@]}; do echo "<tr><td>$i Core(s)</td><td align=\"right\">	${aCPU_COUNT[$i]}</td></tr>"; done | sort -nrk 2 -t '	')
                </table>

		<h4>Distro versions:</h4>
		<table>
			$(for i in ${!aDISTRO_VERSION[@]}; do echo "<tr><td>$i</td><td align=\"right\">	${aDISTRO_VERSION[$i]}</td></tr>"; done | sort -nrk 2 -t '	')
		</table>

		<h4>Autostart options:</h4>
		<table>
			$(for i in "${!aAUTOSTART_OPTION[@]}"; do echo "<tr><td>$i</td><td align=\"right\">	${aAUTOSTART_OPTION[$i]}</td></tr>"; done | sort -nrk 2 -t '	')
		</table>

		<h4>DietPi-Automation:</h4>
		<table>
			<tr><td>Used by</td><td align="right">${aAUTO_SETUP_AUTOMATED[1]} of $((${aAUTO_SETUP_AUTOMATED[1]} + ${aAUTO_SETUP_AUTOMATED[0]})) users</td></tr>
		</table>

		<h4>Network interfaces:</h4>
		<table>
			$(for i in ${!aNETWORK_INTERFACE[@]}; do echo "<tr><td>$i</td><td align=\"right\">	${aNETWORK_INTERFACE[$i]}</td></tr>"; done | sort -nrk 2 -t '	')
		</table>

		<h4>Installed software titles:</h4>
		<table>
			$(for i in "${!aSOFTWARE[@]}"; do echo "<tr><td>$i</td><td align=\"right\">	${aSOFTWARE[$i]}</td></tr>"; done | sort -nrk 2 -t '	')
		</table>
	</body>
</html>
_EOF_

# Clean up tmp ramfs
rm -R /tmp/survey-report
